{"version":3,"sources":["src/map.js","src/Cell.js","src/Agent.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["map","MAX_PARKED_BIKES","Cell","world","type","x","y","agents","bikes","agent","filter","length","push","a","ctx","squareSize","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","globalAlpha","font","fillText","bikeAgents","pedestrianAgents","forEach","i","drawBike","drawPedestrian","Agent","cell","parked_cell","move_to","path","recalculatePath","bikePathfinder","pedestrianPathfinder","canPark","addBike","removeBike","Math","random","park","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","getCellAtCoordinates","checkAddAgent","moveAgent","shift","changeMoveTo","World","worldmap","state","spawns","rows","split","row","types","S","X","b","w","p","e","o","entries","rowData","c","EasyStar","js","setGrid","includes","setAcceptableTiles","spawn","floor","addAgent","removeAgent","sort","act","tickdelay","spawnspeed","document","getElementById","addEventListener","target","value","gameTick","tick","spawnAgent","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","getContext","canvas","width","height","drawCanvas","draw","requestAnimationFrame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["// const map = `\n// eeeeeeeeeee\n// eeeebbbbbbs\n// ebbbbepepee\n// ebeeeepepee\n// ebaauwwwwee\n// ebeeeeeeeee\n// eseeeeeeeee\n// `;\n\nconst map = `\neeeeeeeeeeeeeeeeeeeeeeeeeee\naaaaaaaaaaaaaaaaaaaaaaaaaaS\nebweeeeeeeeeeaeeeeeeeeeeeee\nebweeeeeeeeeeappppppppppeee\nebweeeeeeeeeeappppppppppeee\nebweeeeeeeeeeappppppppppeee\nebweeeeeeeeeeaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooabbbbbbbbbbbbb\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebweeooooooooaeeeeeeeeeeeee\nebwwwooooooooaeeeeeeeeeeeee\nebappoooppppoaeeeeeeeeeeeee\nebappoooppppoaeeeeeeeeeeeee\nebappooooooaaaeeeppppeeeeee\nebwwwooooooooaeeeppppeeeeee\nebwwwoooooooXaaaaaaaaaaaaaS\nebwwwooooooooaeeeppppeeeeee\nebwwwooooooooaeeeeeeeeeeeee\nebaaaaaaaaaaaaeeeeeeeeeeeee\nebaaaaaaaaaaaaaeeeeeeeeeeee\nebweeeeeeeeeeaaaeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\nebweeeeeeeeeeeeeeeeeeeeeeee\neSweeeeeeeeeeeeeeeeeeeeeeee\n`;\n\nexport default map;\n","const MAX_PARKED_BIKES = 8;\n\nclass Cell {\n  constructor(world, type, x, y) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 2\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 3\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 2\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 3\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.globalAlpha = 0.3;\n      ctx.fillStyle = \"#00ff00\";\n      ctx.fillRect(canvas_x, canvas_y + squareSize - 4, squareSize, 4);\n      ctx.globalAlpha = 1;\n\n      ctx.fillStyle = \"#00ff00\";\n      ctx.fillRect(\n        canvas_x,\n        canvas_y + squareSize - 4,\n        squareSize * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#000000\";\n      ctx.font = \"12px monospace\";\n      ctx.fillText(\n        \"\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          this.drawBike(ctx, x * squareSize + i * 10, y * squareSize);\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    // !! Debug to show number of agents in cell\n    // if([\"SPAWN\", \"BIKE_PATH\", \"PEDESTRIAN_PATH\", \"ALL_PATH\", \"PARKING\", \"BUILDING_ENTRANCE\"].includes(this.type)) {\n    //   ctx.font = '12px monospace';\n    //   ctx.fillStyle = \"black\";\n    //   // make text slightly transparent\n    //   ctx.globalAlpha = 0.3;\n    //   ctx.fillText(\"B:\" + this.agents.filter(({type}) => type === \"BIKE\").length, canvas_x + 2, canvas_y + 12);\n    //   ctx.fillText(\"P:\" + this.agents.filter(({type}) => type === \"PEDESTRIAN\").length, canvas_x + 2, canvas_y + 24);\n    //   // reset transparency\n    //   ctx.globalAlpha = 1;\n    // }\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    if (this.x === 12 && this.y === 20) {\n      color = \"orange\";\n      return color;\n    }\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#d65451\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#ebb3b3\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#dbdddb\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#9c9c9b\";\n        break;\n      case \"PARKING\":\n        color = \"#696059\";\n        break;\n      case \"EMPTY\":\n        color = \"#dae6c5\";\n        break;\n      case \"BUILDING\":\n        color = \"#84b0c5\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#5397b8\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y) {\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(x + 6, y + 2, 5, 20);\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#FF0000\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","class Agent {\n  constructor(world, type, cell) {\n    this.world = world;\n    this.type = type;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.move_to = [23, 5];\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.recalculatePath = true;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\" ? this.world.bikePathfinder : this.world.pedestrianPathfinder;\n  }\n\n  park() {\n    if (this.cell.canPark()) {\n      if (this.type === \"BIKE\" && this.cell.type === \"PARKING\" && this.parked_cell === null) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n      }\n    }\n  }\n\n  unpark() {\n    if (this.type === \"PEDESTRIAN\" && this.cell.type === \"PARKING\" && this.parked_cell !== null) {\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n      this.cell.removeBike();\n    }\n  }\n\n  changeMoveTo(x, y) {\n    this.move_to = [x, y];\n    this.path = null;\n    this.recalculatePath = true;\n  }\n\n  act() {\n\n    // Temporary: If possible, just randomly decide to park bike\n    if (this.type === \"BIKE\" && this.cell.type === \"PARKING\" && Math.random() < 0.1) {\n      this.park();\n      this.move_to = null;\n    }\n\n    // If it has a goal to move to, and route needs to be calculated\n    // calculate route and then move.\n    if (this.move_to !== null && this.recalculatePath == true) {\n      const pathfinder = this.getPathfinder();\n      pathfinder.findPath(this.cell.x, this.cell.y, this.move_to[0], this.move_to[1], (path) => {\n        if (path !== null) {\n          this.path = path;\n          this.recalculatePath = false;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n      });\n      pathfinder.calculate();\n      // If route is already calculated, just move to the next cell\n    } else if (this.move_to !== null && this.path !== null && this.path.length > 0) {\n      const nextCell = this.world.getCellAtCoordinates(this.path[0].x, this.path[0].y);\n      if (nextCell.checkAddAgent(this)) {\n        this.world.moveAgent(this, nextCell);\n        this.path.shift();\n      }\n      if (this.path.length === 0) {\n        this.move_to = null;\n        this.recalculatePath = true;\n      }\n      // Path is empty, so we are next to goal. Move into ti.\n    } else {\n      // If not, we can do other things such as looking for new goals\n      // or park the pike or something\n\n      // Temporary: If no goal and agent is now pedestrian, the agent must have\n      // just parked their bike. So we set a next goal: the entrance.\n      if (this.type === \"PEDESTRIAN\") {\n        this.changeMoveTo(12, 20);\n      }\n    }\n  }\n}\n\nexport default Agent;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import Cell from \"./Cell\";\nimport Agent from \"./Agent\"\nimport EasyStar from \"easystarjs\";\n\nclass World {\n  constructor(worldmap) {\n    this.state = [];\n    this.agents = [];\n    this.spawns = [];\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter(row => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      e: \"EMPTY\",\n      o: \"BUILDING\"\n    }\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const rowData = [...row].map((c, x) => {\n        const type = types[c];\n        const cell = new Cell(this, type, x, y);\n\n        if (type === \"SPAWN\") {\n          this.spawns.push(cell);\n        }\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    this.bikePathfinder.setGrid(this.state.map(row => row.map(cell => [\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\"\n    ].includes(cell.type) ? 1 : 0)));\n    this.bikePathfinder.setAcceptableTiles([1]);\n\n    this.pedestrianPathfinder.setGrid(this.state.map(row => row.map(cell => [\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\"\n    ].includes(cell.type) ? 1 : 0)));\n    this.pedestrianPathfinder.setAcceptableTiles([1]);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  // // Returns all neighbors of a cell\n  // getNeighbors(cell) {\n  //   const { x, y } = cell;\n  //   let neighbors = [];\n\n  //   // Get neighbors in all 4 directions\n  //   if (y > 0) {\n  //     neighbors.push(this.state[y - 1][x]);\n  //   }\n  //   if (y < this.state.length - 1) {\n  //     neighbors.push(this.state[y + 1][x]);\n  //   }\n  //   if (x > 0) {\n  //     neighbors.push(this.state[y][x - 1]);\n  //   }\n  //   if (x < this.state[y].length - 1) {\n  //     neighbors.push(this.state[y][x + 1]);\n  //   }\n  //   return neighbors;\n  // }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent() {\n    // Randomly pick a spawn cell\n    const spawn = this.spawns[Math.floor(Math.random() * this.spawns.length)];\n\n    // Add agent of type \"BIKE\" to this cell\n    const agent = new Agent(this, \"BIKE\", spawn);\n    this.agents.push(agent);\n    spawn.addAgent(agent);\n  }\n\n  // // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.agents.sort(function () {\n      return 0.5 - Math.random();\n    })\n    for (const agent of this.agents) {\n      const cell = agent.cell;\n      agent.act();\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap from \"./map\";\n\nimport Cell from \"./Cell\";\nimport Agent from \"./Agent\"\nimport World from \"./World\"\n\nconst squareSize = 32;\n\nlet tickdelay = 100;\nlet spawnspeed = 0.2;\n\n// **********************************\n// Controls\n// **********************************\n\n// Control tickdelay using range input with id \"tickdelay\"\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickdelay = e.target.value;\n});\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n});\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nconst world = new World(worldmap);\n\n// **********************************\n// This is where the simulation loop\n// goes later or something\n// **********************************\n\n\nfunction gameTick() {\n  // Move current agents\n  world.tick();\n\n  // Spawn new agent sometimes\n  if(Math.random() < spawnspeed) {\n    world.spawnAgent();\n  }\n\n  setTimeout(gameTick, tickdelay);\n}\n\ngameTick();\n\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\nconsole.log(canvasWidth, canvasHeight);\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\nfunction drawCanvas() {\n  for(const [y, row] of world.state.entries()) {\n    for(const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}