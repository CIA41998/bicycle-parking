{"version":3,"sources":["src/map.js","src/Cell.js","src/Agent.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["map","mapDirection","MAX_PARKED_BIKES","Cell","world","type","x","y","allowed_direction","agents","bikes","agent","filter","length","push","a","ctx","squareSize","drawDirection","drawCoords","drawCount","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","font","globalAlpha","arrow","fillText","String","padStart","bikeAgents","pedestrianAgents","forEach","i","path","cell","drawBike","drawPedestrian","includes","orientation","Agent","strategy","spawn","parked_cell","move_to","exitRate","failedToPark","searchTime","lotPreference","calculatingPath","stage","ticks","ticks_to_parked","ticks_to_goal","bikePathfinder","pedestrianPathfinder","addTimeToPark","addTimeToGoal","canPark","addBike","hasParked","removeBike","callback","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","checkAddAgent","moveAgent","shift","parkingCell","getRandomCellOfType","changeMoveTo","getCellAtCoordinates","makeMove","park","buildingCell","hasReachedGoal","Math","random","unpark","removeAgent","min","max","floor","location","coordinates","Array","randomValueInRange","lotOptions","lotMove","lotSearch","options","lot","coords","Q","grid","label","BFS","V","pop","dirs","next","state","valid_types","undefined","default","parkingLotPreference","closest_strat","getDirectionArray","direction","EasyStar","BOTTOM","TOP","LEFT","RIGHT","World","worldmap","selectedStrategies","tickCount","rows","split","row","directionRows","types","S","E","X","b","w","p","_","o","js","entries","directionRow","rowData","c","setDirectionalCondition","setGrid","setAcceptableTiles","setTileCost","cells","flat","addAgent","sort","act","experimentTicks","automatedLoopLength","maxSpawnRateLimit","STRATEGIES","currentTick","csvRowsPark","csvRowsGoal","timeToParkData","timeToGoalData","experimentMode","spawnRateType","minSpawnRate","maxSpawnRate","tickDelay","spawnspeed","paused","reset","strategyName","toLowerCase","replace","s","d","toUpperCase","document","getElementById","onclick","getSpawnRate","currentBin","pow","sin","PI","spawnRates","updateSpawnRates","drawSpawnRate","innerHTML","canvas","getContext","width","height","barWidth","barHeight","clearRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","currentIndex","arc","fill","addEventListener","e","target","value","round","event","disabled","strategyCheckboxes","container","createElement","classList","add","checkbox","id","checked","htmlFor","appendChild","createTextNode","data","index","indexOf","google","charts","load","packages","setOnLoadCallback","DrawChart","openResultsModal","closeResultsModal","style","display","visualization","arrayToDataTable","bar","gap","interpolateNulls","chartArea","left","top","bottom","histogram","bucketSize","maxNumBuckets","minValue","maxValue","lastBucketPercentile","chart","Histogram","draw","gameTick","rate","spawnAgent","tick","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","drawCanvas","requestAnimationFrame","downloadCSV","csv","filename","csvFile","downloadLink","Blob","download","join","href","window","URL","createObjectURL","body","click","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"mappings":"AOAA,AJAA,ACAA,AEAA,AIAA,ACAA,IDAIsR,ACAAW,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AJCA,AJAA,ACAA,AEAA,ADDA;AEEA,AJAA,ACAA,ACDA,AKAA,ACCA,SDDSX,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AHE9B,AJAA,ACAA,ACDA,EKAE,ACCA,IDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;AJCF,AJAA,ACAA,ACDA,IKAIhB,SAAS,GAAGE,YAAY,EAAxB;AHEJ,AJAA,ACAA,ACDA,EKAG,ACADa,OAAO,CAACE,MAAR,GAAiB,YAAY;AJE/B,AJAA,ACAA,ACDA,ALLA,IWKIH,AXLEpS,GAAG,CWKD,CAACwS,MAAL,u1CXLJ;AOOA,AJAA,ACAA,ACDA,AHNA,AMAA,ARuCO,EUjCL,ACAC,CAFD,CXmCWvS,KUjCJqR,OViCgB,EUjCvB,61CViCK;AO/BP,AJAA,ACAA,ACDA,AKAC,ADPD;AFSA,AJAA,ACAA,ACDA,AGPA,EGMEe,OAAO,CAACrB,IAAR,CXuEahR,EWvEEoS,IAAI,CAACpB,IAAL,CAAUjJ,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgC0K,IAAI,CAACC,GAAL,EAA/C;AJGF,AJAA,ACAA,ACDA,AKAA,ADRA,EEOEN,IAAI,CAACO,EDCEnB,QCDP,CAAgBoB,GDClB,GAAwB,MCDtB,CAA6BP,OAA7B,EAAsCD,IAAI,CAACS,WAA3C;AJGF,AJAA,ACAA,ACDA,AMDC,AHPD,EEQE;AHEF,AJAA,ACAA,ACDA,AIRA,ECQE,IAAI;AHEN,AJAA,ACAA,ACDA,AMDA,AVXA,ISYI,ACDAC,AVXE5S,MSYI,IAAIuR,ACDA,GAAG,EDCP,CTZY,CSYlB,ACDJ,EVXyB,CAAzB;AMcA,AHAA,ACDA,EKAG,CAFD,CAEE,OAAOC,GAAP,EAAY;AHEhB,AHAA,ACDA,AMFA,IDEI,ATZEvR,ISYEwR,CCFCoB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGrB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;AHEJ,AHAA,ACDA,EMFE,AVVA,IUUIiB,UAAJ,AVVY1S,EUUI,GVVhB,EAAmBC,IAAnB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,iBAA/B,EAAkD;AMcpD,AHAA,ACDA,IKDI,ACDA,AVXgD,ISY5CmR,OAAJ,EAAa;AHGjB,AHAA,ACDA,EMFG,IDCG,OAAOG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AHGN,AHAA,ACDA,IKDK,ATbD,KAAKtR,IAAL,GAAYA,IAAZ;AMgBJ,AHAA,ACDA,EKDG,ACDDyS,EVZE,KAAKxS,CAAL,EUYQ,CVZCA,CAAT,CUYW2P,UAAU,CAAC,YAAY;AJItC,AHAA,ACDA,IMFI,AVZA,IUYI+C,CVZCzS,CAAL,GUYS,AVZAA,CAAT,EUYYyK,QAAQ,CAACiI,gBAAT,CAA0B,wBAA1B,CAAZ;AJIJ,AFDA,EKDE,ETbE,KSaK,ATbAxS,GSaP,GTbE,GAAc,EAAd;AMgBJ,AFDA,AKDC,ICFG,AVXA,KUWK,AVXAC,IUWI0B,CAAC,AVXV,GUWa,AVXA,CUWb,AVXA,EUWgBA,CAAC,GAAG4Q,KAAK,CAACnS,MAA1B,EAAkCuB,CAAC,EAAnC,EAAuC;AJK3C,AFDA,IJdI,EUWE,GVXG5B,CUWCyR,MAAM,CAACH,SVXb,CUWM,CAAkBkB,CVXCxS,IUWI,CAAC4B,CAAD,CAAL,CAAS4O,IAA3B,KVXN,CUW2CiB,MAAM,CAACT,YAAP,EAAzC,EAAgE;AJKtE,AFDA,AKDA,ETbG,EAED,IUSMW,CDECL,SCFS,CDElB,ACFmBkB,CDECjB,GAApB,CCFwB,CDEC,ACFA3P,CAAD,CAAN,CAAV;AJKR,AFDA,EKDE,ICFK,GDEE,CAAC,KAAK2P,GAAN,EAAWnH,OAAX,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;AHGF,AFDA,AKDC,ICFI;AJKL,AFDA;AEEA,AFDA,AKDAoH,ICFIc,GDEG,CAACtB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AHGA,AFDA,AKDAS,ECFG,CATsB,EASpB,EDEE,ACXkB,CDWjBF,ACXN,GVJA,OSeF,GAAqBA,UAArB,GTfgBnR,KAAd,EAAqB;AMkBvB,AFDA,AMHC,MVbG,IAAI,KAAKN,IAAL,KAAc,OAAlB,EAA2B;AMkB/B,AFDA,QJhBM,OAAO,IAAP;AMkBN,AFDA,AMHA6S,MAAM,AVbD,CUaElB,OAAP,GAAiBe,SAAjB;AJKA,AFDA,AI5BA;AF8BA,AFDA,AI5BA,IPJMpQ,EDgBF,IAAI,KAAKtC,IAAL,KAAc,mBAAd,IAAqCM,KAAK,CAACN,IAAN,KAAe,YAAxD,EAAsE;AMkB1E,AFDA,AI5BA,EPJE,MDgBI,OAAO,EChBCD,EDgBR,GChBJ,EAAmBC,IAAnB,EAAyBiC,IAAzB,EAA+BM,QAA/B,EAAyC;AKkC3C,AFDA,AI5BA,IPL2C,AOKrC6G,ERYD,CAPkB,CAQnB,WQbiB,GAAG,KAAxB;AF8BA,AFDA,AI5BA,IAAMC,ERaF,iBQbqB,GAAG,GAA5B;AF8BA,AFDA,AI5BA,IPNI,AOMEC,ERaF,GCnBKvJ,KAAL,GAAaA,IOMM,CPNnB,EOMsB,CAA1B,EAEA;AF4BA,AFDA,AI1BA,IPRI,EDmBA,GCnBKC,IAAL,GAAYA,IAAZ;AKoCJ,AFDA,AI1BA,IPRI,EDmBA,GCnBKwC,KAAL,GAAaP,IAAb;AKoCJ,AFDA,IHlCI,KAAKA,IAAL,GAAYA,IAAZ;AKoCJ,AFDA,AGtCA,ACYA,IPRI,AOQEsH,KPRG9G,AMJAqE,KCYO,GAAG,CACjB,EPTE,GAAmB,GMJvB,CNII,AMJuBC,MCYR,EAEjB,CDdF,EAAsC,aCYnB,EAGjB,cAHiB,CAAnB,EAMA;AFsBA,AFDA,EGtCE,ENIE,EDiBA,GCjBKxE,CDkBHjC,AOtBIyG,KPsBC,CAAC/G,CClBR,EMJF,CNIkBuC,ADkBd,KAAe,GClBjB,GDkBE,IACA,KAAKnC,MAAL,CAAYG,MAAZ,CAAmB;AMiBzB,AFDA,AIrBA,IPbI,AMJA,ACiBAgH,IRKqB,CClBhB7E,AMJA,GPsBmB1C,AOtBxB,INIA,ADkBqB,GClBN,GOaG,CPblB,CDkBwBA,CQLH,CACvB,ERIuB,aQLA,EAEvB,gBAFuB,EAGvB,cAHuB,CAAzB;AFuBA,AFDA,AIhBA,IPlBI,AOkBAwJ,EDtBE,EPqBmB,CCjBhB7G,IMJI,CAACqE,CPqByBhH,AQCxB,EPlBX,COkBc,CRDyB,AQC3C,CPlBoB,IAAhB,ADiB4C,CCzBL,CAQjB,IDiBD,GOrBX,CAASiH,MAAV,CAAP;ADwCN,AFDA,AIfA,IPlBI,AOkBAwC,ERHqB,CAAnB,EAAkDjJ,MAAlD,AQGS,GAAG,CRHgD,EAF9D,EAGE,YQEN;AFiBA,AFDA,AIfA,IDxBI,ACwBAkJ,IRFE,COtBG,GAAL,GPsBS,AQEE,GAAG,ERFZ,eQEN;AFiBA,AFDA,AIdA,IPpBI,AOoBAC,ERHC,AOtBC,GNKG/G,IMLI,CAACoE,ICyBI,GPpBd,AOoBiB,CAACO,EPpBE,CAApB,CAXuC,CAWhB,MMLb,CAASL,GAAV,CAAP,ECyBe,CAArB;AFgBA,AFDA,AIdA,IAAI0C,cAAc,GAAG,CAACrC,kBAAD,CAArB;AFgBA,AFDA,AIbA,IPtBI,AMLA,AC2BAsC,ERLA,GCjBKhH,AMLA,CPuBHvC,EOvBF,GPuBO,CAACN,EQIM,CPtBd,CDkBE,CQIe,CPtBC,CAAlB,CAZuC,CAYlB,ADkBJ,CQIrB,WRJM,IACA,KAAKI,MAAL,CAAYG,MAAZ,CAAmB;AMkBzB,AFDA,AIZA,IAAIuJ,ED5BE,EPuBmB,IAAG9J,COvBf,CAACgH,EPuBW,CQKR,GAAG,KRLQhH,CQK5B,EAEA,CRPyB,IOvBX,CAASmH,IAAV,CAAP;AD0CN,AFDA,IHpCI,IDkBqB,CClBhBrE,MDkB8B9C,IAAI,GClBvC,EDkB4C,CClBvB,IAArB,CAbuC,CAaZ,KDkBN;AMoBzB,AFDA,AIXA,IPxBI,AMNA,AC8BE+J,ERRmB,CAAnB,EAAwDvJ,AOtBrD,GAAL,GPsBE,CQQY,GRRsD,AQQnD,ERVjB,CQUJ,CRPM;AMoBN,AFDA,AIXA,IPxBI,AOwBAwJ,ED9BE,EPuBA,KOvBO,CAAChD,CPuBD,CQOG,GAAG,CRPb,AQON,EAEA,WDhCc,CAASI,KAAV,CAAP;AD2CN,AFDA,MJlBK;AMoBL,AFDA,AIVA,IP1BI,AMNA,ACgCA6C,KP1BKjI,AMNA,GAAL,CNMA,AO0BS,GP1BG,AO0BA,EAAhB,EP1BI;AKsCJ,AFDA,AIVA,IP1BI,AO0BAkI,ERTA,AOvBE,GNMGnH,CDkBHzC,GOxBO,CAAC0G,ACgCA,CRRH,CAAChH,CQQK,GRRX,AQQN,IP1BI,CDkBiB,EClBM,IDkBrB,CClBF,CMNU,CAASkH,CPyBjB,EOzBO,EAAeF,CPyBjB5G,MAAL,CAAYG,MAAZ,CAAmB,IOzBG,CAAS0G,MAAxB,CAAP;AD4CN,AFDA,AITA,IP3BI,AO2BAkD,IRTqB,CClBhBnH,CO2BC,ERTkBhD,CQSf,CP3BT,EDkBqB,CClBR,CO2BjB,EAEA,KRX4BA,EClBxB,EDkBqB;AMoBzB,AFDA,AIPA,IP5BI,AMRA,IPwBqB,CChBhBiD,AMRA,GAAL,ENQA,CDgBmCjD,EChBtB,CAAb,CDgBuC,KAAK,YAAvB;AMqBzB,AFDA,AIPA,IP5BI,EDeqB,AOvBnB,CPuBA,ECfGkD,ADeqD1C,IOvBjD,CAACwG,CPuBR,IAAkE,EAFpE,EAGE,CChBF,GAAuB,IAAvB,EMRU,CAASG,IAAV,EAAgBH,mBAAA,CAASI,KAAzB,CAAP;AD6CN,AFDA,AINA,IP7BI,IDgBE,CChBGjE,MDgBI,KAAP,EChBF,GAAqB,IAArB;AKqCJ,AFDA,EHnCG,EMTC,EPyBC;AMqBL,AFDA,AIPA,MDrCM,GCqCGiH,IDrCI,CAACpD,ACqCd,GAAiB,gBDrCH,CAASE,GAAV,EAAeF,mBAAA,CAASC,MAAxB,EAAgCD,mBAAA,CAASG,IAAzC,EAA+CH,mBAAA,CAASI,KAAxD,CAAP;AD8CN,AFDA,EG3DE,ACoDArH,IRbE,CQaG,GRZDO,AQYI,IAAI+G,CRZH,CAACrH,IAAN,KAAe,GQYX,CAAUsH,QRZd,IACA,AQWI,EAAoB1H,GRXnBQ,MAAL,CAAYG,MAAZ,CAAmB,AQWf,CAAR;AFSF,AFDA,AG5CC,ECqCCoJ,MRZuB,IAAG3J,IAAH,AQYT,GAAG,CAACuH,KRZQvH,IAAH,SQYN,CAAjB;AFSF,AFDA,EIPE4J,MRbuB,GCjBvB,IDiBqC5J,CQavB,GRb2B,AQaxB,CAACuH,IRb4B,MAAvB,MCjBP,EO8BC,CAAjB;AFSF,AFDA,EIPEkC,EDrCIpC,ENOF,ADgBqB,CAAnB,EAAkD7G,IChB7C,AO8BE,ERdP,CQcU,EP9BAR,CDgBkD,EAF9D,CCdO,CDiBL,ICjBmB,MAAd,AO8BT,GP7BM,KAAKD,KAAL,CAAWqD,cADR,GAEH,KAAKrD,KAAL,CAAWsD,oBAFf;AKuCJ,AFDA,EG5CE,ACqCAqG,EP5BC,IDeG,KQaO,ERbA,CQaG,CDrCFpC,GPwBR,KOxBJ,EAAsB1H,MCqCtB,MDrCA,EAAoC2H,kBAApC,EAAwD;AD8C1D,AFDA,EIPEiC,EDtCwD,EPyBrD,OQaQ,GAAG,CAAd;AFSF,AFDA,EIPEK,cAAc,GAAG,KAAjB;AFSF,AFDA,AIPC,EAED,ED1C0D,EP0BtD,KCfF,EDeS,IAAP,eCfU;AKsCd,AFDA,IJrBG,ECfC,KAAK3G,eAAL,GAAuB,KAAKD,KAA5B;AKsCJ,AFDA,IGhDI,ENYA,GMZKuD,CNYLlD,IMZA,GAAa,EAAb,WNYA,EAAc,KAAKf,QAAnB,EAA6B,KAAKW,eAAlC;AKsCJ,AFDA,AIPA,IP7BG,AMZC,KAAK9C,ACyCAiK,MDzCL,GAAc,EAAd,CCyCJ,CAAsB9H,QAAtB,EAAgC;AFShC,AFDA,EIPE,EDxCE,KAAKiF,ACwCAjF,ERfP,MQee,CDxCb,ACyCC+H,GDzCgB,CAAjB,CAJsD,CAMtD,KPuBOhK,AQeF,GAEJiK,ERjBH,EAAgB,GQeT,CAEI,eAFJ,EAEqB,UAACC,CAAD,EAAI9B,CAAJ,EAAO+B,CAAP;AFO9B,AFDA,IIN8B,ERhB1B,KAAKrK,AQiBHsI,CAAC,GAAGA,CAAC,CRjBP,AQiBQgC,CRjBIjK,IAAZ,CAAiBH,KAAjB,AQiBM,EAAH,GAAqB,MAAMmK,CAAC,CAACC,WAAF,EADJ;AFQ9B,AFDA,EIP8B,CAFrB,CRbN,AOxBC,ACqCF,IDrCQjD,GNSR,CMTY,GAAGH,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBnH,CNSnB,KMTF,CAA4B,UAACoH,GAAD;ADgD7C,AFDA,AILC,EAED,IPlCI,AMVyC,KNUpCxE,EMV6CwE,GAAG,CAACnH,MAAJ,CNUlD,EMV+D,CNU1C,AMVoB,KNUfyC,KAA1B;AKuCJ,AFDA,IGhD6C,CAA5B,CNWb,AMXA,INWAM,oBAAA,EAAc,KAAKhB,QAAnB,EAA6B,KAAKY,aAAlC;AKuCJ,AFDA,IHrCG,AMXC,IAAMyE,GPyBR,UOzBqB,GAAGhI,QPyBZU,IOzBwB,CPyBpC,AOzBqCoH,EPyBlB,GOzBK,CAAmB,IAAnB,EAAyBnH,MAAzB,CAAgC,UAACoH,GAAD;ADkD1D,AFDA,AILAgD,MRlBI,AO1BsD,EC4ClD,CAACC,ERlBAxK,EO1B0DuH,GAAG,CP0BlE,AO1BmEnH,GP0BrD,GO1BiD,AC4CnE,CAAwB,CRlBDJ,CO1ByD,CAAtB,IP0BxC,CAAYG,MAAZ,CAAmB,EQkBrC,EAA2CsK,MRlBLnK,CAAD,AQkBrC,GAAqD,YAAY;AFOjE,AFDA,EILE0J,ED7CwD,CAAhC,CAAtB,CARsD,ACqDnD,CRnB8B,AOxBjC,OPwBwC1J,CAAC,KAAKJ,KAAb;AM0BrC,AFDA,EILEuJ,IRpBmC,CAAnB,CAAd,GCbF,KOiCc,GAAG,IAAjB,IPjCO;AKwCT,AFDA,EILEM,ERpBC,AOxBC,ENWA,EMXMtC,AC4CF,EPjCA,COiCG,ED5CI,ENWF5F,CMXK,AC4ChB,GPjCM,CAAUuB,OAAV,EAAJ,EAAyB;AKwC7B,AFDA,AILC,CAJD,EAMA,GD9CM,ENWA,IACE,KAAKxD,IAAL,KAAc,MAAd,IACA,KAAKiC,IAAL,CAAUjC,IAAV,KAAmB,SADnB,IAEA,KAAKyC,WAAL,KAAqB,IAHvB,EAIE;AKoCR,AFDA,AIHA,MD9CMqF,CAAC,EAAE,CNeD,KAAKrF,CMjBK,UNiBV,GAAmB,KAAKR,IAAxB;AKoCR,AFDA,AIHA,MD9CM8F,CAAC,EAAE,CNeD,CDQN,ICRW/H,AMlBK,INkBV,GAAY,QDQR,ICRJ;AKoCR,AFDA,AIDA,MRzBI,AOvBEgI,CAAC,EAAE,CNeD,GDQG,ECRE/F,GDQGjC,CCRR,CAAUyD,EDQP,KCRH,ADQiB,CO3BP,QP2BP,IAA2B,KAAKpD,KAAL,GAAaR,gBAA/C;AM4BJ,AFDA,AIDA,IRzBG,EOvBGoI,CAAC,EAAE,CNeD,KAAKvE,KMpBK,INoBV;AKoCR,AFDA,AIAA,MDjDMwE,CAAC,EAAE,CNeD,OAAO,IAAP,KMrBU;ADyDlB,AFDA,MGjDMxH,CAAC,CNeA,CMfE,UAPS;AD0DlB,AFDA,MHlCK,AMfCyH,CAAC,EAAE,EPsBP,OO9BgB,YP8BN;AM6BZ,AFDA,AIFA,MRzBI,AOtBE,GC+CG2C,ERzBAzK,KAAL,KQyBJ,CAAsB0K,UAAtB,EAAkC;AFIlC,AFDA,EIFE,ERzBC,ECRC,AMdE3C,CAAC,EAAE,AC+CA2B,IPjCE,GMxBO,ENwBd,GOiCiB,GAAG,CAACC,YAAY,GAAGD,YAAhB,IAAgChF,IAAI,CAACiG,GAAL,CAAS,CAACjG,IAAI,CAACkG,GAAL,CAAUF,UAAU,GAAG1B,mBAAd,GAAqC,CAArC,GAAyCtE,IAAI,CAACmG,EAAvD,IAA6D,CAA9D,IAAmE,CAA5E,EAA+E,CAA/E,CAAtD;AFIF,AFDA,AIFC,EAED,EPnCG,EMdG7C,CAAC,EAAE;ADmDT,AFDA,IG7DkB,CAAd;AD+DJ,AFDA,IGhDI,KAAKjF,EPoBP,YOpBE,GAAsB,IAAI4D,GPoBf,gBOpBe,CAASsB,EAAb,EAAtB;ADkDJ,AFDA,AIFA,ID9CI,AC8CA6C,ER1BA,GOpBK9H,ENYP,ADQOhD,GQ0BK,ER1BV,CQ0Ba,EAAjB,UPlCW,AMZP,GAA4B,IAAI2G,mBAAA,CAASsB,EAAb,EAA5B,CA1BsD,CA4BtD;ADgDJ,AFDA,IJ5BG,AOlBC,ENUA,IACE,KAAKtI,IAAL,KAAc,YAAd,IACA,KAAKiC,IAAL,CAAUjC,IAAV,KAAmB,SADnB,IAEA,KAAKyC,WAAL,KAAqB,IAHvB,EAIE;AKkCN,AFDA,AIHA,QP7BM,CO6BG2I,IP7BEnJ,IAAL,CAAU0B,OO6BhB,GP7BM,AO6BsB;AFK5B,AFDA,EIHEwH,ED1EwD,IN6CpD,IO6BM,CP7BD1I,EO6BI,EAAb,OP7BI,GAAmB,IAAnB,gBMfqBgF,IAAI,CAACc,OAAL,EA9B+B;AD+E1D,AFDA,IG9E0D,IN8CpD,GDGJ,ECHSvI,IAAL,GAAY,KDGXW,CCHD,EDGJ,EAAUV,CAAV,EAAaC,CAAb,EAAgBU,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,EAAuDC,SAAvD,EAAkE;AM+BpE,AFDA,EIJE,IP5BG,ADE+D,CQ0B7D,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsH,mBAApB,EAAyCtH,CAAC,EAA1C,EAA8C;AFMhD,AFDA,IHhCG,AMhDuD,AC4EtDoJ,UAAU,CAAC1K,IAAX,CAAgBqK,YAAY,CAAC/I,CAAD,CAA5B;AFMJ,AFDA,EIJG,IR3BC,AOlDsD,IPkDhDf,QAAQ,GAAGf,CAAC,GAAGW,UAArB;AMiCJ,AFDA,AIJC,MR3BG,EOnDsD,EPmDhDK,QAAQ,GAAGf,CAAC,GAAGU,UAArB;AMiCJ,AFDA,MJ9BI,EOrDsD,EPqDlDM,CCHN,CMpBchB,CA9B0C,EPqD7C,GAAG,SAAZ,MCHWD,CAAb,EAAgBC,CAAhB,EAAmB0D,QAAnB,EAA6B;AKmC/B,AFDA,AILAwH,MP7B+B,ADK3BlK,EOvDsD,GPuDjD,COzBUyG,EPyBP,COvD8C,CC+E1C,GRxBCxG,CQ0BjB,WR1BY,CAAkBD,KAAlB,CAAR;AM+BJ,AFDA,MJ5BIP,GAAG,CAACS,SAAJ,GAAgBF,KAAhB;AM8BJ,AFDA,AIJA,MP/BI,ADOAP,EO3BE,CP2BC,AQwBE0K,CRxBDhK,CCPC0B,CMpBGyF,MP2BR,CAAaxH,GQwBjB,CAAuBwI,CDnDC,ENoBpB,CDOA,ECPuB,ADOAvI,ICPvB,CO+BJ,EAAoC,CRxBhC,EAAiCL,OO3BNgH,GP2B3B,EAA6ChH,QO3BL,CAACV,CP2BzC,AO3BwC,CAApB,CPkB4C,AOlB9D,CP6BF;AM4BJ,AFDA,EIJEyK,IP/BE,IO+BM,CP/BDjI,AO+BEkI,OP/BP,GAAe,CAAC3K,CAAD,EAAIC,AO+BrB,CP/BiB,AO+BO,CP/BtB,6BO+BF,EAAwDoL,SAAxD,GAAoEvG,IAAI,CAACM,KAAL,CAAW8F,UAAU,CAAC3B,WAAW,GAAGH,mBAAf,CAAV,GAAgD,GAA3D,IAAkE,GAAtI;AFMF,AFDA,EIJE,IP/BE,ADQA,AQuBIkC,EDpDF,EP6BE1K,CCRCmB,CMrBGyG,ACoDE,GP/BV,AO+BakC,GP/BD,CMrBG,GNqBf,AMrBkB,CP6BlB,AQuBqB,CAACC,CRvBH,aQuBN,CAAwB,EDpDfjD,GAAJ,EAAShI,GAAT,CAAa,CCoDlB,CAAf,QDpDkC+I,CAAD,EAAIzI,CAAJ,EAAU;AD0D7C,AFDA,EIJE,IP9BE,AO8BIU,ERvBFA,CQuBK,CP9BDkD,AMtBF,CP6BC,CAACvC,AQuBIiK,EDpDApL,EP6BR,EQuBc,CRvBH,AQuBIqL,CP9BD,GAAG,KAAK1H,CO8Bd,CAAkB,CDpDD,GAAG0E,ACoDpB,CRvBR,AQuBJ,MP9BqB,EAAnB,GMtB0C,CAACvI,CAAD,CAAtC;AD0DR,AFDA,EIJE,IP9BE4D,AO8BI4H,ERvBF9K,EO7BE,CP6BC,AQuBI,CRvBHS,EO7BIpB,ACoDEuL,EP9BF,CAACxH,CMtBG,ECoDI,CRvBhB,AO7Be8D,ACoDE4D,GRvBD,CCPlB,CACE,AMvBoB,ACoDxB,CDpDyB/C,CAAD,CAAlB,ENuBGzG,EDML,CAFiB,CCJjB,ADOA,CCPUhC,CADZ,EAEE,KAAKgC,IAAL,CAAU/B,CAFZ,EAGE,KAAKwC,OAAL,CAAa,CAAb,CAHF,EAIE,KAAKA,OAAL,CAAa,CAAb,CAJF,EAKE,UAACV,IAAD,EAAU;AK+BhB,AFDA,EIJE,IAAM0J,EPzBA,EM3BA,EN2BI1J,AOyBE,EDpDAC,CCoDGsJ,CPzBD,EM3BE,GN2BG,AM3BA,ACoDE,CAACG,GPzBhB,AM3BiB5L,EN2BE,COyBzB,UDpDmB,CAAS,KAAT,EAAeE,IAAf,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,iBAA3B,CAAb;AD0DR,AFDA,EIJE,IAAMwL,ERvBFhL,ECFI,CDED,CAACY,EQuBM,CPzBF,CAACS,COyBIyJ,GPzBT,EOyBc,CPzBFzJ,ADEhB,EQuBqBqH,CRvBH,CCFd,EDEJ,eQuBJ;AFMF,AFDA,EIJE,IAAMuC,EPzBC,ADEH,CCJE,CMzBA,EP6BEpK,GCFK,AM3BH,ACoDK,CDpDJ4B,CP6BE,CQuBKsI,ERvBF,EAAZ,EQuBoB,GAAGpC,GDpDrB,CAAoBX,aCoD1B,UDpDM,CAA4C1I,CAA5C,EAA+CC,CAA/C,EAAkD4G,iBAAiB,CAAC3G,iBAAD,CAAnE;AD0DR,AFDA,EIJEQ,GAAG,CAACkL,IPzBI7H,KOyBR,CAAc,CPzBC,AOyBf,CPzBgBC,COyBC,CAAjB,CPzBQ,CAAY,AOyBAwH,KAApB,EAA2BC,MAA3B,uBPzBQ;AK+BV,AFDA,EIJE/K,GAAG,CAACS,EPzBG,ADCH,EO7BE,EP6BE,GO7BE,ACqDV,CDrDWiC,CP6BElD,CQwBG,SAAhB,ORxBQ,EO7BF,CAA0BwI,EP6BG,GAA/B,EAAoC,gBO7BlC,CAAkD1I,CAAlD,EAAqDC,CAArD,EAAwD4G,iBAAiB,CAAC3G,iBAAD,CAAzE;AD2DR,AFDA,EIJEQ,GAAG,CAACU,IRxBEG,IQwBN,CRxBW,AQwBE,CAAb,ERxBc,AQwBE,CAAhB,ERxBM,AQwBaiK,KAAnB,EAA0BC,MAA1B,EAVkC,CAYlC;AFIF,AFDA,QH9BQ,ADED,CAFD,CO3BE,GN2BI,CAAC3I,CDEA,EO7BEd,EP6BE,EO7BT,GP6Bc9B,KCFd,GAAuB,KAAvB,IDES,KAA2B,GAA/B,EAAoC;AM8BjD,AFDA,EIHE,KAAK,CDtDA,CATe,CPsCdqB,AOtCF,CC+DKO,CAAC,GRzBC,AQyBE,CAAb,ERzBc,AQyBEA,CAAC,ERzBX,CQyBcsH,mBAApB,EAAyCtH,CAAC,EAA1C,EAA8C;AFKhD,AFDA,IIHIpB,GAAG,CP5BC,ADGD,AQyBCS,CR3BK,GCDDwC,GDGC,EQyBT,ERzBa,CCHG,AO4BA,IP5BI5B,ADGF7B,ICHM,CO4BxB,IP5B6B,IAAzB,EAA+B,EDGtB,KAA2B,GAA/B,EAAoC;AM8BjD,AFDA,IIHIQ,GAAG,CDvDD,ACuDEU,EP5BEuC,ADGFpC,GO9BE,CAACgF,CP8BE,CQyBT,CAAazE,CP5BC,ADGF,AQyBE,CDvDZ,CAAWtB,CP8BT,AQyBakL,GDvDf,CAAgBlD,ICuDlB,EAA2BiD,CDvDzB,KCuD+B,GAAGP,UAAU,CAACpJ,CAAD,CAAV,GAAgB6J,SAApD,EAA+DD,QAA/D,EAAyER,UAAU,CAACpJ,CAAD,CAAV,GAAgB6J,SAAzF;AFKJ,AFDA,EIHG,CAhBiC,CAkBlC,EDpGwD,ENsEjD,ADGF,CAFM,MAEA,IAAI,KAAKzL,iBAAL,KAA2B,GAA/B,EAAoC;AM8BjD,AFDA,MH/BO,CAfH,GDkBIqB,KAAK,GAAG,GAAR;AM8BR,AFDA,MH7BIqC,AM5CA,EP6CG,CAFM,MAEA,CCDC,CAACK,EDCE,KAAK/D,ECDlB,eDCa,KAA2B,GAA/B,EAAoC,OO7CN;AD2E3C,AFDA,EIHE,EP1BC,GO0BI,CDvEoC,EP8CnCqB,CQyBGO,CAAC,GRzBC,AQyBE,CAAb,ERzBc,AQyBEA,CAAC,ERzBX,CQyBcuH,iBAApB,EAAuCvH,CAAC,IAAI,GAA5C,EAAiD;AFKnD,AFDA,IIHIpB,ED3DC,CC2DE,CRzBA,AQyBCmL,CR3BK,MAEA,EQyBT,ERzBa,CQyBG,CAAhB,GRzBkB3L,iBAAL,KAA2B,GAA/B,EAAoC;AM8BjD,AFDA,IG1G0D,ACuGtDQ,GAAG,CAACoL,ERzBAvK,KAAK,GAAG,CQyBZ,ERzBI,CQyBc,SAAlB;AFKJ,AFDA,IIHIb,EDxGsD,CCwGnD,CRzBA,AQyBCqL,GP3BN,MO2BE,YP3BO7H,QAAT,EAAmB;AKgCrB,AFDA,IG5G0D,ACyGtDxD,EP3BA,CO2BG,CAACsL,EP3BA9H,IO2BJ,CAAW,CAAX,EP3BY,AO2BEuH,CP3BDtH,KO2BO,GAAGrC,CAAC,GAAG6J,CP3BvB,CAAuB,IAAvB,CAAJ,EAAkC,AO2BlC;AFKJ,AFDA,IIHIjL,ED1GsD,CC0GnD,CP3BD,ADCAA,AQ0BEuL,GR1BC,CAACzK,CCDC1B,CO2BP,CAAW0L,GP3BT,CAAWpH,CDCX,AQ0BF,CR1Be7C,CQ0BGkK,IR1BhB,ECDA,ADCoB1K,AQ0BE,CP3BD,EO2BIe,CAAC,CP3B1B,EAA2BoC,AO2BEyH,CR1BD,GAAG,EAA/B,ECDA,ADCmC3K,CQ0BrC,OR1B6C,GAAG,EAA9C,EAnBiB,CAoBjB;AM8BN,AFDA,IG9G0D,AC2GtDN,GAAG,CP3BD,AO2BEwL,KP3BGnK,CO2BP,GP3BE,AOqB6C,CPrBnCsC,AO4BZ,KP5BE;AKgCN,AFDA,MH9BK,EDCC3D,GAAG,CAACY,WAAJ,GAAkB,CAAlB;AM+BN,AFDA,IH9BG,AMrCC,ACgEAZ,EPzBF,ADDG,CAlC+D,AQ4D7D,CRxBH,AQwBIS,CDhECgC,QCgEL,GAAgB,GDhEhB,CAAoBwF,KCgEpB,EDhEA,CACE,KAAKpC,KAAL,CAAW7G,GAAX,CAAe,UAACgI,GAAD;ADoErB,AFDA,IH5BE,AOyBEhH,EDhEiB,CCgEd,CAACW,IAAJ,CDhE0BqG,ECgEf,CDhEkB,CAAChI,GAAJ,CAAQ,MCgElC,IDhEmCsC,IAAD;ADqEtC,AFDA,IH5BE,AOyBEtB,GAAG,CDjE+B,ACiE9Bc,ODjEwCQ,CCiE5C,CAAa8C,EDjEmC,CAAC/E,CCiEhC,CAACqF,EDjEgB,GCiErB,CAAWtD,CAAC,GAAG,GAAf,IAAsB,GAAnC,EAAwC0J,KAAK,GAAG,EAAhD,EAAoDC,MAAM,GAAG3J,CAAC,GAAG6J,SAAb,GAAyB,CAA7E;AFKJ,AFDA,EIHG,CA9BiC,CPKlC,AO2BA,ER5BE,AOxCkC,CAAR,CAAT,EPwCb,KAAK5L,IAAL,KAAc,SAAlB,EAA6B;AM+BjC,AFDA,IH5BE,AM1CmB,CAAf,CADF,EP0CEW,GAAG,CAACS,SAAJ,GAAgB,SAAhB;AM+BN,AFDA,IH5BE,AMzCE,IPwCET,COxCGyC,EPwCA,CAAC/B,QAAJ,CAAaL,EOxCf,CAAoB6H,KPwCG,GAAG,CAAxB,EAA2B5H,OOxC7B,CPwCqC,AOxCE,CACrC,EPuCsCL,KOxCD,EAErC,GPsC2B,GAAwB,CAAnD,EAAsDA,EOxCjB,EAGrC,MPqCgE,GAAG,CAAnE,AOxCqC,EPwCiC,AOpCtE,CPoCA,QOxCqC,EAKrC,MALqC,CAAvC;ADuEJ,AFDA,EIHE,EPzBA,AMnCE,EC4DIwL,GD5DChJ,SC4DW,GAAIoG,ED5DpB,CAAoBV,QC4DW,GD5D/B,AC4DkCO,CD5DF,UAAhC,EAA4C,CAA5C,KC4DF;AFKF,AFDA,EIHE1I,EPxBA,AMpCE,CC4DC,CAACS,ER1BA,COlCGgC,GPkCC,GQ0BR,ER1Ba/C,CQ0BG,IR1BR,COlCN,CAAoByI,EPkCAjJ,CQ0BtB,QD5DE,CAAgC,MPkC9B,EAAoC,COlCtC,EAA2C,CAA3C;ADiEJ,AFDA,EIHEc,ED3DE,CC2DC,CAACU,GD3DGgC,CPiCD1C,GAAG,CAACS,AQ0BV,CAAagL,QR1BP,GAAgB,CQ0BG,ED3DvB,CAA0BxD,AC2DA+C,KR1BtB,EOjCJ,CACE,AC0DJ,EAAsCD,GD1D7BlF,GC0DmC,ED1DxC,CAAW7G,AC0DgCwL,GD1D3C,CAAe,MC0DsC,CAACiB,GD1DtCzE,GAAD,MC0DsC,CAAV,GAA2BiE,SAApC,GAAgD,CAAtF,EAAyFD,QAAQ,GAAG,CAApG,EAAuGR,UAAU,CAACiB,YAAD,CAAV,GAA2BR,SAA3B,GAAuC,CAA9I,EAnCkC,CAoClC;AFIF,AFDA,MG9DqB,EPiCd,CAFD,IO/BwBjE,EPiCjB,COjCoB,CAAChI,GAAJ,CAAQ,UAACsC,IAAD;ADgEtC,AFDA,EIHEtB,GAAG,CAACqL,ED5DgC,EPkC9BrL,GAAG,CAACS,COlCoCa,AC4D9C,ID5DkD,CAACjC,GPkC7C,COlC8B,EPkCd,SAAhB;AM+BR,AFDA,EIHEW,GAAG,CD7DiC,AC6DhC0L,CD7DwB,CPmCvB,AOnCc,CC6DnB,CAAQD,CP3BR,WO2BoB,GAAGT,MP3Bb,EO2BF,GAA0BA,QAAQ,GAAG,CAA7C,EAAgDD,MAAM,GAAGP,UAAU,CAACiB,YAAD,CAAV,GAA2BR,SAApF,EAA+F,CAA/F,EAAkG,CAAlG,EAAqG,IAAI7G,IAAI,CAACmG,EAA9G;AFKF,AFDA,EIHEvK,ED9DmB,CAAf,AC8DD,CP5BO,AMnCR,AC+DE2L,IAAJ;AFKF,AFDA,AIHC,ID7DG,IPkCE3L,COlCG0C,EPkCA,CAAChC,QAAJ,CACEL,QAAQ,AOnCZ,CAA0B6H,EPmCX,CADb,EAEE5H,QAAQ,GAAGL,EOpCf,CAA6C,CAC3C,MPmCE,GAAwB,CAF1B,EAGE,CAACA,IOrCwC,EAE3C,IPmCa,GAAG,CAAd,EOrCyC,EAG3C,CPkCsB,KAAKP,GOrCgB,EPqCrB,AOjCtB,GPiCmCR,gBAAjC,AOrCyC,CPkC3C,AOlCF,EPsCI,CAJF;AMgCN,AFDA,IG3DI,EN2BA,ADOC,GOlCIwD,KN2BG,KAAKL,KAAb,KM3BA,CAA0B8F,WAA1B,CAAsC,UAAtC,EAAkD,CAAlD;AD6DJ,AFDA,AIJAuC,IDvDI,IN2BE,CM3BGhI,IN2BE,AO4BE,CAACmG,SP5BR,EO4BO,CAAb,GDvDI,CAA0BV,WAA1B,CAAsC,SAAtC,EAAiD,CAAjD;AD6DJ,AFDA,AIHA6B,EDxDG,IPkCC,EQsBI,CAACC,CP7BD,ADOA,ICPMrG,CDODvE,IAAL,IQsBR,CRtBsB,AQsBE,CP7BC,GAAG,KAAKD,GO6BjC,EP7B4B,AO6BUwM,CP7BC/H,IDOnC,EAAuC,SQsB3C,CAAuD,GP7B3B,CAA+B,GO6B3D,EAAgE,IP7BpC,CAApB,KO6ByDgI,CAAD,EAAO;AFKvE,AFDA,EIHEtC,MRtBIvJ,ECPE,CDOC,CAACS,AQsBE,GP7BCqD,AO6BE+H,CAAC,CAACC,IRtBX,EQsBS,CRtBO,AQsBEC,GP7BhB,CAAkBnI,CO6BxB,IRtBI,MCP+B,CAACtE,CAA9B,EAAiCsE,WAAW,CAACrE,CAA7C,EAAgD,YAAM;AKkC9D,AFDA,EIHEyK,MRtBIhK,EQsBI,CRtBD,AQsBEiK,CP7BD,ADOAtJ,IAAJ,ECPQ,CAAC0B,ADOE,KCPP,CO6BR,CAAwB,CP7BH,QDOjB,kBQsBJ,EP7BQ,AO6B6CsI,SAArD,GAAiEvG,IAAI,CAAC4H,KAAL,CAAWzC,UAAU,GAAG,GAAxB,IAA+B,GAAhG;AFKF,AFDA,AIHC,CAHD,GAKA,IRxBMvJ,ECPG,CAFD,ADSC,CAACc,QAAJ,CACE,KAAKC,MAAM,CAAC,KAAKtB,MAAL,CAAYG,MAAZ,CAAmB;AM0BvC,AFDA,UHhCQ,ADO+B,COpCrC,GPoCwCP,IAAH,SAAGA,IAAH,UOpChBC,CAArB,EAAwBC,CAAxB,EAA2B;AD+D7B,AFDA,AIFAyK,MD3DI,EC2DI,CAACC,CRxB8B,GOnC5B,IPmC0C5K,COnCrCwG,GPmCyC,EOnC9C,AC2DX,CD3DsBtG,AC2DE,CD3Db,CPmCmD,COnCrCD,CAAd,CAAP,SPmCmC,QQwBvC,EAAgDsM,gBAAhD,CAAiE,QAAjE,EAA2E,UAAUK,KAAV,EAAiB;AFI5F,AFDA,EIFE9C,ED3DC,IN4BG,ADMiC,CAAnB,EAAwDtJ,ECNjE,EO+BI,ERzBI,CAAN,AQyBKoM,CRzBkEjL,IQyB7D,CAAC8K,GRzBX,CAAgF,CAAhF,CQyBK,CRzB8E,AQyBjEC,GRzBlB,CADP,CQ0BJ,CRxBM1L,ICPF,IDOU,GAAG,GAFb,EAGEC,QAAQ,GAAG,EAHb;AM8BN,AFDA,EIFE0J,IRtBG,CARD,GCDI,AO+BE,CAACC,ERtBA,CCRD,KAAK7H,MO8Bb,CAAwB,QP9BhB,IAAwB,AO8BhC,EAAsC8J,GP9B9B,IACA,CO6BR,GAAiD,CP7BpC7K,GO6Bb,CP7BQ,KAAc,IADd,IAEA,KAAKA,IAAL,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AK+BV,AFDA,AIFC,CAHD,ORnBM,ICLI,ADKEoB,ICLIuC,MDKM,ECLE,CDKC,ECLE,GDKG/D,ECLEL,IDKP,CCLE,ADKUQ,CCLCmE,KDKb,CAAmB,cCLjB,CACf,KAAK1C,IAAL,CAAU,CAAV,EAAa/B,CADE,EAEf,KAAK+B,IAAL,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AK+BV,AFDA,AIFAyK,QAAQ,CAACC,CRvBmC,COrC1C,CNoCQ,EDCqC5K,GCDhC2E,CDC6B,KQuB5C,CAAwB,CPxBd,CAAcR,CDCuBnE,IAAH,GCDlC,MMpCYA,IAApB,EAA0B,EC4D5B,EAAkDuM,gBAAlD,CAAmE,QAAnE,EAA6E,UAAUK,KAAV,EAAiB;AFI9F,AFDA,EIFE9C,ID5DE,INoCK,ADAmC,AOpClCf,CN0BF,IM1BO,AC4DA,EPxBA,ADA2C/I,COpCxC,AC4DA4M,GRxB4C,EOpCvCpG,AC4DA,CAACiG,ERxB2C,EOpCjD,CAAWzD,CC4DX,CAAa0D,CRxBa,COpC1B,GAAkBnM,AC4DlC,MD5DgB,CAAyB,UAAC0B,IAAD;ADgE3C,AFDA,EIFE0I,MRzB0C,AOpCD,CPoClB,CAAnB,AQyBI,CAACC,CPxBD,GMrC2C3I,ENqCtCe,EMrC0C,CAAChD,ENqChD,EMrC2C,CNqC9B,AOwBrB,CAAwB,GD7DyCA,IAAxB,CNqCjC,IOwBR,EAAsC6M,QAAtC,GAAiD,KAAjD;AFIF,AFDA,AIFC,CAHD,GAKA,EDhE2C,CAAzB,CPqCZ,AOrCF,ENsCK,EDDGhL,gBAAgB,GAAG,KAAKzB,MAAL,CAAYG,MAAZ,CACvB;AM4BR,AFDA,MGhEI,IPqCI,GOrCGwI,CPqCA/I,IAAH,AOrCQ,CAAC+E,IAAI,CAACM,GPqCXrF,EOrCM,CAAW+E,CPqCpB,GOrCwB,CAACC,MAAL,KAAgB+D,KAAK,CAACvI,MAAjC,CAAD,CAAZ;ADkEJ,AFDA,AIDAmK,ID/DG,IC+DK,CAACC,CP1BD,ADDA,OAAc5K,IAAI,EQ2B1B,CAAwB,ER3BO,YAAvB,EQ2BR,EAA0CuM,gBAA1C,CAA2D,QAA3D,EAAqE,UAAUK,KAAV,EAAiB;AFGtF,AFDA,EIDE5C,MR5BM,CADuB,CAAzB,IQ6BQ,GAAG,CAAf;AFGF,AFDA,EIDEoB,MP3BI,KAAK,KO2BO,IP3BZ;AK8BN,AFDA,AIDC,CAHD,ORzBM,ECCE,CMrCN,CPoCQxJ,ECCE,KAAKgD,GDDG,CCCR,ADDSpE,ECCb,EAAiB,EDDf,GAAoB,CAAxB,EAA2B,EOpCd;ADmEnB,AFDA,AIDAmK,MDhEI,ECgEI,CAACC,CR5BDhJ,ECCE,CMrCC,INqCIoB,CMrCCwD,EPoCE,CAAC1E,CCCT,CMrCC,ACgEX,CDhEsBkH,ACgEE,CP3BD,GDDf,AOpCG,CPoCgB,EOpCEzI,MAAlB,CAAyB,CPoCRD,CQ4B5B,EP3BU,AO2BgCiM,ER5Bf,EAAQxK,CAAR,COpCUE,CPoCI,GOpCL,MCgEpC,CAA2D,QAA3D,EAAqE,UAAU2K,KAAV,EAAiB;AFGtF,AFDA,EIDE5C,MDjEkC,ENsC3B,CAFD,CDCE,EQ4BI,CDjEgC/H,ENsC/B,AO2BE,EDjEiC,CAACjC,CCiEjD,GDjE4C,KAAc,SAAxB;ADoEpC,AFDA,EIDEoL,IDlEkC,CAAzB,CAAP,INuCM,ADDA,MQ4BQ;AFGlB,AFDA,AIDC,CAHD,GD/DG,EAGD,MNoCQ,ADDA,IACE9K,CCAG0C,IDAE,CCAP,ADAQhB,GCAK,CDAX,IAAc1B,KCAhB,ADAqB,CAAC0B,IAAN,CAAWxB,MAAX,GAAoB,CAAlC,IACCF,KAAK,CAAC0B,IAAN,CAAW,CAAX,EAAc/B,CAAd,KAAoBK,KAAK,CAAC2B,IAAN,CAAWhC,CAFlC,EAGE;AM4BZ,AFDA,AIDA0K,ID/DE,IC+DM,CAACC,CP3BA,IDEG,KAAI,CAAC1I,GQyBjB,CAAwB,IRzBZ,CAAcvB,GAAd,EAAmBV,CAAC,GAAGW,EQyBnC,EAA0C2L,MRzB9B,EAAmCrM,CAAC,GAAGU,IQyBnD,CAA2D,KRzB/C,EAAmD,CQyB/D,EAAqE,ORzBzD,EAA+DmB,CAA/D,AQyBmE6K,KAAV,EAAiB;AFGtF,AFDA,EIDE5C,ED/DA,QPsCS,CALD,CQ8BI,GAAG,ERzBA,EQyBf;AFGF,AFDA,EIDEoB,ED/DA,MNmCM,IDGI,IQyBM,CRzBF,CAAClJ,QAAL,CAAcvB,GAAd,EAAmBV,CAAC,GAAGW,UAAvB,EAAmCV,CAAC,GAAGU,UAAvC,EAAmD,YAAnD,EAAiEmB,CAAjE;AM4BZ,AFDA,AIDC,CAHD,GD3DE,ACiEF,QR5BW;AM4BX,AFDA,AIEA,IDjEE,INiCI,EDIG,CAXD,ECOG,iBAAL;AKgCN,AFDA,IG/DE,MNiCM,IAAM8C,YAAY,GAChB,KAAK9E,KAAL,CAAWyE,mBAAX,CAA+B,mBAA/B,CADF;AKgCR,AFDA,AIEAmG,IDjEE,ICiEM,CAACC,CP/BD,ADEA,IAAI/I,CCFC4C,QO+Bb,CAAwB,GP/BhB,CAAkBI,EDEE,CAACrE,AQ6B7B,EAAiC+L,IR7BrB,GCF0B,ADEA,CCFCtM,ADE/B,CCFA,CDEiC,CCFC4E,KO+B1C,CAAkD,MP/BI,CAAC3E,AO+BvD,CP/BQ,CO+BmD,CP/BD,WO+BO,CP/BD;AK+BhE,AFDA,EIEEkK,EDjEA,GCiEK,KP/BG,ADEAvI,MCFI,CAACmB,KAAL,GAAa,CDEG,CAAClB,OAAjB,CAAyB,MCFzB,IDE0BxB,KAAD,EAAQyB,CAAR,EAAc;AM6BjD,AFDA,AIEC,CAFD,GD/DE,ACmEF,MPjCS,CAFD,GDII,KAAI,CAACI,cAAL,CACExB,GADF,EAEEV,CAAC,GAAGW,UAAJ,GAAiB,EAFnB,EAGEV,CAAC,GAAGU,UAAJ,GAAiBmB,CAAC,GAAG,EAHvB;AM6BZ,AFDA,AIIA,IDnEE,MNkCM,EDMG,CAND;AM+BV,AFDA,AIKA,IDpEE,MPwCO;AMyBT,AFDA,IG/DE,INiCI,ADOC,CAtBD,ICeK,EDOE,IAAIF,UCPX,MDO2B,CAACrB,MAAjB,GAA0B,CAA9B,EAAiC;AMyB9C,AFDA,AIIA,IDnEE,ACmEIsM,MPlCE,ADOAjL,ICNE,KAAKkB,GOiCS,GAAG4H,CR3BH,CAAC7I,MQ2BU,CPjCzB,ADMF,AQ2B4B8I,CR3BH,GCNC,KAAxB,EDMwBtK,ECLxB,COgCiB,CAAwB,CR3BlB,ECLlB0B,ADK0BD,CAAR,EAAc,CCLrC,KAAc,IADd,IAEA,CO+BiB,CAA3B,GP/BeC,IAAL,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AK4BV,AFDA,AIIA+I,IDnEE,MCmEQ,CAACzH,CP9BD,ADGA,ICHMqC,ADGFpC,CAAC,CQ2Bf,CAAmB,CR3BD,CAAR,EAAW,ECHG,GAAG,CO8BPQ,IP9BYxC,IO8Bb,CP9BQ,CAAW2E,AO8BL,oBP9BN,CACf,KAAK1C,IAAL,CAAU,CAAV,EAAa/B,CADE,EAEf,KAAK+B,IAAL,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AK4BV,AFDA,EIIE,EDnEA,ECmEM6M,QR3BI,CQ2BK,GAAGpC,CR3BJ,CAACxI,MQ2BW,CAAC6K,OR3BjB,CAAoBrM,GAApB,EAAyBV,AQ2BjB,CR3BkB,AQ2BK,GR3BFW,EQ2BrB,CAAlB,OR3BmC,GAAiBmB,CAAC,GAAG,EAA9C,EAAkD7B,CAAC,GAAGU,UAAtD;AMyBZ,AFDA,EIIEmM,EDnEA,OCmES,CP5BD,ADCC,AQ2BCE,CR7BF,ICCKtI,EDCE,EQ2Bf,CAAoBuI,GP5BZ,AO4BR,CP5BsB/I,AO4BE,SP5BhB,GO4BR;AFFF,AFDA,EIIE,EDnEA,ECmEMgJ,IP5BC,CAVD,GDWI,AQ2BI,GP5BD,AO4BIxC,ER3BH,CAACxI,KQ2BU,CAAC6K,QR3BhB,CAAoBrM,GAApB,CQ2BO,CR3BkBV,AQ2BK,CR3BJ,GAAGW,GQ2BtB,CAAjB,MR3BmC,GAAiB,CAA1C,EAA6CV,CAAC,GAAGU,UAAJ,GAAiB,EAA9D;AMyBZ,AFDA,EIIEuM,EDnEA,MCmEQ,CAACF,CP5BD,ADCC,KCDIjK,GO4Bb,CAAmBkK,CP5BX,EO4BR,CP5BqB,AO4BE,SP5Bf,SO4BR;AFFF,AFDA,EIIEC,EDlEA,MPuCO,AQ2BC,CRjCF,AQiCGnN,CP5BD,GO4BR,EP5Ba8E,CO4BG,UAAhB,GP5BQ;AK0BV,AFDA,EIIEqI,MR3BK,ECDE,AO4BC,CAACC,EAAT,GAAc7K,QAAd;AFFF,AFDA,EIIE4K,IR3BG,CAlG+D,CAoGhE,EQyBM,CAACE,OAAT,GAAmB9F,kBAAkB,CAACnF,QAAnB,CAA4BG,QAA5B,CAAnB;AFFF,AFDA,EIIE4K,QP7BM,AO6BE,CAACZ,gBAAT,CAA0B,QAA1B,EAAoC,YAAM;AFF5C,AFDA,IIII,IAAIY,GDrEN,KCqEc,CAACE,OAAb,EAAsB,KDrEb9K,QAAX,EAAqB;ADmEvB,AFDA,MJvBI,AO1CA,ACqEEgF,EP9BA,EDIAxG,GCJK,MDII,GCJT,CDKA,CACE,AQwBgB,CAACN,IAAnB,CAAwB8B,CRzBxB,EAEE,KQuBF,MRzBA,EAGE,iBAHF,EAIE,UAJF,EAKE,SALF,EAME,mBANF,EAOEH,QAPF,CAOW,KAAKpC,IAPhB,CAFF,EAUE;AMeN,AFDA,IIIK,CAFD,CDnEA,EPoDEW,ECbE,AMvCE6B,CPoDD,AQiBE,CRjBDlB,ECbEyD,CMvCG,CPoDT,ECbU,AMvCE,CNuCDC,ADaA,IOpDMR,ENuCX,KAAgB,KAAK7B,ADa3B,OOpDY,CNuCV,AMvCmC,ENuCA,KMvCzB,CAAd;ADmEJ,AFDA,MGjEI,ACqEE4E,ERjBA5G,EOpDIL,CPoDD,CCbC,ADaAc,GOpDK,ENuCA4B,CMvCG,GPoDZ,CCbI,AMvCYV,EPoDA,AQiBE,CP9BD,EO8BIiF,IRjBrB,KOpDY,CAAU,ENuClB,EMvCQ,EAAgB,ECqEW,CAAChH,GDrE5B,EAAwBiC,CCqEf,CAA0B,GDrEnC,EAA+BD,KCqEKiI,CAAD,EDrEnC,CAAd;ADmEJ,AFDA,QJbM7J,AQgB+C,EP7B5C,CDaA,CAACY,GQgBkDiJ,CAAC,KAAKjI,ERhB5D,GAAkB,GAAlB,AQgB+C;AFDrD,AFDA,MGjEI,ACmEiD,CAA1B,CRfrB5B,AQeA,EDnEE6B,CPoDC,CAACf,GOpDG,CAAC2C,IPoDR,CACE,OAAO,COrDP,CAAoB9D,GPqDRF,EOrDZ,CAAJ,EAAgC,CPqDrB,CAAYG,MAAZ,CAAmB;AMclC,AFDA,IIEK,IDnEC,ENsCE,ADc0B,IAAGP,IAAH,SAAGA,IAAH;AMelC,AFDA,QGjEMwC,EPmD4B,GOnDvB,CAACyG,GPmDoCjJ,IAAI,COnD9C,CAAeM,GPmDoC,EOnDnD,IPmD4B;AMgBlC,AFDA,IICI8J,IP7BE,ADa4B,AOlD5B,CPkDS,AQgBN,ERhBwD5J,ECbtD,AMrCAJ,IPiDL,EAEEY,AOnDF,CAAYP,IAAZ,CAAiBH,ENqCjB,ADcU,GAAG,AOnDb,CPiDA,EAGEW,QAAQ,GAAG,EAHb;AMkBN,AFDA,EICG,CAPD,GD3DG,EPqDCN,EChBE,CDgBC,CAACc,GChBGgD,KDgBP,CACE,MCjBA,CAAkB,ADiBX,KCjBgBhC,ADiBXrC,MAAL,CAAYG,ICjBD,CAAiBN,CAAnC,ADiBO,CAAmB,CCjBY,KAAKwC,WAAL,CAAiBvC,CAAvD,EAA0D,YAAM;AK8BxE,AFDA,EICE,EDlEC,EAED,ACgEMgG,IRb0B,CQarB,CP7BH,EDgB2BlG,AQarB2K,IP7BF,ADgBoB,CChBnB3H,GO6BS,CAACgK,CP7Bf,GAAa,ADgBchN,IAAH,KQalB,CAAuB,OAAvB,CAAd,SP7BQ;AK8BV,AFDA,EICEkG,KAAK,CAACoH,EP7BC,ADeyB,CCjB1B,IO+BN,ERd8CtN,CQc9BuC,GRdkC,KAAK,AQcvD,YRdgC;AMelC,AFDA,EICE2D,KAAK,CRf2B,AQe1B+G,CRfO,CCdP,CDc+DzM,MADjE,AQgBJ,CAAgB0M,CRdVlM,EQcN,CAAoB,KRdN,GAAG,CAFb,EAGEC,OQaN,CRbc,GAAG,EAHb;AMiBN,AFDA,EICEiF,KAAK,CRZDvF,AQYE4M,GRZC,CAAChM,OQYR,CAAkBoJ,GRZd,GAAkB,CAAlB,CQYsB,CAAC6C,cAAT,CAAwBnD,YAAY,CAAC9H,QAAD,CAApC,CAAlB;AFCF,AFDA,EICEuK,IRZG,CA9H+D,CC4G9D,ADoBF,GOzDF,ENqCS,OO8BS,CAACS,WDnEPjN,ACmEZ,CAA+ByM,IDnE/B,EAAmB,CNqCf,EO8BJ;AFCF,AFDA,EICEA,IDnEE,INqCI,CMrCC3M,ACmEE,CAACmN,EP7BF,GMtCN,ENsCWxK,CMtCG,GCmEhB,CAAsBoK,CDnED/M,MAAL,CAAYG,ACmE5B,EP7BQ,IAAwB,AMtChB,CAAmB,INsC3B,IACA,EMvC4BG,CAAD,ENuCtBsB,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AK2BV,AFDA,EICEuM,MDpEmC,GCoE1B,CP1BD,AO0BEQ,GDpEgC7M,CN0C5ByD,AM1C6B,KAAK7D,ECoEhD,CAAsB4F,EP1BA,AM1Ca,GN0CV,AO0BzB,KP1B8BnG,KAAL,CAAW2E,oBAAX,CACf,KAAK1C,IAAL,CAAU,CAAV,EAAa/B,CADE,EAEf,KAAK+B,IAAL,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AK2BV,AFDA,AICC,CAvBD,GAyBA,ERdI,AOzDiC,CAAnB,CAAd,EPyDIY,UAAJ,EAAgB;AMapB,AFDA,AIGA,MDvEIR,EPyDEK,GAAG,AOzDA,CN6CC,ADYAW,AOzDAW,IPyDJ,AOzDF,CN6CW0C,AM7CAO,EPyDE,MCZP,CAAcf,EM7CpB,CAAuB7D,KAAvB,CPyDE,CCZI;AKyBV,AFDA,IGpEG,EAED,EPuDIK,ECZG,CAVD,ADsBC,CAACS,KCZK,IDYT,GAAgB,OAAhB;AMaN,AFDA,AIGAuJ,QRdMhK,AQcE,CAACiK,ERdA,CCZC,ADYArJ,KCZKyB,KAAL,CDYJ,AQcN,CAAwB,CP1BD,CDYC,GAAlB,OCZI,AO0BV,EAAsCuJ,gBAAtC,CAAuD,OAAvD,EAAgE,YAAM;AFDtE,AFDA,EIGE,IAAI5B,ERdAhK,ECZG,CDYA,CAACc,EQcI,CAACmJ,KRdT,CAAa,KAAK3K,CAAL,EQcb,CRdsB,AQcE,GRdxB,EAA2Be,OQc3B,CRdA,CQcsCsK,CRdDrK,QAAQ,AQc7C,GRdgD,EAAhD,AQcoD,MAAxD,EAAgE;AFDlE,AFDA,IIGI0J,IRdEhK,GAAG,CAACc,AQcE,CAACmJ,ORdP,CAAa,KAAK1K,CAAlB,AQcF,CAAwB,CRdDc,QAArB,EAA+BC,CQcjC,EAAsCqK,KRdG,GAAG,CQc5C,CRdE,EQcgD,OAAlD;AFDJ,AFDA,IIGInB,IRdExJ,ECbE,AO2BE,CRdD,AO1DP,CP0DQY,CQcG,KAAT,KRdE,GAAkB,CAAlB,GO1DMjB,KAAV,EAAiB2B,IAAjB,EAAuB;ADuEzB,AFDA,EIGG,CAHD,GRXG,AO1DD,GCwEK,CDxEDA,IAAI,CAACmC,aAAL,CAAmB9D,KAAnB,CAAJ,EAA+B;ADuEnC,AFDA,IJXG,AQcCqK,ERZF,EChBI,AM5CArK,ICwEM,CP5BD,AM5CA,ACwEEsK,CDxED3I,IAAN,CAAWiD,KN4CX,GO4BF,CAAwB,EDxEtB,CAAuB5E,KAAvB,ICwEF,EAAsCgL,SAAtC,GAAkD,MAAlD;AFDJ,AFDA,IIGInB,IDxEElI,EN4CE,AO4BE,EDxEA,CAACgH,ACwEE,EP5BAhE,EO4BT,IP5BI,AM5CF,CAAc3E,KAAd;ADuEN,AFDA,EIGG,MDxEGA,EN4CE,GM5CG,CAAC2B,CN4CCe,GM5CP,EN4CE,CM5CWf,EN4CE,EM5Cf,ON4CE;AK2BR,AFDA,AIGC,CARD,GAUA,ED1EK,IN4CG;AK2BR,AFDA,AIKA,ID1EG,OP0DD,sBAAaf,KAAb,EAAoB;AMatB,AFDA,MJXI,ECfE,KAAK,CDeC,KAAKlB,GCfX,CDeF;AMaJ,AFDA,AIIA2K,QRfM,AQeE,CAACC,CP9BD,GDeG,ECfEnG,KDeP,GQeN,CAAwB,GP9BhB,CAAkB,KAAKjC,EO8B/B,EAAqC+J,CP9BX,CAAWtM,CAA7B,EAAgC,KAAKuC,KAAL,CAAWtC,AO8BnD,CP9BQ,AO8B8C,EP9BA,KO8BtD,EAA+D,KP9BH,KO8BIsM,CAAD,EAAO;AFFtE,AFDA,EIIEvC,QRfM/I,CO3DN,AC0ES,CP9BD,EO8BIsL,CRfD,AQeE,CAACC,EP9BF,ADeE,CCfDzJ,GO8BD,CAAS0J,CP9Bb,GAAa,ADef,AO3DC,CC0EP,eP9BQ;AK4BV,AFDA,AIIC,CAFD,GAIA,ED5EI,IN4CK,ADeD,CCjBA,AM1CClF,SAAL;ADwEJ,AFDA,AIMA,MD5EI,IN4CI,CM5CCpH,MAAL,CAAY8I,IAAZ,CAAiB,YAAY;ADwEjC,AFDA,QJZM,AO1DA,KP0DK,EO1DE,MAAMnE,GP0Db,CO1DiB,CAACC,MAAL,EAAb;ADwEN,AFDA,AIKA,IAAInE,ED3EC,CAFD,CN6CE,EDeEK,GCfG,EDeE,EQiBI,CRjBD,EQiBI,KAApB,ERjBQ,ECfF;AK6BN,AFDA,AIKA,IAAIJ,MPhCI,ADeA,ICdE,AO+BI,GAAG,EP/BFiC,GO+Bf,YP/BU,IAAwB,KAAxB,IACA,KAAKf,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AKyBV,AFDA,AIKA,IAAIO,EDjFK,MNqDC,CO4BG,GP5BGoD,AO4BA,KAAhB,KP5BwB,GAAG,KAAKpE,KAAL,CAAW2E,UMhDd,KAAKtE,KNgDF,CACf,AMtDH,KNsDQ4B,IAAL,CAAU,CAAV,EAAa/B,CADE,EAEf,KAAK+B,IAAL,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AKyBV,AFDA,AIMAyK,MDnFS,EPgEH,AQmBE,CAACC,IRnBE,UQmBX,CAAwB,MRnBlB,UQmBN,EAA0C2B,gBAA1C,CAA2D,QAA3D,EAAqE,UAACC,CAAD,EAAO;AFJ5E,AFDA,EIME3L,QRnBMK,ECRE,GDQG,AQmBE,EP3BAyD,CDQC,AQmBE6H,CAAC,CAACC,KP3BV,CAActI,AO2BN,CRnBV,AQmBmBkJ,OAAzB,EP3BQ;AKuBV,AFDA,AIMC,CAFD,KDnFS,IN0DA,ADQD,CClBA,MAUO;AKuBf,AFDA,AIMA1C,QDjFI,ACiFI,CAACC,GP3BC,KAAK5H,KAAL,CO2BV,CAAwB,CP3BD,QAAb,IO2BV,EAAuCuJ,gBAAvC,CAAwD,ODjFnB,CCiFrC,EAAkE,UAACC,CAAD,EAAO;AFJzE,AFDA,EIME1L,MRpBI,ECPG,AMvD4B,ECkFzB,CRpBD,CO9DIR,CCkFAkM,CAAC,CAACC,EDlFoB,IP8D/B,AQoBS,CAASY,OAAtB;AFJF,AFDA,AIMC,CAFD,SRlBQnM,KAAK,GAAG,SAAR;AMgBR,AFDA,AIMAyJ,QAAQ,CAACC,CP5BD,ADQA,AO/DF,IAAGtK,KAAK,CAACN,GCmFf,CDnFS,ACmFe,KDnFA,MAAlB,CCmFN,CDnFgC,CCmFMuM,gBAAtC,CAAuD,QAAvD,EAAiE,UAACC,CAAD,EAAO;AFJxE,AFDA,EIMEzL,SAAS,CDnFHT,ECmFMkM,CAAC,CAACC,CDnFH,CAACtD,GAAN,CCmFM,CAASkE,OAArB;AFJF,AFDA,AIMC,CAFD,GAKA,IPhCM,ADQA,EO9DC,CAFD,ENwDK,ADQA,IO9DE,INsDP,AMtDU/M,CP8DV,IO9De,CAACN,IAAN,KAAe,YAAf,IAA+B,KAAKwH,SAAL,GAAiB,CAAjB,KAAuB,CAAzD,EAA4D;AD+EzE,AFDA,AISA,UPhCQ,ADQAtG,EO9DAZ,GNsDKP,ADQA,EO9DA,CP8DG,AO9DFoJ,ENsDN,CAAWjE,AMtDX,MP8DA,KCRA,CAAuB,IAAvB;AKyBR,AFDA,AISA,UPhCQ,ADQA,AO9DD;AD+EP,AFDA,QG7EK;AD+EL,AFDA,AISO,MDlGE,ENiEH,ADQA,CQyBU5B,IRzBL,OAAL,EQyBC,CAAuBf,QAAvB,EAAiCkL,IAAjC,EAAuC;AFP9C,AFDA,EISE,IAAMC,EDnGC,ENkED1J,ADQA9C,CQyBK,GAAGqG,CRzBH,ECRE,CAACtD,ADQA,GCRR,CAAY,KDQZ,KQyB0B,CAAC0J,MPjC3B,COiCQ,CPjCuB,AOiCIpL,KPjCCS,GOiC5B,CAAd,CPjCM;AK0BR,AFDA,EISE,IDpGO,ACoGD2E,GAAG,CPjCH,ADQA,EQyBMnC,KAAK,CAAC+B,kBAAkB,CAAC/G,MAApB,CAAL,CAAiC8L,IAAjC,CAAsC,IAAtC,CAAZ;AFPF,AFDA,EISE3E,GAAG,CP7ID,AO6IE+F,EDrGG,GCqGJ,CAAH,GAAaD,IAAb;AFPF,AFDA,EISE9D,EPjCC,EAED,AMvEO,EP4EH,KAAK,GQ0BK,CAAClJ,IAAf,CAAoBkH,CR1BhB,EQ0BJ;AFPF,AFDA,EISE8B,EP/BA,AM5DC,MPiEKvI,GQ0BK,ER1BA,GAAG,SAAR,AQ0BaqB,QAAR,cAAoBkL,IAApB,OAAX;AFPF,AFDA,AISC,IP/BC,MDKM;AMmBR,AFDA;AEEA,AFDA,AISO,QR3BD,CQ2BUlK,IR3BL,SQ2BJ,CAAuBhB,QAAvB,CR3BD,CQ2BkCkL,IAAjC,EAAuC;AFP9C,AFDA,EISE,IAAMC,IR3BAxM,CQ2BK,GAAGqG,CR3BH,GAAG,SAAR,KQ2B0B,CAACoG,OAAnB,CAA2BpL,QAA3B,CAAd;AFPF,AFDA,EISE,IAAMoF,GAAG,CR3BH,CCPN,COkCYnC,KAAK,CAAC+B,kBAAkB,CAAC/G,EPlClB2E,GAAnB,COkCiB,CPlCOC,AOkCZ,CAAiCkH,EPlC7C,EAA6B,AOkCjB,CAAsC,IAAtC,CAAZ;AFPF,AFDA,EISE3E,GAAG,CPlCD,AOkCE+F,KAAD,CAAH,CPlCS3I,EM5DIsC,AC8FAoG,EPlCA,CAACpI,COkCd,IPlCS,CAAWN,IAAI,CAACC,MAAL,MAAiBI,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AK2BJ,AFDA,EISEyE,EPlCC,EAED,EDII,KAAK,GQ4BK,CAACnJ,ER5BX,EQ4BJ,CAAoBkH,GAApB;AFPF,AFDA,EISE+B,QR5BMxI,GQ4BK,ER5BA,GAAG,SAAR,AQ4BaqB,QAAR,cAAoBkL,IAApB,OAAX;AFPF,AFDA,AISC,EAED,QR9BQ;AMqBR,AFDA,AIWA,MR1DI;AMiDJ,AFDA,AIWA,WPrCE,iBAAQnI,QAAR,EAAkB;AK4BpB,AFDA,MH1BI,ADMA,ICNIC,GDMGrE,KAAP,GCNe,GAAG,IAAIsE,KAAJ,CAAU,CAAV,CAAlB;AK4BJ,AFDA,IJpBG;AMsBH,AFDA,AIUAoI,MPpCI,AOoCE,CAACC,GPpCCvI,GOoCR,CAAcwI,IPpCE,AOoChB,CAAmB,GPpCC,MOoCpB,CPpCI,COoC0B,CPpCD;AK4B7B,AFDA,EISgCC,MPnC1BxI,EOmCkC,EAAE,CAAC,MPnC1B,CAAC,CAAD,CAAX,EOmCoC,CPnCnB,EAAjB;AK4BN,AFDA,AIQ8B,CAA9B,OPlCMA,GDKJ,QCLe,CAAC,CAAD,CAAX,GAAiB,IDKZ5E,CCLiB8E,EDK1B,EAAcxF,CAAd,EAAiBC,CAAjB,EAAoBmC,QCLC,CAAwB,CAAxB,CDKrB,CCLgD,CAA3B,ADKYN,CCL7B,ADKJ,EAAoC;AMuBtC,AFDA,AIQA6L,MPlCK,ADKDjN,AQ6BE,CAACkN,ER7BA,CAACzM,GQ6BR,CAAc4M,KR7BV,GAAgB,SAAhB,AQ6BJ,CAAgC,YAAM;AFNtC,AFDA,EIQEC,SAAS,CAAC,cAAD,EAAiBtE,cAAjB,EAAiC,CAAjC,CAAT;AFNF,AFDA,EIQEsE,IPlCE,ADIA,ICJI3I,ADIAjD,CQ8BG,CAAC,MPlCI,GDIG,CCJC,IDII,AQ8Bb,EPlCP,AOkCwBuH,EPlCA,MDIxB,EAAgC,IQ8BzB,EAAiC,CAAjC,CAAT;AFNF,AFDA,AIQC,CAHD,GAIA,IPnCMrE,ADIA5E,GAAG,CAACU,OCJO,CAAC,ADIZ,CCJW,ADIEpB,CCJb,A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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const map = `\n____________________________________\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\n_bbw______________aa____________bb__\n_bbw______________aappppppppppa_bb__\n_bbw______________aappppppppppaaaaaS\n_bbw______________aappppppppppaaaaaE\n_bbw______________aa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbwwwooooooooooooaa________________\n_bbappoooopppppppoaa________________\n_bbappoooopppppppoaa________________\n_bbappooooooooooaaaa___pppppp_______\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwoooooooooooXaaaaaaaaaaaaaaaaaS\n_bbwwwooooooooooooaaaaaaaaaaaaaaaaaE\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwooooooooooooaa________________\n_bbaaa____________aa________________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbw_____________aaaaa______________\n_bbw______________aaaaa_____________\n_bbw______________aaaaa_____________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_ESw________________________________\n`;\n\nexport const mapDirection = `\n____________________________________\nwawwwwwwwwwwwwwwwwaawwwwwwwwwwwwwa__\neaaeeeeeeeeeeeeeeeaaeeeeeeeeeeeean__\n_sna______________sn____________sn__\n_sna______________aahhhhhhhhhha_sn__\n_sna______________aahhhhhhhhhhawaawa\n_sna______________aahhhhhhhhhhaeaaea\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_aaaaa____________sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh__________aaaa___vvvvvv_______\n_snaaa____________sn___vvvvvv_______\n_snaaa___________aaawwwaaaaaawwwwwwa\n_snaaa____________aaeeeaaaaaaeeeeeea\n_snaaa____________sn___vvvvvv_______\n_snaaa____________sn________________\n_snaaa____________sn________________\n_aaawwwwwwwwwwwwwwana_______________\n_aaaeeeeeeeeeeeeeeeaa_______________\n_sna_____________aaaaa______________\n_sna______________aaaaa_____________\n_sna______________aaaaa_____________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_aaa________________________________\n`;\n\nexport default map;\n","const MAX_PARKED_BIKES = 4;\n\nclass Cell {\n  constructor(world, type, x, y, allowed_direction) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n    this.allowed_direction = allowed_direction;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"SPAWN\") {\n      return true;\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 30\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 30\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // !! Draws directions in which agents are allowed to move\n    if (drawDirection) {\n      ctx.font = \"16px monospace\";\n      ctx.fillStyle = \"#ffffff\";\n      // make text slightly transparent\n      ctx.globalAlpha = 0.8;\n      let arrow = \"\";\n      if (this.allowed_direction === \"n\") {\n        arrow = \"↑\";\n      } else if (this.allowed_direction === \"s\") {\n        arrow = \"↓\";\n      } else if (this.allowed_direction === \"e\") {\n        arrow = \"→\";\n      } else if (this.allowed_direction === \"w\") {\n        arrow = \"←\";\n      } else if (this.allowed_direction === \"h\") {\n        arrow = \"↔\";\n      } else if (this.allowed_direction === \"v\") {\n        arrow = \"↕\";\n      }\n      ctx.fillText(arrow, canvas_x + 11, canvas_y + 20);\n      // reset transparency\n      ctx.globalAlpha = 1;\n    }\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(canvas_x + 2, canvas_y + squareSize - 8, squareSize - 4, 4);\n\n      if (this.bikes == MAX_PARKED_BIKES) {\n        ctx.fillStyle = \"#dc3545\";\n      } else {\n        ctx.fillStyle = \"#316cf4\";\n      }\n      ctx.fillRect(\n        canvas_x + 2,\n        canvas_y + squareSize - 8,\n        (squareSize + 4) * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.font = \"16px monospace\";\n      ctx.fillText(\n        \"\" + String(this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length).padStart(3, '0'),\n        canvas_x + 1.5,\n        canvas_y + 21\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          // If the current agents is moving to the left or right in the agent's paths next step\n          // then draw the bike in the horizontal position\n          if (\n            agent.path && agent.path.length > 0 &&\n            (agent.path[0].x === agent.cell.x)\n          ) {\n            this.drawBike(ctx, x * squareSize, y * squareSize, \"vertical\", i);\n          } else {\n            this.drawBike(ctx, x * squareSize, y * squareSize, \"horizontal\", i);\n          }\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    //!! Debug to show number of agents in cell\n    if (\n      drawCount &&\n      [\n        \"SPAWN\",\n        \"BIKE_PATH\",\n        \"PEDESTRIAN_PATH\",\n        \"ALL_PATH\",\n        \"PARKING\",\n        \"BUILDING_ENTRANCE\",\n      ].includes(this.type)\n    ) {\n      ctx.font = \"12px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.3;\n      ctx.fillText(\n        \"B:\" + this.agents.filter(({ type }) => type === \"BIKE\").length,\n        canvas_x + 2,\n        canvas_y + 12\n      );\n      ctx.fillText(\n        \"P:\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n      ctx.globalAlpha = 1;\n    }\n\n    // !! Draw coordinates\n    if (drawCoords) {\n      ctx.font = \"11px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.5;\n      ctx.fillText(this.x + \",\", canvas_x, canvas_y + 10);\n      ctx.fillText(this.y, canvas_x, canvas_y + 22);\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#e7b1b6\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#f3d8da\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#eaecef\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#cfd4d9\";\n        break;\n      case \"PARKING\":\n        color = \"#aeb5bc\";\n        break;\n      case \"EMPTY\":\n        color = \"#d5e6de\";\n        break;\n      case \"BUILDING\":\n        color = \"#a6c4f9\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#7ba6f7\";\n        break;\n      case \"EXIT\":\n        color = \"#e7b1b6\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y, orientation, i) {\n    ctx.fillStyle = \"#222529\";\n    if (orientation === \"vertical\") {\n      ctx.fillRect(x + 6 + 10 * i, y + 2, 5, 20);\n    } else {\n      ctx.fillRect(x + 2, y + 6 + 10 * i, 20, 5);\n    }\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#fd7e14\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","import { addTimeToPark, addTimeToGoal } from \"./index\";\n\nclass Agent {\n  constructor(world, type, cell, strategy) {\n    this.world = world;\n    this.type = type;\n    this.spawn = cell;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.strategy = strategy;\n    this.move_to = null;\n    this.exitRate = 0.01; // The rate at which agents leave the building across stragegies.\n\n    // Variables for lotPreference\n    this.failedToPark = 0; // Tracks how many times the agent failed to park.\n    this.searchTime = 6; // How many ticks an agent is willing to search in a lot for a spot.\n    this.lotPreference = null; // Which lot is currently the preference to park for the agent.\n\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.calculatingPath = false;\n    this.stage = \"ENTERING\";\n\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\"\n      ? this.world.bikePathfinder\n      : this.world.pedestrianPathfinder;\n  }\n\n  hasParked() {\n    this.ticks_to_parked = this.ticks;\n    addTimeToPark(this.strategy, this.ticks_to_parked);\n  }\n\n  hasReachedGoal() {\n    this.ticks_to_goal = this.ticks;\n    addTimeToGoal(this.strategy, this.ticks_to_goal);\n  }\n\n  park() {\n    if (this.cell.canPark()) {\n      if (\n        this.type === \"BIKE\" &&\n        this.cell.type === \"PARKING\" &&\n        this.parked_cell === null\n      ) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n        this.hasParked();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unpark() {\n    if (\n      this.type === \"PEDESTRIAN\" &&\n      this.cell.type === \"PARKING\" &&\n      this.parked_cell !== null\n    ) {\n      this.cell.removeBike();\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n    }\n  }\n\n  changeMoveTo(x, y, callback) {\n    this.calculatingPath = true;\n    this.move_to = [x, y];\n    this.path = null;\n\n    const pathfinder = this.getPathfinder();\n    pathfinder.findPath(\n      this.cell.x,\n      this.cell.y,\n      this.move_to[0],\n      this.move_to[1],\n      (path) => {\n        if (path !== null) {\n          this.path = path;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n        this.calculatingPath = false;\n        if (callback && path !== null) {\n          callback();\n        }\n      }\n    );\n\n    pathfinder.calculate();\n  }\n\n  makeMove(nextCell) {\n    if (nextCell.checkAddAgent(this)) {\n      this.world.moveAgent(this, nextCell);\n      this.path.shift();\n    }\n  }\n\n  ///////////////////////\n  //    STRATEGIES     //\n  ///////////////////////\n  // 1) DEFAULT - Random lot, random spot.\n  // 2) PARKING LOT PREFERENCE - Specific lot, random spot.\n  // 3) PARKING LOT/SPOT PREFERENCE - Specific lot, random spot.\n  // ADD MORE!\n\n  // 1) DEFAULT - Random lot, random spot.\n  default() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const parkingCell = this.world.getRandomCellOfType(\"PARKING\");\n        this.changeMoveTo(parkingCell.x, parkingCell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.stage = \"ENTERING\";\n        }\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"Unknown stage: \", this.stage);\n        break;\n    }\n  }\n\n  // 2) PARKING LOT PREFERENCE - Agents goes to a specific lot, tried to park, after failing a few times goes to another lot.\n  // FUNCTIONS:\n  // Generates a random value between min and max, not including max.\n  randomValueInRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Takes in a lot and returns x, y coordinates next to it.\n  lotMove(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = 19;\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      coordinates[1] = this.randomValueInRange(21, 23);\n    }\n    if (location == \"mid\") {\n      coordinates[0] = 16;\n      coordinates[1] = 19;\n    }\n    if (location == \"west\") {\n      coordinates[0] = 3;\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // Takes a lot to search for parking in, returns x, y coordinates of a parking spot.\n  lotSearch(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = this.randomValueInRange(20, 30);\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      if (Math.random() < 0.66) {\n        coordinates[1] = this.randomValueInRange(19, 21);\n      } else {\n        coordinates[1] = 23;\n      }\n    }\n    if (location == \"mid\") {\n      coordinates[0] = this.randomValueInRange(10, 17);\n      coordinates[1] = this.randomValueInRange(17, 19);\n    }\n    if (location == \"west\") {\n      coordinates[0] = this.randomValueInRange(4, 6);\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // PARKING LOT PREFERENCE\n  parkingLotPreference() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const lotOptions = [\"north\", \"east\", \"mid\", \"west\"];\n        this.lotPreference =\n          lotOptions[Math.floor(Math.random() * lotOptions.length)];\n        if (\n          this.lotPreference == \"north\" &&\n          this.spawn.x == 35 &&\n          this.spawn.y == 5\n        ) {\n          var coordinates = [30, this.randomValueInRange(4, 7)];\n        } else {\n          var coordinates = this.lotMove(this.lotPreference);\n        }\n\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"MOVING_TO_LOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"SEARCHING_IN_LOT\";\n        }\n        break;\n      case \"SEARCHING_IN_LOT\":\n        var coordinates = this.lotSearch(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_SPOT\";\n        });\n        break;\n      case \"MOVING_TO_SPOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.failedToPark += 1;\n          if (this.failedToPark > this.searchTime) {\n            this.stage = \"CHANGEPREF\";\n            this.failedToPark = 0;\n          } else {\n            this.stage = \"SEARCHING_IN_LOT\";\n          }\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  // 3) parkingLotSpotPreference: specific lot and spot. Full? Spread out search from spot.\n  parkingLotSpotPreference() {}\n\n  // 4) closest parking spot from spawn\n  closest_strat() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        // BFS for the closest valid parking spot\n        let coords = {x:0, y:0};\n        let Q = [];\n        let grid = [];\n        const label = function (x, y) {\n          grid[y] ??= [];\n          grid[y][x] = 1;\n        };\n        label(this.cell.x, this.cell.y);\n        Q = [[this.cell.x, this.cell.y], ...Q];\n        BFS: while (Q.length) {\n          const V = Q.pop();\n          const cell = this.world.getCellAtCoordinates(V[0], V[1]);\n          if (cell.canPark()) {\n            coords = { x: V[0], y: V[1] };\n            break BFS;\n          }\n          const dirs = [\n            [V[1], V[0] + 1],\n            [V[1], V[0] - 1],\n            [V[1] + 1, V[0]],\n            [V[1] - 1, V[0]],\n          ];\n          for (const [y, x] of dirs) {\n            let next = this.world.state[y]?.[x];\n            let valid_types = [\n              \"SPAWN\",\n              \"BIKE_PATH\",\n              \"ALL_PATH\",\n              \"PARKING\",\n              \"EXIT\",\n            ];\n            if (\n              next !== undefined &&\n              valid_types.includes(next.type) &&\n              grid[y]?.[x] !== 1\n            ) {\n              label(x, y);\n              Q = [[x, y], ...Q];\n            }\n          }\n        }\n        this.changeMoveTo(coords.x, coords.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          this.stage = \"ENTERING\";\n        }\n        break;\n      // cases below are copied from default\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n  act() {\n    this.ticks += 1;\n    if (this.strategy == \"RANDOM_CHOICE\") {\n      this.default();\n    } else if (this.strategy == \"LOT_PREFERENCE\") {\n      this.parkingLotPreference();\n    } else if (this.strategy == \"CLOSEST_SPOT\") {\n      this.closest_strat();\n    } else {\n      console.log(\"Unknown strategy: \", this.strategy);\n    }\n  }\n}\n\nexport default Agent;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import Cell from \"./Cell\";\nimport Agent from \"./Agent\";\nimport EasyStar from \"easystarjs\";\n\nfunction getDirectionArray(direction) {\n  switch (direction) {\n    case \"n\":\n      return [EasyStar.BOTTOM];\n    case \"s\":\n      return [EasyStar.TOP];\n    case \"e\":\n      return [EasyStar.LEFT];\n    case \"w\":\n      return [EasyStar.RIGHT];\n    case \"v\":\n      return [EasyStar.TOP, EasyStar.BOTTOM];\n    case \"h\":\n      return [EasyStar.LEFT, EasyStar.RIGHT];\n    default:\n      return [EasyStar.TOP, EasyStar.BOTTOM, EasyStar.LEFT, EasyStar.RIGHT];\n  }\n}\n\nclass World {\n  constructor(worldmap, mapDirection, selectedStrategies) {\n    this.state = [];\n    this.agents = [];\n\n    this.tickCount = 0;\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter((row) => row.length > 0);\n    const directionRows = mapDirection.split(\"\\n\").filter((row) => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      E: \"EXIT\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      _: \"EMPTY\",\n      o: \"BUILDING\",\n    };\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const directionRow = [...directionRows[y]];\n      const rowData = [...row].map((c, x) => {\n        const allowed_direction = directionRow[x];\n        const type = types[c];\n        const cell = new Cell(this, type, x, y, allowed_direction);\n\n        this.bikePathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n        this.pedestrianPathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.bikePathfinder.setAcceptableTiles([\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"EXIT\",\n    ]);\n    this.bikePathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.bikePathfinder.setTileCost(\"PARKING\", 4);\n\n    this.pedestrianPathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.pedestrianPathfinder.setAcceptableTiles([\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\",\n    ]);\n    this.pedestrianPathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.pedestrianPathfinder.setTileCost(\"PARKING\", 3);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  getRandomCellOfType(type) {\n    const cells = this.state.flat().filter((cell) => cell.type === type);\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n\n  getParkingLots() {\n    return this.state.flat().filter((cell) => cell.type === \"PARKING\");\n  }\n\n\n  // // Returns all neighbors of a cell\n  // getNeighbors(cell) {\n  //   const { x, y } = cell;\n  //   let neighbors = [];\n\n  //   // Get neighbors in all 4 directions\n  //   if (y > 0) {\n  //     neighbors.push(this.state[y - 1][x]);\n  //   }\n  //   if (y < this.state.length - 1) {\n  //     neighbors.push(this.state[y + 1][x]);\n  //   }\n  //   if (x > 0) {\n  //     neighbors.push(this.state[y][x - 1]);\n  //   }\n  //   if (x < this.state[y].length - 1) {\n  //     neighbors.push(this.state[y][x + 1]);\n  //   }\n  //   return neighbors;\n  // }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent(strategy) {\n    // Randomly pick a spawn cell\n    const spawn = this.getRandomCellOfType(\"SPAWN\");\n    const agent = new Agent(this, \"BIKE\", spawn, strategy);\n\n    if (spawn.checkAddAgent(agent)) {\n      // Add agent of type \"BIKE\" to this cell\n      spawn.addAgent(agent);\n      this.agents.push(agent);\n    }\n  }\n\n  // Remove agent\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n    agent.cell.removeAgent(agent);\n  }\n\n  // // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.tickCount++;\n    this.agents.sort(function () {\n      return 0.5 - Math.random();\n    });\n    for (const agent of this.agents) {\n      if(agent.type === \"BIKE\") {\n        agent.act();\n      } else if(agent.type === \"PEDESTRIAN\" && this.tickCount % 2 === 0) {\n        agent.act();\n      }\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap, { mapDirection } from \"./map\";\n\nimport World from \"./World\";\n\n// **********************************\n// Static config variables\n// **********************************\nconst experimentTicks = 10000;\nconst automatedLoopLength = 500;\nconst maxSpawnRateLimit = 1;\n\n// **********************************\n// Parameter variable setup\n// **********************************\n\nconst STRATEGIES = [\n  \"RANDOM_CHOICE\",\n  \"LOT_PREFERENCE\",\n  \"CLOSEST_SPOT\",\n];\n\n// Set default selected strategies\nlet selectedStrategies = [\n  \"RANDOM_CHOICE\",\n  \"LOT_PREFERENCE\",\n  \"CLOSEST_SPOT\",\n];\n\nvar currentTick = 0;\n\nvar csvRowsPark = \"strategy,time\\n\";\nvar csvRowsGoal = \"strategy,time\\n\";\n\nvar timeToParkData = [selectedStrategies];\nvar timeToGoalData = [selectedStrategies];\n\nvar experimentMode = false;\n\nlet spawnRateType = \"auto\";\n\n// Config for automated spawn rate\nconst minSpawnRate = 0.2;\nvar maxSpawnRate = 1;\n\n// Default tickDelay and spawnspeed\nlet tickDelay = 20;\nlet spawnspeed = 0.2;\n\nlet paused = false;\n\n// **********************************\n// Utility functions\n// **********************************\n\n// Reset keeps current settings, but clears the world and restarts the simulation\nfunction reset() {\n  world = new World(worldmap, mapDirection);\n  timeToParkData = [selectedStrategies];\n  timeToGoalData = [selectedStrategies];\n  csvRowsPark = \"strategy,time\\n\";\n  csvRowsGoal = \"strategy,time\\n\";\n  currentTick = 0;\n  experimentMode = false;\n}\n\n// Turns stragegy name into a nice display name\nfunction strategyName(strategy) {\n  return strategy\n    .toLowerCase()\n    .replace(/^_*(.)|_+(.)/g, (s, c, d) =>\n      c ? c.toUpperCase() : \" \" + d.toUpperCase()\n    );\n}\n\n// Onclick of #experiment-mode, start experiment\ndocument.getElementById(\"experiment-mode\").onclick = function () {\n  reset();\n  experimentMode = true;\n  paused = false;\n}\n\n// **********************************\n// User Controls\n// **********************************\n\n\n// -- Spawn rate control\n// **********************************\n\n// return value for current bin using sine wave between min and max, over length of automatedLoopLength\nfunction getSpawnRate(currentBin) {\n  return minSpawnRate + (maxSpawnRate - minSpawnRate) * Math.pow((Math.sin((currentBin / automatedLoopLength) * 2 * Math.PI) + 1) / 2, 2);\n}\n\n// Create array of spawn rates of length automated_loop_length\nlet spawnRates = []\nfunction updateSpawnRates() {\n  spawnRates = [];\n  for (var i = 0; i < automatedLoopLength; i++) {\n    spawnRates.push(getSpawnRate(i));\n  }\n}\nupdateSpawnRates();\n\n// Draw bars for spawn_rate on canvas\nfunction drawSpawnRate(currentTick) {\n  document.getElementById(\"automated-spawn-rate-display\").innerHTML = Math.floor(spawnRates[currentTick % automatedLoopLength] * 100) + \"%\";\n  const canvas = document.getElementById(\"spawn-rate\");\n  const ctx = canvas.getContext(\"2d\");\n  const width = canvas.width;\n  const height = canvas.height;\n  const barWidth = width / automatedLoopLength;\n  const barHeight = height / maxSpawnRateLimit;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillStyle = \"#fbe7a5\";\n  ctx.fillRect(0, 0, width, height);\n\n  // Plot bar for spawn rate at corresponding tick\n  for (var i = 0; i < automatedLoopLength; i++) {\n    ctx.fillStyle = \"#f6c344\";\n    ctx.fillRect(i * barWidth, height - spawnRates[i] * barHeight, barWidth, spawnRates[i] * barHeight);\n  }\n\n  // Plot a line every 20%\n  for (var i = 0; i < maxSpawnRateLimit; i += 0.2) {\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#c49c35\";\n    ctx.beginPath();\n    ctx.moveTo(0, height - i * barHeight);\n    ctx.lineTo(width, height - i * barHeight);\n    ctx.stroke();\n    // Add text\n    ctx.fillStyle = \"#c49c35\";\n    ctx.font = \"20px Arial\";\n    ctx.fillText(Math.floor(i * 100) + \"%\", width - 42, height - i * barHeight - 3);\n  }\n\n  // Plot the current spawn rate\n  const currentIndex = (currentTick % automatedLoopLength)\n  ctx.fillStyle = \"#312708\";\n  ctx.fillRect(currentIndex * barWidth, height - spawnRates[currentIndex] * barHeight - 2, barWidth * 4, spawnRates[currentIndex] * barHeight + 2);\n  // Draw small circle on top of line\n  ctx.beginPath();\n  ctx.arc(currentIndex * barWidth + barWidth * 2, height - spawnRates[currentIndex] * barHeight, 5, 0, 2 * Math.PI);\n  ctx.fill();\n}\ndrawSpawnRate(currentTick);\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n  document.getElementById(\"manual-spawn-rate-display\").innerHTML = Math.round(spawnspeed * 100) + \"%\";\n});\n\n// Switch between spawn rate types\ndocument.getElementById(\"spawnrate-radio-auto\").addEventListener(\"change\", function (event) {\n  spawnRateType = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = true;\n});\ndocument.getElementById(\"spawnrate-radio-manual\").addEventListener(\"change\", function (event) {\n  spawnRateType = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = false;\n});\n\n// Switch between max_spawn_rate value\ndocument.getElementById(\"automatedPeak1\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 1;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak2\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 0.66;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak3\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 0.33;\n  updateSpawnRates();\n});\n\n\n// -- Reset button\n// **********************************\n\ndocument.getElementById(\"reset\").addEventListener(\"click\", () => {\n  reset();\n});\n\n// -- Strategy selection\n// **********************************\n\n// Create HTML checkboxes for each strategy, and add them and remove them to selectedStrategies when enabled/disabled\nconst strategyCheckboxes = document.getElementById(\"strategy-checkboxes\");\nSTRATEGIES.forEach((strategy) => {\n  const container = document.createElement(\"div\");\n  container.classList.add(\"form-check\");\n  const checkbox = document.createElement(\"input\");\n  checkbox.classList.add(\"form-check-input\");\n  checkbox.type = \"checkbox\";\n  checkbox.id = strategy;\n  checkbox.checked = selectedStrategies.includes(strategy);\n  checkbox.addEventListener(\"change\", () => {\n    if (checkbox.checked) {\n      selectedStrategies.push(strategy);\n    } else {\n      selectedStrategies = selectedStrategies.filter((s) => s !== strategy);\n    }\n    reset();\n  });\n  const label = document.createElement(\"label\");\n  label.htmlFor = strategy;\n  label.classList.add(\"form-check-label\");\n  label.appendChild(document.createTextNode(strategyName(strategy)));\n  strategyCheckboxes.appendChild(container);\n  container.appendChild(checkbox);\n  container.appendChild(label);\n});\n\n// -- Play/pause button\n// **********************************\n\ndocument.getElementById(\"play-pause\").addEventListener(\"click\", () => {\n  if (document.getElementById(\"play-pause\").innerHTML === \"Play\") {\n    document.getElementById(\"play-pause\").innerHTML = \"Pause\";\n    paused = false;\n  } else {\n    document.getElementById(\"play-pause\").innerHTML = \"Play\";\n    paused = true;\n  }\n});\n\n// -- Tickdelay\n// **********************************\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickDelay = e.target.value;\n});\n\n// -- Display options\n// **********************************\nvar drawDirection = false;\nvar drawCoords = false;\nvar drawCount = false;\n\ndocument.getElementById(\"draw-direction\").addEventListener(\"change\", (e) => {\n  drawDirection = e.target.checked;\n});\ndocument.getElementById(\"draw-coords\").addEventListener(\"change\", (e) => {\n  drawCoords = e.target.checked;\n});\ndocument.getElementById(\"draw-count\").addEventListener(\"change\", (e) => {\n  drawCount = e.target.checked;\n});\n\n\n// **********************************\n// Data gathering functions used by the agents\n// **********************************\n\nexport function addTimeToPark(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToParkData.push(row);\n  csvRowsPark += (`${strategy},${data}\\n`)\n}\n\nexport function addTimeToGoal(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToGoalData.push(row);\n  csvRowsGoal += (`${strategy},${data}\\n`)\n}\n\n// **********************************\n// Results modal\n// **********************************\n\ngoogle.charts.load(\"current\", { packages: [\"corechart\"] });\ngoogle.charts.setOnLoadCallback(() => {\n  DrawChart(\"time-to-park\", timeToParkData, 0);\n  DrawChart(\"time-to-goal\", timeToGoalData, 0);\n});\n// Render charts onclick of #render-charts\ndocument.getElementById(\"render-charts\").addEventListener(\"click\", () => {\n  openResultsModal();\n});\ndocument.getElementById(\"closeResultsModal\").addEventListener(\"click\", () => {\n  closeResultsModal();\n});\n\nfunction openResultsModal() {\n  // Get maximum value of combined timeToParkData and timeToGoalData\n  let max = 0;\n  timeToParkData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n  timeToGoalData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n\n  DrawChart(\"time-to-park\", timeToParkData, max);\n  DrawChart(\"time-to-goal\", timeToGoalData, max);\n  document.getElementById(\"resultsModal\").style.display = \"block\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"block\";\n  paused = true;\n}\nfunction closeResultsModal() {\n  document.getElementById(\"resultsModal\").style.display = \"none\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"none\";\n  paused = false;\n}\nfunction DrawChart(id, data, max) {\n  // Create the data table.\n  var data = google.visualization.arrayToDataTable(data);\n\n  // Set chart options\n  var options = {\n    width: \"1100\",\n    height: 300,\n    bar: { gap: 0 },\n    interpolateNulls: false,\n    chartArea: { left: 10, top: 0, bottom: 35 },\n    histogram: {\n      bucketSize: 20,\n      maxNumBuckets: 50,\n      minValue: 0,\n      maxValue: max,\n      lastBucketPercentile: 5\n    },\n  };\n\n  // Instantiate and draw our chart, passing in some options.\n  var chart = new google.visualization.Histogram(document.getElementById(id));\n  chart.draw(data, options);\n}\n\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nlet world = new World(worldmap, mapDirection);\n\n// **********************************\n// This runs the simulation loop every tick\n// **********************************\n\nfunction gameTick() {\n  if (!paused) {\n\n    // Spawn new agent sometimes\n    let rate = spawnspeed;\n    if (spawnRateType === \"auto\") {\n      rate = spawnRates[currentTick % automatedLoopLength];\n    }\n\n    if (Math.random() < rate) {\n      // Pick random strategy from selectedStrategies\n      if (selectedStrategies.length > 0) {\n        const strategy =\n          selectedStrategies[\n          Math.floor(Math.random() * selectedStrategies.length)\n          ];\n        world.spawnAgent(strategy);\n      }\n    }\n\n    // Move current agents\n    world.tick();\n    currentTick++;\n    drawSpawnRate(currentTick);\n    if (experimentMode) {\n      document.getElementById(\"experiment-progress\").style.width = (currentTick / experimentTicks) * 100 + \"%\";\n    }\n    if (experimentMode && currentTick > experimentTicks) {\n      openResultsModal();\n      document.getElementById(\"experiment-progress\").style.width = \"0%\";\n      experimentMode = false;\n    }\n  }\n  setTimeout(gameTick, tickDelay);\n}\n\ngameTick();\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst squareSize = 32;\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\nfunction drawCanvas() {\n  for (const [y, row] of world.state.entries()) {\n    for (const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);\n\n\n// **********************************\n// Download CSV data to file\n// **********************************\n\n// When button with id \"export-park\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-park\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsPark, `time-to-park`);\n}\n);\n// When button with id \"export-goal\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-goal\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsGoal, `time-to-goal`);\n}\n);\n// Function to download the csv file\nfunction downloadCSV(csv, filename) {\n  var csvFile;\n  var downloadLink;\n\n  // CSV file\n  csvFile = new Blob([csv], { type: \"text/csv\" });\n  downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename + `===${selectedStrategies.join(\"-\")}===peak-${maxSpawnRate}.csv`;\n\n  // Add hidden download link\n  downloadLink.href = window.URL.createObjectURL(csvFile);\n  downloadLink.style.display = \"none\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}