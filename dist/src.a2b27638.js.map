{"version":3,"sources":["src/map.js","src/Cell.js","src/Agent.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["map","mapDirection","MAX_PARKED_BIKES","Cell","world","type","x","y","allowed_direction","agents","bikes","agent","filter","length","push","a","ctx","squareSize","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","font","fillText","bikeAgents","pedestrianAgents","forEach","i","drawBike","drawPedestrian","globalAlpha","Agent","cell","strategy","spawn","parked_cell","move_to","incoming","lotPref","path","calculatingPath","stage","ticks","ticks_to_parked","ticks_to_goal","bikePathfinder","pedestrianPathfinder","addTimeToPark","addTimeToGoal","canPark","addBike","hasParked","removeBike","callback","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","checkAddAgent","moveAgent","shift","changeMoveTo","getCellAtCoordinates","makeMove","park","buildingCell","getRandomCellOfType","hasReachedGoal","Math","random","parkingCell","moveParkingLot","parking","leavingParkingLot","moveToGoal","inGoal","leavingGoal","unpark","removeAgent","parkingLots","floor","default","parkingLotPreference","getDirectionArray","direction","EasyStar","BOTTOM","TOP","LEFT","RIGHT","World","worldmap","state","rows","split","row","directionRows","types","S","E","X","b","w","p","_","o","js","entries","directionRow","rowData","c","setDirectionalCondition","setGrid","setAcceptableTiles","setTileCost","cells","flat","addAgent","sort","act","tickdelay","spawnspeed","paused","document","getElementById","addEventListener","innerHTML","e","target","value","gameTick","spawnAgent","tick","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","getContext","canvas","width","height","drawCanvas","draw","requestAnimationFrame","timeToParkCanvas","timeToGoalCanvas","timeToParkChart","Chart","data","datasets","label","backgroundColor","borderColor","borderWidth","pointStyle","options","animation","spanGaps","scales","yAxes","beginAtZero","line","pointRadius","timeToGoalChart","labels","dataset","update","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","createElement","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const map = `\n____________________________________\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\n_bbw______________aa____________bb__\n_bbw______________aappppppppppa_bb__\n_bbw______________aappppppppppaaaaaS\n_bbw______________aappppppppppaaaaaE\n_bbw______________aa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbwwwooooooooooooaa________________\n_bbappoooopppppppoaa________________\n_bbappoooopppppppoaa________________\n_bbappooooooooooaaaa___pppppp_______\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwoooooooooooXaaaaaaaaaaaaaaaaaS\n_bbwwwooooooooooooaaaaaaaaaaaaaaaaaE\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwooooooooooooaa________________\n_bbaaa____________aa________________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbw_____________aaaaa______________\n_bbw______________aaaaa_____________\n_bbw______________aaaaa_____________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_ESw________________________________\n`;\n\nexport const mapDirection = `\n____________________________________\nwawwwwwwwwwwwwwwwwaawwwwwwwwwwwwwa__\neaaeeeeeeeeeeeeeeeaaeeeeeeeeeeeean__\n_sna______________sn____________sn__\n_sna______________aahhhhhhhhhha_sn__\n_sna______________aahhhhhhhhhhaaaaaa\n_sna______________aahhhhhhhhhhaaaaaa\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_aaaaa____________sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh__________aaaa___vvvvvv_______\n_snaaa____________sn___vvvvvv_______\n_snaaa___________aaawwwaaaaaawwwwwwa\n_snaaa____________aaeeeaaaaaaeeeeeea\n_snaaa____________sn___vvvvvv_______\n_snaaa____________sn________________\n_snaaa____________sn________________\n_aaawwwwwwwwwwwwwwana_______________\n_aaaeeeeeeeeeeeeeeeaa_______________\n_sna_____________aaaaa______________\n_sna______________aaaaa_____________\n_sna______________aaaaa_____________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_aaa________________________________\n`;\n\nexport default map;\n","const MAX_PARKED_BIKES = 8;\n\nclass Cell {\n  constructor(world, type, x, y, allowed_direction) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n    this.allowed_direction = allowed_direction;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"SPAWN\") {\n      return true;\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 2\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 3\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 2\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 3\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(canvas_x + 2, canvas_y + squareSize - 8, squareSize - 4, 4);\n      ctx.fillStyle = \"#316cf4\";\n      ctx.fillRect(\n        canvas_x + 2,\n        canvas_y + squareSize - 8,\n        (squareSize + 4) * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#000000\";\n      ctx.font = \"12px monospace\";\n      ctx.fillText(\n        \"\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          this.drawBike(ctx, x * squareSize + i * 10, y * squareSize);\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    // !! Debug to show number of agents in cell\n    // if([\"SPAWN\", \"BIKE_PATH\", \"PEDESTRIAN_PATH\", \"ALL_PATH\", \"PARKING\", \"BUILDING_ENTRANCE\"].includes(this.type)) {\n    //   ctx.font = '12px monospace';\n    //   ctx.fillStyle = \"black\";\n    //   // make text slightly transparent\n    //   ctx.globalAlpha = 0.3;\n    //   ctx.fillText(\"B:\" + this.agents.filter(({type}) => type === \"BIKE\").length, canvas_x + 2, canvas_y + 12);\n    //   ctx.fillText(\"P:\" + this.agents.filter(({type}) => type === \"PEDESTRIAN\").length, canvas_x + 2, canvas_y + 24);\n    //   // reset transparency\n    //   ctx.globalAlpha = 1;\n    // }\n\n    // !! Draws directions in which agents are allowed to move\n    // ctx.font = '14px monospace';\n    // ctx.fillStyle = \"black\";\n    // // make text slightly transparent\n    // ctx.globalAlpha = 0.5;\n    // ctx.fillText(this.allowed_direction, canvas_x + 2, canvas_y + 24);\n    // // reset transparency\n    // ctx.globalAlpha = 1;\n\n    // !! Draw coordinates\n    ctx.font = \"11px monospace\";\n    ctx.fillStyle = \"black\";\n    // make text slightly transparent\n    ctx.globalAlpha = 0.5;\n    ctx.fillText(this.x + \",\", canvas_x, canvas_y + 10);\n    ctx.fillText(this.y, canvas_x, canvas_y + 22);\n    // reset transparency\n    ctx.globalAlpha = 1;\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#e7b1b6\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#f3d8da\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#eaecef\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#cfd4d9\";\n        break;\n      case \"PARKING\":\n        color = \"#aeb5bc\";\n        break;\n      case \"EMPTY\":\n        color = \"#d5e6de\";\n        break;\n      case \"BUILDING\":\n        color = \"#a6c4f9\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#7ba6f7\";\n        break;\n      case \"EXIT\":\n        color = \"#e7b1b6\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y) {\n    ctx.fillStyle = \"#222529\";\n    ctx.fillRect(x + 6, y + 2, 5, 20);\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#fd7e14\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","import { addTimeToPark, addTimeToGoal } from \"./index\";\n\nclass Agent {\n  constructor(world, type, cell, strategy) {\n    this.world = world;\n    this.type = type;\n    this.spawn = cell;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.strategy = strategy;\n    this.move_to = null;\n    this.incoming = true; // Whether the agent is entering the sim or leaving.\n    this.lotPref = null;\n\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.calculatingPath = false;\n    this.stage = \"ENTERING\";\n\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\"\n      ? this.world.bikePathfinder\n      : this.world.pedestrianPathfinder;\n  }\n\n  hasParked() {\n    this.ticks_to_parked = this.ticks;\n    addTimeToPark(this.ticks_to_parked);\n  }\n\n  hasReachedGoal() {\n    this.ticks_to_goal = this.ticks;\n    addTimeToGoal(this.ticks_to_goal);\n  }\n\n  park() {\n    if (this.cell.canPark()) {\n      if (\n        this.type === \"BIKE\" &&\n        this.cell.type === \"PARKING\" &&\n        this.parked_cell === null\n      ) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n        this.hasParked();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unpark() {\n    if (\n      this.type === \"PEDESTRIAN\" &&\n      this.cell.type === \"PARKING\" &&\n      this.parked_cell !== null\n    ) {\n      this.cell.removeBike();\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n    }\n  }\n\n  changeMoveTo(x, y, callback) {\n    this.calculatingPath = true;\n    this.move_to = [x, y];\n    this.path = null;\n\n    const pathfinder = this.getPathfinder();\n    pathfinder.findPath(\n      this.cell.x,\n      this.cell.y,\n      this.move_to[0],\n      this.move_to[1],\n      (path) => {\n        if (path !== null) {\n          this.path = path;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n        this.calculatingPath = false;\n        if (callback && path !== null) {\n          callback();\n        }\n      }\n    );\n\n    pathfinder.calculate();\n  }\n\n  makeMove(nextCell) {\n    if (nextCell.checkAddAgent(this)) {\n      this.world.moveAgent(this, nextCell);\n      this.path.shift();\n    }\n  }\n\n  ///////////////////////\n  // CONTROL FUNCTIONS //\n  ///////////////////////\n\n  exiting() {\n    this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n      this.stage = \"MOVING_TO_EXIT\";\n    });\n  }\n\n  moveParkingLot() {\n    if (\n      this.calculatingPath == false &&\n      this.path !== null &&\n      this.path.length > 0\n    ) {\n      const nextCell = this.world.getCellAtCoordinates(\n        this.path[0].x,\n        this.path[0].y\n      );\n      this.makeMove(nextCell);\n    } else {\n      if (this.incoming == true) {\n        this.stage = \"PARKING\";\n      } else {\n        this.stage = \"UNPARKING\";\n      }\n    }\n  }\n\n  parking() {\n    if (this.park()) {\n      this.stage = \"LEAVING_PARKING\";\n    } else {\n      console.log(\"Could not park\");\n    }\n  }\n\n  leavingParkingLot() {\n    const buildingCell = this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n    this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n      this.stage = \"MOVING_TO_GOAL\";\n    });\n  }\n\n  moveToGoal() {\n    if (\n      this.calculatingPath == false &&\n      this.path !== null &&\n      this.path.length > 0\n    ) {\n      const nextCell = this.world.getCellAtCoordinates(\n        this.path[0].x,\n        this.path[0].y\n      );\n      this.makeMove(nextCell);\n    } else {\n      this.stage = \"IN_GOAL\";\n      this.hasReachedGoal();\n    }\n  }\n\n  inGoal() {\n    if (Math.random() < 0.01) {\n      this.stage = \"LEAVING_GOAL\";\n      this.incoming = false;\n    }\n  }\n\n  leavingGoal() {\n    this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n      this.stage = \"MOVING_TO_PARKING_LEAVING\";\n    });\n  }\n\n  ///////////////////////\n  //    STRATEGIES     //\n  ///////////////////////\n  // 1) default: random lot, random spot.\n  // 2) parkingLotPreference: specific parking lot, random spot.\n  // 3) parkingLotSpotPreference: specific lot and spot.\n  // ADD MORE!\n\n  default() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const parkingCell = this.world.getRandomCellOfType(\"PARKING\");\n        this.changeMoveTo(parkingCell.x, parkingCell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        this.moveParkingLot();\n        break;\n      case \"PARKING\":\n        this.parking();\n        break;\n      case \"LEAVING_PARKING\":\n        this.leavingParkingLot();\n        break;\n      case \"MOVING_TO_GOAL\":\n        this.moveToGoal();\n        break;\n      case \"IN_GOAL\":\n        this.inGoal();\n        break;\n      case \"LEAVING_GOAL\":\n        this.leavingGoal();\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        this.moveParkingLot();\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"Unknown stage: \", this.stage);\n        break;\n    }\n  }\n\n  parkingLotPreference() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const parkingLots = [\"top\", \"middle\", \"left\", \"right\"];\n        // this.lotPref = parkingLots[Math.floor(Math.random() * 0)];\n\n        this.changeMoveTo(19, 5, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        this.moveParkingLot();\n\n        if (this.lotPref == \"top\") {\n          this.changeMoveTo(\n            Math.floor(Math.random() * (29 - 20 + 1)) + 20,\n            Math.floor(Math.random() * (6 - 4 + 1)) + 4\n          );\n        }\n        this.strategy == \"DEFAULT\";\n        break;\n\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n  act() {\n    this.ticks += 1;\n\n    if (this.strategy == \"DEFAULT\") {\n      this.default();\n    } else if (this.strategy == \"PARKING_LOT_PREFERENCE\") {\n      this.parkingLotPreference();\n    } else {\n      console.log(\"Unknown strategy: \", this.strategy);\n    }\n  }\n}\n\nexport default Agent;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import Cell from \"./Cell\";\nimport Agent from \"./Agent\";\nimport EasyStar from \"easystarjs\";\n\nfunction getDirectionArray(direction) {\n  switch (direction) {\n    case \"n\":\n      return [EasyStar.BOTTOM];\n    case \"s\":\n      return [EasyStar.TOP];\n    case \"e\":\n      return [EasyStar.LEFT];\n    case \"w\":\n      return [EasyStar.RIGHT];\n    case \"v\":\n      return [EasyStar.TOP, EasyStar.BOTTOM];\n    case \"h\":\n      return [EasyStar.LEFT, EasyStar.RIGHT];\n    default:\n      return [EasyStar.TOP, EasyStar.BOTTOM, EasyStar.LEFT, EasyStar.RIGHT];\n  }\n}\n\nclass World {\n  constructor(worldmap, mapDirection) {\n    this.state = [];\n    this.agents = [];\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter((row) => row.length > 0);\n    const directionRows = mapDirection.split(\"\\n\").filter((row) => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      E: \"EXIT\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      _: \"EMPTY\",\n      o: \"BUILDING\",\n    };\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const directionRow = [...directionRows[y]];\n      const rowData = [...row].map((c, x) => {\n        const allowed_direction = directionRow[x];\n        const type = types[c];\n        const cell = new Cell(this, type, x, y, allowed_direction);\n\n        this.bikePathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n        this.pedestrianPathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.bikePathfinder.setAcceptableTiles([\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"EXIT\",\n    ]);\n    this.bikePathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.bikePathfinder.setTileCost(\"PARKING\", 4);\n\n    this.pedestrianPathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.pedestrianPathfinder.setAcceptableTiles([\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\",\n    ]);\n    this.pedestrianPathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.pedestrianPathfinder.setTileCost(\"PARKING\", 3);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  getRandomCellOfType(type) {\n    const cells = this.state.flat().filter((cell) => cell.type === type);\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n\n  // // Returns all neighbors of a cell\n  // getNeighbors(cell) {\n  //   const { x, y } = cell;\n  //   let neighbors = [];\n\n  //   // Get neighbors in all 4 directions\n  //   if (y > 0) {\n  //     neighbors.push(this.state[y - 1][x]);\n  //   }\n  //   if (y < this.state.length - 1) {\n  //     neighbors.push(this.state[y + 1][x]);\n  //   }\n  //   if (x > 0) {\n  //     neighbors.push(this.state[y][x - 1]);\n  //   }\n  //   if (x < this.state[y].length - 1) {\n  //     neighbors.push(this.state[y][x + 1]);\n  //   }\n  //   return neighbors;\n  // }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent(strategy) {\n    // Randomly pick a spawn cell\n    const spawn = this.getRandomCellOfType(\"SPAWN\");\n    const agent = new Agent(this, \"BIKE\", spawn, strategy);\n\n    if (spawn.checkAddAgent(agent)) {\n      // Add agent of type \"BIKE\" to this cell\n      spawn.addAgent(agent);\n      this.agents.push(agent);\n    }\n  }\n\n  // Remove agent\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n    agent.cell.removeAgent(agent);\n  }\n\n  // // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.agents.sort(function () {\n      return 0.5 - Math.random();\n    });\n    for (const agent of this.agents) {\n      agent.act();\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap, { mapDirection } from \"./map\";\n\nimport World from \"./World\";\n\nconst squareSize = 32;\n\nlet tickdelay = 100;\nlet spawnspeed = 0.2;\nlet paused = false;\n\n// **********************************\n// Controls\n// **********************************\n\n// Control play/pause button with \"play-pause\" id\ndocument.getElementById(\"play-pause\").addEventListener(\"click\", () => {\n  if (document.getElementById(\"play-pause\").innerHTML === \"Play\") {\n    document.getElementById(\"play-pause\").innerHTML = \"Pause\";\n    paused = false;\n  } else {\n    document.getElementById(\"play-pause\").innerHTML = \"Play\";\n    paused = true;\n  }\n});\n\n// Control tickdelay using range input with id \"tickdelay\"\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickdelay = e.target.value;\n});\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n});\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nconst world = new World(worldmap, mapDirection);\n\n// **********************************\n// This is where the simulation loop\n// goes later or something\n// **********************************\n\nfunction gameTick() {\n  if (!paused) {\n    // Spawn new agent sometimes\n    if (Math.random() < spawnspeed) {\n      world.spawnAgent(\"PARKING_LOT_PREFERENCE\");\n    }\n\n    // Move current agents\n    world.tick();\n  }\n  setTimeout(gameTick, tickdelay);\n}\n\ngameTick();\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\nfunction drawCanvas() {\n  for (const [y, row] of world.state.entries()) {\n    for (const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);\n\n// **********************************\n// Draw graphs for time-to-park and time-to-goal\n// **********************************\n\nconst timeToParkCanvas = document\n  .getElementById(\"time-to-park\")\n  .getContext(\"2d\");\nconst timeToGoalCanvas = document\n  .getElementById(\"time-to-goal\")\n  .getContext(\"2d\");\n\nconst timeToParkChart = new Chart(timeToParkCanvas, {\n  type: \"line\",\n  data: {\n    datasets: [\n      {\n        label: \"Time to park\",\n        data: [],\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1,\n        pointStyle: \"cross\",\n      },\n    ],\n  },\n  options: {\n    animation: false,\n    spanGaps: true,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n    datasets: {\n      line: {\n        pointRadius: 0,\n      },\n    },\n  },\n});\n\nconst timeToGoalChart = new Chart(timeToGoalCanvas, {\n  type: \"line\",\n  data: {\n    datasets: [\n      {\n        label: \"Time to goal\",\n        data: [],\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1,\n        pointStyle: \"cross\",\n      },\n    ],\n  },\n  options: {\n    animation: false,\n    spanGaps: true,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n    datasets: {\n      line: {\n        pointRadius: 0,\n      },\n    },\n  },\n});\n\nexport function addTimeToPark(data) {\n  timeToParkChart.data.labels.push(timeToParkChart.data.labels.length);\n  timeToParkChart.data.datasets.forEach((dataset) => {\n    dataset.data.push(data);\n  });\n  timeToParkChart.update();\n}\n\nexport function addTimeToGoal(data) {\n  timeToGoalChart.data.labels.push(timeToGoalChart.data.labels.length);\n  timeToGoalChart.data.datasets.forEach((dataset) => {\n    dataset.data.push(data);\n  });\n  timeToGoalChart.update();\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}