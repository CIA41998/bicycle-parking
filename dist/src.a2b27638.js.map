{"version":3,"sources":["src/map.js","src/Cell.js","src/Agent.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["map","mapDirection","MAX_PARKED_BIKES","Cell","world","type","x","y","allowed_direction","agents","bikes","agent","filter","length","push","a","ctx","squareSize","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","font","globalAlpha","arrow","fillText","bikeAgents","pedestrianAgents","forEach","i","drawBike","drawPedestrian","Agent","cell","strategy","spawn","parked_cell","move_to","exitRate","failedToPark","searchTime","lotPreference","path","calculatingPath","stage","ticks","ticks_to_parked","ticks_to_goal","bikePathfinder","pedestrianPathfinder","addTimeToPark","addTimeToGoal","canPark","addBike","hasParked","removeBike","callback","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","checkAddAgent","moveAgent","shift","parkingCell","getRandomCellOfType","changeMoveTo","getCellAtCoordinates","makeMove","park","buildingCell","hasReachedGoal","Math","random","unpark","removeAgent","min","max","floor","location","coordinates","Array","randomValueInRange","lotOptions","lotMove","lotSearch","options","lot","coords","Q","grid","label","BFS","V","pop","dirs","next","state","valid_types","undefined","includes","default","parkingLotPreference","closest_strat","getDirectionArray","direction","EasyStar","BOTTOM","TOP","LEFT","RIGHT","World","worldmap","selectedStrategies","tickCount","rows","split","row","directionRows","types","S","E","X","b","w","p","_","o","js","entries","directionRow","rowData","c","setDirectionalCondition","setGrid","setAcceptableTiles","setTileCost","cells","flat","addAgent","sort","act","STRATEGIES","csvRowsPark","csvRowsGoal","timeToParkData","timeToGoalData","experimentMode","experiment_ticks","currentTick","reset","DrawChart","strategyName","toLowerCase","replace","s","d","toUpperCase","tickdelay","spawnspeed","paused","document","getElementById","onclick","automated_loop_length","min_spawn_rate","max_spawn_rate","max_limit","getSpawnRate","current_bin","pow","sin","PI","spawn_rates","updateSpawnRates","drawSpawnRate","innerHTML","canvas","getContext","width","height","barWidth","barHeight","clearRect","currentI","spawn_rate_type","addEventListener","event","target","value","disabled","strategyCheckboxes","container","createElement","classList","add","checkbox","id","checked","htmlFor","appendChild","createTextNode","e","round","gameTick","rate","spawnAgent","tick","style","openResultsModal","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","drawCanvas","draw","requestAnimationFrame","charts","google","load","packages","setOnLoadCallback","closeResultsModal","display","data","visualization","arrayToDataTable","bar","gap","chartArea","legend","position","interpolateNulls","histogram","maxNumBuckets","minValue","maxValue","chart","Histogram","index","indexOf","fill","downloadCSV","csv","filename","csvFile","downloadLink","Blob","download","join","href","window","URL","createObjectURL","body","click","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"mappings":"AOAA,AJAA,ACAA,AEAA,AIAA,ACAA,IDAIsQ,ACAAW,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AJCA,AJAA,ACAA,AEAA,ADDA;AEEA,AJAA,ACAA,ACDA,AKAA,ACCA,SDDSX,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AHE9B,AJAA,ACAA,ACDA,EKAE,ACCA,IDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;AJCF,AJAA,ACAA,ACDA,IKAIhB,SAAS,GAAGE,YAAY,EAAxB;AHEJ,AJAA,ACAA,ACDA,EKAG,ACADa,OAAO,CAACE,MAAR,GAAiB,YAAY;AJE/B,AJAA,ACAA,ACDA,ALLA,IWKIH,AXLEpR,GAAG,CWKD,CAACwR,MAAL,u1CXLJ;AOOA,AJAA,ACAA,ACDA,AHNA,AMAA,ARuCO,EUjCL,ACAC,CAFD,CXmCWvR,KUjCJqQ,OViCgB,EUjCvB,61CViCK;AO/BP,AJAA,ACAA,ACDA,AKAC;AHED,AJAA,ACAA,ACDA,AGPA,ACDA,EEOEe,OAAO,CAACrB,IAAR,CXuEahQ,EWvEEoR,IAAI,CAACpB,IAAL,CAAUvI,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCgK,IAAI,CAACC,GAAL,EAA/C;AJGF,AJAA,ACAA,ACDA,AKAA,ECDEN,IAAI,CAACO,EDCEnB,QCDP,CAAgBoB,GDClB,GAAwB,MCDtB,CAA6BP,OAA7B,EAAsCD,IAAI,CAACS,WAA3C;AJGF,AJAA,ACAA,ACDA,AMDC,AHPD,ACDA,ECSE;AHEF,AJAA,ACAA,ACDA,EKAE,IAAI;AHEN,AJAA,ACAA,ACDA,AMDA,AVXA,AQGA,ICSI,ACDAC,AVXE5R,MSYI,IAAIuQ,ACDA,GAAG,EDCP,CTZY,CSYlB,ACDJ,EVXyB,CAAzB;AMcA,AHAA,ACDA,EKAG,CAFD,CAEE,OAAOC,GAAP,EAAY;AHEhB,AHAA,ACDA,AMFA,IDEI,ATZEvQ,ISYEwQ,CCFCoB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGrB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;AHEJ,AHAA,ACDA,EMFE,AVVA,IUUIiB,UAAJ,AVVY1R,EUUI,GVVhB,EAAmBC,IAAnB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,iBAA/B,EAAkD;AMcpD,AHAA,ACDA,IKDI,ACDA,AVXgD,ISY5CmQ,OAAJ,EAAa;AHGjB,AHAA,ACDA,EMFG,IDCG,OAAOG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AHGN,AHAA,ACDA,IKDK,ATbD,KAAKtQ,IAAL,GAAYA,IAAZ;AMgBJ,AHAA,ACDA,EKDG,ACDDyR,EVZE,KAAKxR,CAAL,EUYQ,CVZCA,CAAT,CUYWiN,UAAU,CAAC,YAAY;AJItC,AHAA,ACDA,IMFI,AVZA,IUYIyE,CVZCzR,CAAL,GUYS,AVZAA,CAAT,EUYY+J,QAAQ,CAAC2H,gBAAT,CAA0B,wBAA1B,CAAZ;AJIJ,AFDA,EKDE,ETbE,KSaK,ATbAxR,GSaP,GTbE,GAAc,EAAd;AMgBJ,AFDA,AKDC,ICFG,AVXA,KUWK,AVXAC,IUWIqB,CAAC,AVXV,GUWa,AVXA,CUWb,AVXA,EUWgBA,CAAC,GAAGiQ,KAAK,CAACnR,MAA1B,EAAkCkB,CAAC,EAAnC,EAAuC;AJK3C,AFDA,IJdI,EUWE,GVXGvB,CUWCyQ,MAAM,CAACH,SVXb,CUWM,CAAkBkB,CVXCxR,IUWI,CAACuB,CAAD,CAAL,CAASiO,IAA3B,KVXN,CUW2CiB,MAAM,CAACT,YAAP,EAAzC,EAAgE;AJKtE,AFDA,AKDA,ETbG,EAED,IUSMW,CDECL,SCFS,CDElB,ACFmBkB,CDECjB,GAApB,CCFwB,CDEC,ACFAhP,CAAD,CAAN,CAAV;AJKR,AFDA,EKDE,ICFK,GDEE,CAAC,KAAKgP,GAAN,EAAWhH,OAAX,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;AHGF,AFDA,AKDC,ICFI;AJKL,AFDA;AEEA,AFDA,AKDAiH,ICFIc,GDEG,CAACtB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AHGA,AFDA,AKDAS,ECFG,CATsB,EASpB,EDEE,ACXkB,CDWjBF,ACXN,GVJA,OSeF,GAAqBA,UAArB,GTfgBnQ,KAAd,EAAqB;AMkBvB,AFDA,AMHC,MVbG,IAAI,KAAKN,IAAL,KAAc,OAAlB,EAA2B;AMkB/B,AFDA,QJhBM,OAAO,IAAP;AMkBN,AFDA,AMHA6R,MAAM,AVbD,CUaElB,OAAP,GAAiBe,SAAjB;AJKA,AFDA;AEEA,AFDA,AI7BA,IPHM7P,AOGAiH,ERaF,IAAI,IQbQ,CRaH9I,EQbM,CACjB,CRYM,KAAc,GQbH,EAEjB,SAFiB,EAGjB,GRUM,IAAqCM,EQb1B,CAAnB,ERakD,AQPlD,CROmDN,IAAN,KAAe,YAAxD,EAAsE;AMkB1E,AFDA,EHhCE,MDgBI,OAAO,EChBCD,EDgBR,GChBJ,EAAmBC,IAAnB,EAAyB8B,IAAzB,EAA+BC,QAA/B,EAAyC;AKkC3C,AFDA,AIxBA,IPT2C,AOSvCkF,ERQC,CAPkB,CAQnB,cQTkB,GAAG,CACvB,SADuB,EAEvB,SAFuB,EAGvB,SAHuB,CAAzB;AF0BA,AFDA,AInBA,IAAI8B,ERIA,SQJW,GAAG,iBAAlB;AFqBA,AFDA,AInBA,IPfI,AOeAC,ERIA,GCnBKjJ,KAAL,COeW,EPfEA,COeC,IPfd,aOeJ;AFqBA,AFDA,AIlBA,IPhBI,AOgBAkJ,ERGA,GCnBKjJ,IAAL,GAAYA,EOgBE,EPhBd,COgBiB,CAACiH,kBAAD,CAArB;AFoBA,AFDA,AIlBA,IPhBI,AOgBAiC,ERGA,GCnBKlH,KAAL,GAAaF,COgBC,GPhBd,AOgBiB,CAACmF,kBAAD,CAArB;AFoBA,AFDA,AIjBA,IPjBI,AOiBAkC,KPjBKrH,IAAL,GAAYA,EOiBE,EPjBd,COiBiB,KAArB;AFmBA,AFDA,AGtCA,ACqBA,IPjBI,AOiBEsH,KPjBGnH,AMJAuE,WNIL,AOiBkB,GPjBC,AOiBE,GDrBzB,CNII,AMJuBC,CCqB3B,QDrBA,EAAsC;ADwCtC,AFDA,AIhBA,EDtBE,ENIE,AOkBA4C,ERDA,GCjBKtH,CDkBHzB,AOtBImG,KPsBC,AQAI,CRAHzG,CClBR,COkBc,CDtBhB,ACsBF,CPlBoB+B,ADkBd,KAAe,GClBjB,GDkBE,IACA,KAAK3B,MAAL,CAAYG,MAAZ,CAAmB;AMiBzB,AFDA,IHlCI,AMJA,IPsBqB,CClBhB2B,AMJA,GPsBmBlC,AOtBxB,INIA,ADkBqB,GClBN,IAAf,CDkBwBA,IAAH;AMkBzB,AFDA,AIhBA,IPlBI,EMJE,EPqBmB,CCjBhBmC,AOkBAmH,IDtBI,CAAC5C,ACsBd,CRDuC1G,ECjBnC,AOkBa,ERD0B,CCjBvB,IAAhB,ADiB4C,CCzBL,CAQjB,IDiBD,GOrBX,CAAS2G,MAAV,CAAP;ADwCN,AFDA,EIhBE5G,EPjBE,EDeqB,CAAnB,AQEC,ERFiDS,CQE9C,IAAIuG,CRFR,IAA4D,EAF9D,EAGE,KQCI,CAAUC,YAAV,EAAoBpH,iBAApB,CAAR;AFkBF,AFDA,EIhBEqJ,EDvBE,IPsBE,COtBG,GAAL,GPsBS,CQCG,GAAG,CRDb,AQCchC,kBAAD,CAAjB;AFkBF,AFDA,EIhBEiC,EPlBE,EDiBC,AOtBC,GNKG9G,IMLI,CAACsE,ECuBE,GAAG,CAACO,CPlBhB,GAAoB,CAApB,CAXuC,CAWhB,MMLb,CAASL,GAAV,CAAP,ACuBa,CAAjB;AFkBF,AFDA,EIhBEmC,WAAW,GAAG,iBAAd;AFkBF,AFDA,EIhBEC,EPnBE,AMLA,EPsBA,GCjBK3G,AMLA,CPuBH/B,EOvBF,CCwBS,ERDF,CAACN,AQCI,GPnBZ,CDkBE,EClBgB,CAAlB,CAZuC,CAYlB,ADkBJ,QQCnB,IRDI,IACA,KAAKI,MAAL,CAAYG,MAAZ,CAAmB;AMkBzB,AFDA,EIhBEgJ,IDxBI,EPuBmB,GQCd,CRDiBvJ,AQChB,CDxBC,CAAC0G,EPuBW,SAAG1G,CQCjB,EAAiBiJ,CRDH,IOvBX,CAASpC,IAAV,CAAP,GCwBK,CAAT;AFkBF,AFDA,EIhBE0C,EPpBE,IDkBqB,CClBhBjH,EOoBE,CAAC,GRF2BtC,IAAI,GClBvC,EDkB4C,CClBvB,COoBd,EAAiBkJ,CPpBxB,CAbuC,CAaZ,KDkBN,MQEd,CAAT;AFkBF,AFDA,EIhBEG,EPnBE,AMNA,EPsBqB,CAAnB,EAAwD7I,AOtBrD,GAAL,CCyBS,ERHP,CQGU,CAAd,ERHsE,EAFpE,EAGE;AMoBN,AFDA,EIhBE2I,EPnBE,EMNE,EPuBA,KOvBO,CAACzC,CPuBD,CQEG,GAAG,CRFb,IQEJ,SDzBY,CAASI,KAAV,CAAP;AD2CN,AFDA,AIhBC,MRFI;AMoBL,AFDA,IHpCI,AMNA,KNMKvE,AMNA,GAAL,CNMA,GAAY,IAAZ;AKsCJ,AFDA,AIhBA,IPpBI,EDiBA,AOvBE,GNMGC,AOoBAgH,CRFHlJ,GOxBO,CAACoG,CPwBH,CAAC1G,IAAN,CQEN,CAAsB+B,EPpBlB,CDkBiB,EClBM,GOoB3B,CRFM,CClBF,AOoB4B,CD1BlB,CAAS6E,CPyBjB,EOzBO,EAAeF,CPyBjBtG,MAAL,CAAYG,MAAZ,CAAmB,IOzBG,CAASoG,MAAxB,CAAP;AD4CN,AFDA,EIhBE,EPpBE,IDkBqB,CClBhBlE,AOoBAV,GRFmB/B,EClBxB,EDkBqB,CClBR,AOoBA,CACZyJ,ORHuBzJ,EClBxB,EDkBqB,AQEhB,GAEJ0J,OAFI,CAEI,eAFJ,EAEqB,UAACC,CAAD,EAAIvB,CAAJ,EAAOwB,CAAP;AFgB9B,AFDA,IHnCI,AMRA,AC4B0B,IRJL,CChBhBlH,AMRA,EC6BH0F,CD7BF,AC6BG,EPrBH,CDgBmCpI,AQK7BoI,CAAC,CPrBM,AOqBLyB,CPrBR,CDgBuC,KAAK,IQKtC,EAAH,GAAqB,GRLH,GQKSD,CAAC,CAACC,WAAF,EADJ;AFiB9B,AFDA,EIhB8B,CAFrB,CPjBL,AOiBF,ERFuB,AOvBnB,CPuBA,ECfGlH,ADeqDnC,IOvBjD,CAACkG,CPuBR,IAAkE,EAFpE,EAGE,CChBF,GAAuB,IAAvB,EMRU,CAASG,IAAV,EAAgBH,mBAAA,CAASI,KAAzB,CAAP;AD6CN,AFDA,AIdC,IPrBG,IDgBE,CChBGlE,MDgBI,KAAP,EChBF,GAAqB,IAArB;AKqCJ,AFDA,EHnCG,EMTC,EPyBC;AMqBL,AFDA,AIdA,IAAMhC,ED9BA,OAAO,CAAC8F,AC8BE,GAAG,EAAnB,cD9Bc,CAASE,GAAV,EAAeF,mBAAA,CAASC,MAAxB,EAAgCD,mBAAA,CAASG,IAAzC,EAA+CH,mBAAA,CAASI,KAAxD,CAAP;AD8CN,AFDA,AIbA,ED9CE,EC8CEgD,ERPA,IACExJ,GQMO,ERNF,CAACN,AQMI,EAAhB,ERNM,KAAe,YAAf,IACA,KAAKI,MAAL,CAAYG,MAAZ,CAAmB;AMoBzB,AFDA,AG5CC,AC+BD,IAAIwJ,IRNqB,IAAG/J,EQMd,ERNW,CQMR,GAAjB,KRN4BA,IAAH;AMqBzB,AFDA,AIbA,IAAIgK,IRPqB,EQOf,CPxBR,EOwBW,ERP0BhK,GQOvC,CRP2C,CQS3C,IRTgD,MAAvB,MCjBP;AKuClB,AFDA,IG5CM+G,ENOF,ADgBqB,CAAnB,EAAkDvG,IChB7C,EDgBL,GChBUR,CDgBkD,EAF9D,CCdO,CDiBL,ICjBmB,MAAd,GACH,KAAKD,KAAL,CAAW8C,cADR,GAEH,KAAK9C,KAAL,CAAW+C,oBAFf;AKuCJ,AFDA,AIZAmH,EDhCE,ENSC,IDeG,AQQE,CAACC,MRRI,EOxBClD,GPwBR,GQQN,CAAwB,CDhCtB,EAAsBpH,YAAtB,EAAoCqH,ACgCtC,EAA2CkD,OAA3C,GAAqD,MDhCnD,EAAwD,ICgCO;AFcjE,AFDA,EIZEb,EDjCwD,EPyBrD,CQQE;AFcP,AFDA,EIZEH,cAAc,GAAG,IAAjB;AFcF,AFDA,EIZEa,EDnCwD,EP0BtD,EQSI,GPxBN,AOwBS,ERTA,GQST,CRTE,eCfU;AKsCd,AFDA,AIZC,CAJD,EAOA,CRZG,ECfC,KAAKrH,eAAL,GAAuB,KAAKD,KAA5B;AKsCJ,AFDA,AITA,IDvCI,ENYA,GMZKuD,CNYLlD,IMZA,GAAa,EAAb,WNYA,EAAc,KAAKhB,QAAnB,EAA6B,KAAKY,eAAlC;AKsCJ,AFDA,AITA,IP3BG,AMZC,KAAKvC,MAAL,GAAc,EAAd;ADkDJ,AFDA,AIRA,IDvCI,KAAK8G,EPyBP,OOzBE,GAAiB,CAAjB,CAJsD,CAMtD,KPuBO5G,KAAT,EAAgB;AMwBlB,AFDA,MJtBI,KAAKF,MAAL,CAAYK,IAAZ,CAAiBH,KAAjB;AMwBJ,AFDA,IJtBG,AOxBC,IAAM6G,GNSR,CMTY,GAAGH,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqB7G,CNSnB,KMTF,CAA4B,UAAC8G,GAAD;ADgD7C,AFDA,AIVO,IAAM+C,EP3BT,AMVyC,KNUpCxH,EMV6CyE,GAAG,CAAC7G,MAAJ,CNUlD,CO2B8B,CDrCiC,CNU1C,AMVoB,CCqCR,GAA9B,CP3BuBkC,KAA1B;AKuCJ,AFDA,IGhD6C,CAA5B,CNWb,AMXA,INWAM,oBAAA,EAAc,KAAKjB,QAAnB,EAA6B,KAAKa,aAAlC;AKuCJ,AFDA,AIXA,IP1BG,AMXC,ACqCEyH,IDrCI/C,GPyBR,OQYkB,GDrCG,ACqCA,GDrCG1H,ACqC1B,QRZcU,IOzBwB,CPyBpC,AOzBqC8G,EPyBlB,GOzBK,CAAmB,IAAnB,EAAyB7G,MAAzB,CAAgC,UAAC8G,GAAD;ADkD1D,AFDA,AIXA,IAAIiD,ERZA,AO1BsD,KP0BjDlK,EO1B0DiH,GAAG,CP0BlE,AO1BmE7G,CCsCrD,ERZA,CQYG,CAArB,CDtCmE,EP0B5CJ,CO1ByD,CAAtB,IP0BxC,CAAYG,MAAZ,CAAmB,UAACG,CAAD;AMyBrC,AFDA,AIXA,IDvC0D,ACuCpD6J,CDvCoB,CAAtB,CARsD,CPkCrB,AOxBjC,KCqCW,ERb6B7J,CAAC,AQa3B,CAAlB,EAEA,ERfkDJ,KAAb;AM0BrC,AFDA,MJzBqC,CAAnB,CAAd,GCbF,gBAAO;AKwCT,AFDA,AIVA,IRfG,AOxBC,ENWA,EMXMiH,CCuCDiD,CP5BD,GMXO,ENWF1I,CMXK,GNWV,CAAUmB,CO4BlB,CAAsBwH,KP5Bd,EAAJ,EAAyB,EO4B7B,EAAmC;AFYnC,AFDA,EIVE,IDvCI,ENWA,CO4BGJ,GP3BD,KAAKrK,IAAL,EO2Be,GP3BD,AO2BI,CAACsK,KP3BnB,IACA,KAAKxI,AO0B4B,GAAGuI,CP1BpC,CAAUrK,IAAV,KAAmB,GO0BD,IAAoCwE,EP3BtD,EO2B0D,CAACkG,CPzB3D,EOyBsD,CAAS,CAAClG,CPzB3DvC,GOyB+D,CAAC0I,GAAL,CAAUF,GPzB1E,KAAqB,GOyBgE,CP5BvF,EAIE,AOwBwFL,qBAAf,GAAwC,CAAxC,GAA4C5F,IAAI,CAACoG,EAA1D,IAAgE,CAAjE,IAAsE,CAA/E,EAAkF,CAAlF,CAA5D;AFYF,AFDA,AIVC,EAED,IDzCMpD,CAAC,EAAE,CNeD,KAAKvF,CMjBK,UNiBV,GAAmB,KAAKH,IAAxB;AKoCR,AFDA,MGjDM2F,CAAC,EAAE,CNeD,CDQN,ICRWzH,AMlBK,INkBV,GAAY,QDQR,ICRJ;AKoCR,AFDA,MJ1BI,AOvBE0H,CAAC,EAAE,CNeD,GDQG,ECRE5F,GDQG9B,CCRR,CAAUkD,EDQP,KCRH,ADQiB,CO3BP,QP2BP,IAA2B,KAAK7C,KAAL,GAAaR,gBAA/C;AM4BJ,AFDA,AIVA,IRhBG,AQgBCgL,EDvCElD,CAAC,EAAE,CNeD,KAAKxE,AOwBE,GAAG,ED5CA,AC4ClB,IPxBQ;AKoCR,AFDA,MGjDMyE,CAAC,EAAE,CNeD,OAAO,IAAP,KMrBU;ADyDlB,AFDA,AIXA,MDtCMlH,CAAC,CNeA,CMfE,ACsCAoK,UD7CS,MC6ClB,GAA4B;AFa5B,AFDA,EIXED,IPvBG,AMfChD,CAAC,EAAE,EPsBP,EQgBW,GAAG,ED9CE,AC8ChB,YRhBU;AM6BZ,AFDA,MJ3BI,AOtBE,KPsBGxH,KAAL;AM6BJ,AFDA,EIZE,ERfC,ECRC,AMdEyH,CAAC,ACqCA,EDrCE,ECqCEpG,CAAC,CPvBD,EOuBI,CD/CG,AC+ChB,EPvBE,AOuBcA,CAAC,GAAG0I,qBAApB,EAA2C1I,CAAC,EAA5C,EAAgD;AFclD,AFDA,IHnCG,AOuBCmJ,EDrCE9C,CAAC,EAAE,MCqCM,CAACtH,IAAZ,CAAiB+J,YAAY,CAAC9I,CAAD,CAA7B;AFcJ,AFDA,EIZG,EDjDe,CAAd;AD+DJ,AFDA,AIZC,IDpCG,KAAKmB,EPoBP,YOpBE,GAAsB,IAAI6D,GPoBf,gBOpBe,CAASsB,EAAb,EAAtB;ADkDJ,AFDA,IGhDI,EPoBA,GOpBKlF,ENYP,ADQOzC,KAAL,aCRO,AMZP,GAA4B,IAAIqG,mBAAA,CAASsB,EAAb,EAA5B,CA1BsD,CA4BtD;ADgDJ,AFDA,AIbA8C,IRfG,AOlBC,ENUA,IACE,KAAK9K,COsBK,GPtBV,COwBN,IPxBoB,YAAd,IACA,KAAK8B,IAAL,CAAU9B,IAAV,KAAmB,SADnB,IAEA,KAAKiC,WAAL,KAAqB,IAHvB,EAIE;AKkCN,AFDA,QHhCM,KAAKH,IAAL,CAAUsB,UAAV;AKkCN,AFDA,AIZA,IDjE0D,IN6CpD,COoBG2H,IPpBE9I,SOoBX,CAAuBoH,CPpBjB,GAAmB,IAAnB,GOoBN,EAAoC,WDnCTlC,IAAI,CAACc,OAAL,EA9B+B;AD+E1D,AFDA,EIZEgC,EDlEwD,IN8CpD,EOoBI,CRjBR,AQiBSC,EPpBAlK,IAAL,GAAY,KDGXW,AQiBL,CPpBI,AOoBoB,ERjBxB,EAAUV,CAAV,EAAaC,CAAb,EAAgBU,UAAhB,EAA4B,QQiB5B,EAAwDoK,SAAxD,GAAoExG,IAAI,CAACM,KAAL,CAAW+F,WAAW,CAACxB,WAAW,GAAGe,qBAAf,CAAX,GAAmD,GAA9D,IAAqE,GAAzI;AFcF,AFDA,EIZE,IPpBG,ADEyB,AQkBtBa,MAAM,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf;AFcF,AFDA,EIZE,EPpBC,AMhDuD,ECoElDvJ,GAAG,GAAGsK,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAZ;AFcF,AFDA,EIZE,IRnBE,AOlDsD,ACqElDC,IRnBEtK,CQmBG,GAAGoK,IRnBE,EQmBI,CRnBDhL,AQmBEkL,CRnBD,GAAGvK,CQmBvB,SRnBE;AMiCJ,AFDA,EIZE,IRnBE,AQmBIwK,EDtEkD,EPmDhDtK,EQmBI,GAAGmK,GRnBC,GAAG/K,AQmBE,CRnBD,AQmBEkL,GRnBCxK,GQmBvB,ORnBE;AMiCJ,AFDA,EIZE,IRlBE,AQkBIyK,EDvEkD,EPqDlDtK,CCHN,CMpBcb,CA9B0C,CCuE1C,CRlBH,EQkBMiL,CRlBH,IQkBQ,GAAGf,ERlBvB,MCHWnK,CAAb,EAAgBC,CAAhB,EAAmBmD,OOqBnB,CPrBA,EAA6B;AKmC/B,AFDA,EIZE,IPtB6B,ADK3BtC,AQiBIuK,EDxEkD,GPuDjD,COzBUjE,EPyBP,COvD8C,ACwEzC,GAAG+D,CRjBHpK,KQiBS,GAAGuJ,IRjBjB,CAAkBxJ,IQiB5B,CRjBU,CAAR;AM+BJ,AFDA,EIZEJ,GAAG,CRhBDA,AQgBE4K,GRhBC,CAACtK,KQgBN,CAAc,CAAd,ERhBE,AQgBe,CAAjB,ERhBkBF,AQgBEoK,KRhBlB,AQgBF,EAA2BC,MAA3B;AFcF,AFDA,EIZEzK,GAAG,CPvBD,ADOAA,AQgBEM,ED3CA,CP2BC,CAACC,CCPCsB,CMpBG0F,GC2CV,GRhBE,AQgBc,CRhBDrH,KO3BO,ENoBpB,CDOA,AQgBF,EPvByB,ADOAC,ICPvB,IDOA,EAAiCF,OO3BN0G,GP2B3B,EAA6C1G,QO3BL,CAACV,CP2BzC,AO3BwC,CAApB,CPkBM,AOlBxB,CP6BF;AM4BJ,AFDA,EIZES,GAAG,CPvBD,AOuBEO,KPvBGgB,GOuBP,CAAa,CAAb,EPvBE,AOuBc,CAAhB,EPvBiB,AOuBEiJ,CPvBDlL,CAAD,EAAIC,CAAJ,AOuBjB,CPvBE,COuBwBkL,MAA1B;AFcF,AFDA,MHnCI,ADQAzK,EO7BE,CP6BC,CAACQ,CCRCoB,CMrBG4F,EP6BR,CCRA,EDQW,CCRC,CMrBG,GNqBf,AMrBkB,WP6BlB,QO7BsBd,GAAJ,EAAS1H,GAAT,CAAa,UAACyI,CAAD,EAAInI,CAAJ,EAAU;AD0D7C,AFDA,EIbE,IPrBE,ADOAU,CQcG,ERdA,CCPG2C,ADOFrC,AO7BA,CC2CGS,CAAC,ED3CEvB,CC2CC,CAAb,EAAgBuB,CRdd,AQce,CPrBC,EDOA,AQcE0I,CPrBC,KAAK7G,GDOxB,AO7B2B,CPgBD,CAc1B,CO9B8B2E,ONsBX,EAAnB,AOqBF,EAA2CxG,CD3CC,AC2CA,CD3CCzB,CAAD,AC2C5C,CD3CM,CC2C0C;AFelD,AFDA,IIbIU,EPrBA2C,COqBG,CAACrC,ED3CA,IAAMjB,ENsBA,CAACwD,AOqBX,CD3Cc,EC2CE,CD3CC+D,INsBjB,CACE,AMvBoB,CAACa,CAAD,CAAlB,AC2CJ,EPpBOtG,IAAL,CAAU7B,CADZ,EAEE,KAAK6B,IAAL,CAAU5B,CAFZ,EAGE,KAAKgC,OAAL,CAAa,CAAb,CAHF,EAIE,KAAKA,OAAL,CAAa,CAAb,CAJF,EAKE,UAACK,IAAD,EAAU;AK+BhB,AFDA,IIbI5B,ERdAA,CQcG,CPhBC,AOgBAO,CRdD,CAACE,AO7BA,EN2BImB,EM3BET,EN2BE,AOgBZ,CAAaJ,CD3CC,AC2CA,GPhBG,ADEjB,AO7BiB,AC2CA2J,GRdC,CCFd,AM3BiBvL,EN2BE,ADEvB,EQcA,EAA2BsL,MAAM,CD3ChB,CAAS,CC2CUP,ID3CnB,EAAe7K,IAAf,CC2C8B,CD3CTC,AC2CUyB,CD3C/B,AC2C8B,CAAX,CD3CKxB,CAAxB,CC2CoCoL,CD3CTnL,QC2C5C,EAAgEkL,OD3C/C,CAAb,AC2CJ,EAA0ER,WAAW,CAACnJ,CAAD,CAAX,GAAiB4J,SAA3F;AFeJ,AFDA,EIbG,IRdC,ICFM,ADEFjK,KCFM,ADED,CCFEkB,EDEC,ECFN,ADEN,GCFkBA,IAAZ;AK+BV,AFDA,QH7BS,CAFD,CMzBA,KN2BO,AM3BH,CAACM,cAAL,CAAoBwF,uBAApB,CAA4CpI,CAA5C,EAA+CC,CAA/C,EAAkDsG,iBAAiB,CAACrG,iBAAD,CAAnE;AD0DR,AFDA,EIdE,IRdE,AQcIqL,IPfE/H,ADCF,IQcQ,CRdHtD,ECDI,AOeGkJ,CPfF3F,GAAR,CAAY,MOeS,GAAG0G,CRd1B,KAA2B,GAA/B,EAAoC,UQctC,MPfQ;AK+BV,AFDA,EIdEzJ,GAAG,CAACM,EPfG,ADCHI,EO7BE,GP6BG,EO7BC,AC2CV,CRdY,AO7BDyB,EC2CK,CRdZ,QQcJ,SD3CM,CAA0BuF,uBAA1B,CAAkDpI,CAAlD,EAAqDC,CAArD,EAAwDsG,iBAAiB,CAACrG,iBAAD,CAAzE;AD2DR,AFDA,EIdEQ,GAAG,CRdA,AQcCO,CRhBF,MAEO,CQcT,CAAasK,ERdA,KAAKrL,CQcG,GAAGkL,QAAxB,EAAkCD,GRdrB,GQc2B,ERdA,CQcGP,ERdlC,EAAoC,OQcS,CAACW,QAAD,CAAX,GAAwBF,SAAjC,GAA6C,CAA/E,EAAkFD,QAAQ,GAAG,CAA7F,EAAgGR,WAAW,CAACW,QAAD,CAAX,GAAwBF,SAAxB,GAAoC,CAApI;AFgBF,AFDA,AIdC,QPhBO,ADEFjK,EO7BE,GN2BI,ADED,CCFEmB,EDEC,CO7BCV,EP6BT,EO7BE,QN2BA,GAAuB,KAAvB;AKgCR,AFDA,MJ5BK,CAFM,CO3BJ,CATe,CAAhB,GPsCK,IAAI,KAAK3B,iBAAL,KAA2B,GAA/B,EAAoC;AM8B/C,AFDA,AIfA4K,QPhBQ,ADGF1J,ICHMgC,CDGD,AQaE,CAACgG,ERbA,GAAR,CCHc,IAAI9G,COgBX,CAAb,EPhB4B,KAAK,IAAzB,EAA+B;AKiCvC,AFDA,AIdA,IAAIkJ,ERdC,CAFM,CO5BL,EN2BIpI,GDGC,AO9BD,CAAC4C,GP8BI,CCHG,CM3BZ,AC4Ca,CD5CFxF,EP8BGN,AQcE,ED5ChB,CAAgBgI,GC4CtB,EAEA,ED9CM,OP8BS,KAA2B,GAA/B,EAAoC;AM8B/C,AFDA,MGrG0D,ENsEjD,ADGH9G,KAAK,GAAG,GAAR;AM8BN,AFDA,AIbA4I,MPlBO,ADGF,CClBD,ADgBO,CQiBH,CAACC,IRfE,IAAI,KAAK/J,CQepB,CAAwB,eRfT,KAA2B,EQe1C,CRfW,CQeqCuL,CRfD,eQe/C,CAAiE,QAAjE,EAA2E,UAAUC,KAAV,EAAiB;AFe5F,AFDA,EIbEF,IPhBEnI,AM5CA,EP6CEjC,KAAK,GCDG,ADCA,CCDCsC,AOgBE,ERfX,CQecgI,KAAK,CPhBrB,AOgBsBC,MAAN,CAAaC,KAA/B,oBD5DyC;AD2E3C,AFDA,EIbE5B,EPhBC,EDCE,CAFM,CO5CgC,EC6DjC,CAACC,ERfA,IAAI,KAAK/J,GQelB,CAAwB,YAAxB,CRfa,CQeyB2L,IRfE,GAA/B,CQeT,CRf6C,EQeI,IAAjD;AFeF,AFDA,AIbC,CAHD,KD9CK,EPkCCzK,KAAK,GAAG,GAAR;AM8BN,AFDA,AIbA4I,ID7F0D,EP8ErD,EQeG,CAACC,cAAT,CAAwB,wBAAxB,EAAkDwB,gBAAlD,CAAmE,QAAnE,EAA6E,UAAUC,KAAV,EAAiB;AFe9F,AFDA,EIbEF,ID9FwD,KN6ExD,MOiBe,GAAGE,KAAK,CAACC,GPjBfhI,GOiBS,CAAaiI,IPjB/B,COiBA,CPjBmB;AKgCrB,AFDA,EIbE5B,ED/FwD,EN8EtD,ADEAtJ,GAAG,CCFCiD,ADEAtC,AQeE,CAAC4I,OPjBK,ADEZ,CCFarG,ADEAxC,KAAb,CQeF,CRfsBR,AQeE,MPjBlB,CAAuB,CDEC,GCFxB,ADE2B,CCF/B,AOiBF,CRfE,CCFkC,AOiBEiL,CRfDhL,OQerC,CRf6C,EQeI,CRfD,EAA9C,EA/B0B,AQ8C5B,CRdE;AM6BJ,AFDA,AIbC,CAHD,GAKA,EDlG0D,EN+EpD,KAAKf,KAAL,CAAW+D,SAAX,CAAqB,IAArB,EAA2BF,QAA3B;AKgCN,AFDA,IG9G0D,EPkFtDjD,ECFE,CDEC,CAACS,GCFGmB,IAAL,CAAUwB,GDEZ,ECFE,CDEgB,CAAlB,CAjC0B,CAmC1B;AM4BJ,AFDA,AIZAkG,MPlBK,EOkBG,CAACC,cAAT,CAAwB,gBAAxB,EAA0CwB,gBAA1C,CAA2D,QAA3D,EAAqE,UAAUC,KAAV,EAAiB;AFctF,AFDA,EIZErB,EPlBC,AMrCC,ENuCF,ADCE,GOxCKzH,CPwCD,KAAK7C,CQeG,GRfR,AQeW,CAAjB,GDvDE,CPwCkB,AOxCEsI,OAApB,CACE,CPuCF,EAA6B,EOvCtBrC,KAAL,CAAWtG,GAAX,CAAe,UAAC0H,GAAD;ADoErB,AFDA,EIZEyD,EPhBA,EMvCmB,EPwCfnK,GAAG,CAACM,COxCoBoG,GAAG,CAAC1H,CCuDhB,EDvDY,CPwCxB,AOxCgC,GPwChB,OOxCiBmC,EPwCjC,EOxCgC;ADqEtC,AFDA,AIZC,CAHD,GPbE,IDCInB,AOzCgC,GPyC7B,CAACO,GOzCsCY,IAAI,CPyC9C,AOzC+C9B,CPyClCa,GOzCmB,KPyCX,GAAG,CAAxB,EAA2BC,QAAQ,GAAGF,UAAX,GAAwB,CAAnD,EAAsDA,UAAU,GAAG,CAAnE,EAAsE,CAAtE;AM6BN,AFDA,AIZAqJ,IPhBE,EMzCoC,CAAR,CAAT,ACyDb,CAACC,cAAT,CAAwB,gBAAxB,EAA0CwB,gBAA1C,CAA2D,QAA3D,EAAqE,UAAUC,KAAV,EAAiB;AFctF,AFDA,EIZErB,EPhBA,AM1CmB,CAAf,CADF,EP4CE,IAAI,IQeM,CRfDjK,EQeI,GRfT,CQeR,GRfsBR,gBAAlB,EAAoC;AM6B1C,AFDA,EIZEiL,EPhBA,AMzCE,KAAKjI,CP0CDlC,GAAG,CAACM,IQeM,KRfV,AO1CJ,CAAoBsH,EP0CA,SAAhB,OO1CJ,CAAuC,CACrC,OADqC,EAErC,WAFqC,EAGrC,UAHqC,EAIrC,SAJqC,EAKrC,MALqC,CAAvC;ADuEJ,AFDA,AIZC,CAHD,GPbE,AMnCE,IPoCG,CAFD,AOlCG1F,MPoCI,QOpCT,CAAoB2F,WAApB,CAAgC,UAAhC,EAA4C,CAA5C;ADiEJ,AFDA,AIZAyB,IPfE,AMpCE,ICmDI,CDnDCpH,ACmDAqH,CRfDvJ,GAAG,CAACM,SAAJ,AOpCJ,ACmDJ,CDnDwBuH,ACmDA,ERfA,SAAhB,AOpCJ,CAAgC,ICmDpC,EAA0CkD,GDnDtC,EAA2C,CAA3C,UCmDJ,CAA2D,QAA3D,EAAqE,UAAUC,KAAV,EAAiB;AFctF,AFDA,EIZErB,EDlDE,IPmCG,COnCExH,OCkDO,GAAG,IAAjB,MDlDE,CAA0BwF,OAA1B,CACE,KAAKrC,KAAL,CAAWtG,GAAX,CAAe,UAAC0H,GAAD;AD+DrB,AFDA,EIZEyD,IDlDmB,OAASzD,GAAG,CAAC1H,CCkDhB,EDlDY,CAAQ,UAACmC,IAAD;ADgEtC,AFDA,AIZC,CAHD,GAOA,IRpBMnB,AOnCgC,GPmC7B,CAACO,GOnCsCY,IAAI,CPmC9C,AOnC+C9B,CPoC7Ca,GOpC8B,KPoCtB,GAAG,CADb,EAEEC,QAAQ,GAAGF,UAAX,GAAwB,CAF1B,EAGE,CAACA,UAAU,GAAG,CAAd,KAAoB,KAAKP,KAAL,GAAaR,gBAAjC,CAHF,EAIE,CAJF;AM8BN,AFDA,MJvBK,AOzCiC,CAAR,CAAT,GNkCnB,oBAAU;AKgCZ,AFDA,AITAoK,IDxDqB,CAAf,CNkCM,AMnCR,ECyDI,CAACC,cAAT,CAAwB,OAAxB,EAAiCwB,gBAAjC,CAAkD,OAAlD,EAA2D,YAAM;AFWjE,AFDA,EITEpC,EDvDE,EPyCA,CQcG,EDvDExG,CPyCD,KAAK9C,IAAL,KAAc,KOzClB,CAA0BuI,aPyC1B,EAAuC,GOzCvC,CAA6C,CAC3C,iBAD2C,EAE3C,UAF2C,EAG3C,SAH2C,EAI3C,mBAJ2C,CAA7C;ADkEJ,AFDA,AITC,CAFD,GDhDI,ACoDJ,EPzBI,EDSE5H,COpCGmC,EPoCA,CAAC7B,ECTE,KAAKwB,EDSX,GCTF,ADSkB,KOpClB,CAA0B+F,GPoCxB,QOpCF,CAAsC,UAAtC,EAAkD,CAAlD;AD6DJ,AFDA,IG3DI,IN2BE,ADSA7H,COpCGmC,EPoCA,CAAC3B,CCTC,GDSL,GAAW,ICTX,MM3BF,CAA0BqH,KPoCxB,MOpCF,CAAsC,SAAtC,EAAiD,CAAjD;AD6DJ,AFDA,AIRA,EDnDG,ECmDGuD,IRfApL,ECTE,CDSC,CAACW,ECTI0C,MDSR,CACE,CQcgB,GPxBC,AOwBEiG,CRdd,ECVe,GDUV7J,ECVeL,AOwBE,CAACmK,GRdvB,CCVe,ADUH3J,CCVc0D,KDU1B,CAAmB,GQcL,CAAwB,SPxBvB,CAA+B,SAA/B,CAApB,COwBmB,CAA3B;AFUA,AFDA,AIRA6E,UPxBQ,ADSwB,AQetB,CAACrH,GRfwBzB,CCTtBkE,GDSmB,AQehC,CAAmB,QPxBX,ADS2BlE,CCTTgE,COwBNjC,ERfY,MQeb,EPxBkB,AOwBJ,CPxBK9B,CAA9B,EAAiC+D,WAAW,CAAC9D,CAA7C,EAAgD,YAAM;AKkC9D,AFDA,EIRE,IAAM8L,IRhBwB,ECRtB,GOwBO,ERhB6BhM,CCRhC,AOwBMiK,CPxBLxH,EDQmC,GCRxC,EDQ6C,AQgB3B,CPxBL,AOwBMwJ,WRhBG,EQgBZ,CAAuB,KAAvB,CAAlB,QPxBQ;AKkCV,AFDA,EIRED,MRjB8B,CAAnB,CCPJ,CAFD,ADS6DxL,AQiB1D,CAAC0L,KRlBN,EAEErL,EQgBN,CAAoBsL,GAApB,CAAwB,CRhBV,GAAG,CAFb,EAGErL,KQeN,GRfc,GAAG,EAHb;AM4BN,AFDA,EIRE,IRdG,AQcGsL,CRtBJ,GCFI,CM7BN,EPuCS,CQcK,GAAGnC,QAAQ,CAACgC,aAAT,CAAuB,CDrDnBhM,CAArB,EAAwBC,CAAxB,EAA2B,ACqDV,CAAjB;AFUF,AFDA,EIREkM,IDrDE,EPuCE,EQcI,CAACF,CRdC3K,COvCD,KAAK0E,ECqDd,CAAmBkG,CRdC,COvCX,CAAWjM,ACqDpB,CRduB,AOvCd,ACqDc,EDrDAD,CAAd,CAAP,CPuC0BG,MAAL,CAAYG,MAAZ,AQcvB,CRd0C;AMwB5C,AFDA,EIRE6L,EDrDC,IN4BG,EDUsC,AQelC,CAACpM,EPzBA,CDUoCA,CQe7C,GRf0C,AQe1B,SRf6BA,CQe7C,GRf0C,UCVtC;AKmCN,AFDA,EIREoM,QPzBM,ADSoC,AQgBlC,CAACC,EAAT,CPxBQ,EOwBMtK,CRhB0C/B,ECR3CwC,EDQ+C,GQgB5D,CAN+B,CRVkC,AQiBjE,MRjB0C,ECRlC,IAAwB,KAAxB,IACA,KAAKD,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAU/B,MAAV,GAAmB,CAHrB,EAIE;AK+BV,AFDA,QJzB4C,CAAnB,CAAnB,ECJI,IAAMoD,QAAQ,GAAG,KAAK7D,KAAL,CAAWoE,oBAAX,CACf,KAAK5B,IAAL,CAAU,CAAV,EAAatC,CADE,EAEf,KAAKsC,IAAL,CAAU,CAAV,EAAarC,CAFE,CAAjB;AK+BV,AFDA,EIREkM,MRjBI,EQiBI,CDtDR,ACsDSE,CPlBD,ADCE9K,KCDG4C,COkBb,GAAmB6C,IPlBX,CAAcrD,EDCI,GAAG,GCDrB,EDC0BxD,GQiBG,CDtDjBJ,ACsDkBoG,ERjBT,CAAY7F,COrCzC,EAA0B,ECsDP,CRjBU,AQiBkBwB,CRhBzC,OQgBa,CAAnB;AFUF,AFDA,EIREqK,IDtDE,INoCK,ADCD,AOrCE3D,ACsDA,CP5BF,AO4BGiD,GRjBA1L,COrCI,ENoCA,CDCP,AOrCU,KAAKiG,IPqCZjG,AQiBT,CDtDgB,ACsDU,CDtDC0I,EPqCrB,EOrCU,GAAkBnI,ACsDlC,EAAoC,IDtDpB,CAAyB,OCsDC,GDtDAuB,IAAD;ADgE3C,AFDA,IIRI,IDvDuC,ACuDnCsK,ERlBA,ECAE,GMrC2CtK,CCuDrC,CPlBDW,ADAOzC,AQkBLsM,EDvDwC,CAACtM,CPqChC,CCAhB,EMrC2C,ACuDjD,CPlBmB,CDAQ,AQkBL,GDvDyCA,IAAxB,CNqCjC,IDAF;AM4BR,AFDA,MGhE2C,ACwDrCiH,CDxDY,CPqCV,AOrCJ,CPoC2B,CCEtB,ADFH,cQoBkB,CAACxG,IAAnB,CAAwBsB,QAAxB;AFUN,AFDA,IIRK,CAFD,CDtDA,KCwDO,EDxDA0G,KAAK,CAACjE,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,KAAgBgE,KAAK,CAACjI,MAAjC,CAAD,CAAZ;ADkEJ,AFDA,IGhEG,ECwDGyG,ERnBA,ECAE,EDAE1F,UAAU,CAACf,CQmBG,GAAGyG,ERnBjB,GAAoB,CAAxB,EAA2B,UQmBY,CAAC1G,MAAnB,CAA0B,UAACoJ,CAAD;AFUrD,AFDA,QITqD,ERlB7CpI,KQkBoDoI,CAAC,IRlB3C,CAAClI,AQkB+CM,ORlB1D,CAAmB,AQkB0B,URlBzBzB,KAAD,EAAQoB,CAAR,EAAc;AM6BzC,AFDA,MIVqD,CAA1B,CPlBrB,AOkBA,IRjBI,CCDC,IDCG,CAACC,ICDT,IDCI,CAAchB,GAAd,EAAmBV,CAAC,GAAGW,UAAJ,GAAiBc,CAAC,GAAG,EAAxC,EAA4CxB,CAAC,GAAGU,UAAhD;AM6BV,AFDA,IIVK,MPlBG,ADCC,CAFD,AOpCN,GNqCU,KAAKyD,IAAL,EAAJ,EAAiB,UMrCN;ADmEnB,AFDA,MGjEI,MNqCM,CMrCC,INqCI5B,CMrCCwD,INqCN,CMrCC,CAAWyC,CNqCC,GMrCZ,GAAkBnI,MAAlB,CAAyB,INqC1B,MMrC2BuB,IAAD;ADmEpC,AFDA,IIXIwH,IDvDgC,CCuD3B,CPjBA,ADAD,CCFA,GDEI9H,COtCkCM,ENsC/B,EMtCmC,CAAC9B,IAAL,KAAc,CPsChC,CAACQ,MAAjB,COtCwB,EPsCE,CAA9B,EAAiC;AM8BzC,AFDA,EIXG,CAPD,GDjDkC,CAAzB,CAAP,INuCM,ADAAgB,gBAAgB,CAACC,OAAjB,CAAyB,UAACnB,KAAD,EAAQoB,CAAR,EAAc;AM8BjD,AFDA,EIXE,EDxDC,EAGD,ACqDMiE,KAAK,CPjBH,EDAE,AQiBIsE,GPjBDxH,EDAC,CAACb,ECAP,AOiBc,CAACqK,EPjBF,SDAX,CCAF,ADCItL,CQgBE,CAAuB,CRjB3B,EAEEV,CAAC,GAAGW,AQeF,CAAd,SRfY,GAAiB,EAFnB,EAGEV,CAAC,GAAGU,UAAJ,GAAiBc,CAAC,GAAG,EAHvB;AM8BZ,AFDA,EIXEiE,EDrDA,GCqDK,CAAC4G,EPjBC,EDIE,CAND,EQmBR,GAAgBxK,QAAhB;AFaF,AFDA,EIXE4D,EDrDA,GCqDK,CAACuG,ERbC,OQaP,CAAgBC,GAAhB,CAAoB,kBAApB;AFaF,AFDA,EIXExG,EDrDA,GCqDK,CRbA,AQaC6G,CR1BF,CCQE,KDKK,IAAIhL,AQaf,CAAkByI,QAAQ,CAACwC,MRbI,CAACjM,MAAjB,CQaG,CAAwBgJ,CRbD,CAA9B,EAAiC,QQaU,CAACzH,QAAD,CAApC,CAAlB;AFaF,AFDA,EIXEgK,EDpDA,MPuCMvK,UQaY,CAACgL,KRbG,CAAC/K,KQavB,CAA+BuK,CRbzB,CAAyB,OQa/B,GRbgC1L,KAAD,EAAQoB,CAAR,EAAc;AM0B/C,AFDA,EIXEsK,EDpDA,INiCI,GOmBK,CRbD,AQaEQ,CPnBD,GDMG9K,CAAC,GAAG,CAAR,EAAW,AQanB,CAAsB0K,MPnBlB,EOmBJ;AFaF,AFDA,EIXEJ,EDpDA,MNiCM,COmBG,CAACQ,EPnBElI,ADMF,KAAI,CAAC1C,GQaf,CAAsB+D,EPnBE,GAChB,AOkBR,KPlBa5F,ADKH,CAAoBY,GAApB,CCLF,CAAWsD,ADKgBhE,CAAC,GAAGW,UAAJ,GAAiBc,CAAC,CCL7C,CAA+B,CDKiB,EAA9C,EAAkDxB,CAAC,GAAGU,UCLxD,ADKE,CCNJ;AKgCR,AFDA,AIXC,CAxBD,GD5BE,ACsDF,MPpBQ,EDKG,CAFD,ECHGsD,IDKI,QCLT,CAAkBI,YAAY,CAACrE,CAA/B,EAAkCqE,YAAY,CAACpE,CAA/C,EAAkD,YAAM;AK+BhE,AFDA,IG/DE,QNkCQ,EDKE,ICLE,CAACuC,ADKC,CAACb,ICLP,GAAa,ODKX,CAAoBjB,GAApB,EAAyBV,CAAC,ECL5B,CDK+BW,UAAJ,GAAiB,CAA1C,EAA6CV,CAAC,GAAGU,UAAJ,GAAiB,EAA9D;AM0BZ,AFDA,AIVAqJ,IDrDE,ICqDM,CAACC,CPnBA,CAFD,CDOG,WQcX,CAAwB,YAAxB,EAAsCwB,gBAAtC,CAAuD,OAAvD,EAAgE,YAAM;AFYtE,AFDA,EIVE,EDrDA,ECqDIzB,IPnBE,ADKC,CAND,GQoBM,CAACC,cAAT,CAAwB,YAAxB,EAAsCc,SAAtC,KAAoD,MAAxD,EAAgE;AFYlE,AFDA,IG/DE,ACqDEf,IRdG,IQcK,CAACC,cAAT,CAAwB,YAAxB,EAAsCc,SAAtC,GAAkD,OAAlD;AFYJ,AFDA,IG/DE,ACqDEhB,ERdC,CAxFyB,CCkFxB,ADQF,EQYM,GPpBC,AOoBE,KAAT,WPpBE;AKgCN,AFDA,EIVG,CAHD,CDlDA,EPyCE,GQYK,CPpBD,IACE,KAAKxH,eAAL,IAAwB,KAAxB,IACA,KAAKD,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAU/B,MAAV,GAAmB,CAHrB,EAIE;AK4BV,AFDA,IG/DE,ACqDEyJ,ERZA,MCJM,AOgBE,CAACC,GPhBGtG,SAAQ,EOgBpB,CPhBuB,AOgBC,KPhBI7D,KAAL,CAAWoE,COgBlC,EAAsC6G,SAAtC,GAAkD,KPhB3B,CACf,AOeR,KPfazI,IAAL,CAAU,CAAV,EAAatC,CADE,EAEf,KAAKsC,IAAL,CAAU,CAAV,EAAarC,CAFE,CAAjB;AK4BV,AFDA,IG/DE,ACqDE8J,ERZA,IQYM,GAAG,IAAT;AFYJ,AFDA,EIVG,EDrDD,EPyCE,MCFM,KAAK5F,QAAL,CAAcR,SAAd;AK0BV,AFDA,AIVC,CARD,GD7CE,ACuDF,ERdI,ICFK,CAVD,MAUO;AK0Bf,AFDA,IG/DE,EPyCE,MCFM,KAAKnB,KAAL,GAAa,SAAb;AK0BV,AFDA,AITAwH,IDrDE,EPwCE,EQaI,CAACC,GPfC,KAAK3F,MOef,CAAwB,OPfd,IOeV,EAAqCmH,gBAArC,CAAsD,OAAtD,EAA+D,UAACgB,CAAD,EAAO;AFWtE,AFDA,EITE5C,IRbE,ICFK,COeE,GAAG4C,CAAC,CAACd,MAAF,CAASC,KAArB;AFWF,AFDA,AITC,CAFD,KRXI;AMwBJ,AFDA,AIRA5B,MRdI,EQcI,CAACC,CPjBD,aOiBR,CAAwB,YAAxB,EAAsCwB,gBAAtC,CAAuD,OAAvD,EAAgE,UAACgB,CAAD,EAAO;AFUvE,AFDA,EIRE3C,IRdE,KO3CF,CCyDU,GAAG2C,CAAC,CAACd,MAAF,CAASC,KAAtB,EDzDW9J,QAAX,EAAqB;ADmEvB,AFDA,EIREkI,IRdE,AO3CA,ENuCE,EOkBI,CAACC,EPlBA,SAAL,GOkBJ,CAAwB,2BAAxB,EAAqDc,SAArD,GAAiExG,IAAI,CAACmI,KAAL,CAAW5C,UAAU,GAAG,GAAxB,IAA+B,GAAhG;AFUF,AFDA,AIRC,CAHD,GAKA,ERhBI,AO3CA,INuCI,AMvCE/H,INuCEwC,CMvCG,GNuCC,AMvCE,CNuCDC,IMvCMR,ENuCX,KAAgB,KAAK9B,OMvCf,CNuCV,AMvCmC,ENuCA,KMvCzB,CAAd;ADmEJ,AFDA,AINA,MRhBI,AO3CA,IAAM7B,ENuCA,GMvCK,ENuCAmC,CMvCG,INuCR,AMvCYZ,GNuCC,WMvCL,CAAU,ENuClB,EMvCQ,EAAgB,MAAhB,EAAwBG,KAAxB,EAA+BD,QAA/B,CAAd;ADmEJ,AFDA,AINA,MRhBI,ICJK;AK4BT,AFDA,MJtBI,AO3CA,IAAIC,KAAK,CAAC6B,aAAN,CAAoBvD,KAApB,CAAJ,EAAgC;ADmEpC,AFDA,AINA,IAAIP,ERhBA,EO3CE,CC2DG,CPrBD,EOqBI,IAAIgH,cAAJ,CAAUC,YAAV,EAAoBpH,iBAApB,CAAZ,EAEA;AFMA,AFDA,AIJA,MRlBI,EO3CEoC,KAAK,CAAC2G,QAAN,CAAerI,KAAf;ADmEN,AFDA,AIJA,MRlBI,ECNE,AMrCA,KNqCK,AMrCAF,MAAL,CAAYK,IAAZ,CAAiBH,ENqCjB,GMrCA;ADmEN,AFDA,AIJA,MRlBI,AO3CC,INqCG,KAAK4D,YAAL,CAAkB,KAAKjC,WAAL,CAAiBhC,CAAnC,EAAsC,KAAKgC,WAAL,CAAiB/B,CAAvD,EAA0D,YAAM;AK8BxE,AFDA,IGjEG,EP2CC,AOzCF,MNmCQ,MAAI,CAACuC,KAAL,GAAa,2BAAb;AK8BV,AFDA,AIJA,MRlBI,GQkBKmK,CPxBA,CAFD,MO0BR,GAAoB;AFMpB,AFDA,EIJE,IRlBE,AQkBE,CAAC5C,GPxBC,GOwBN,EAAa;AFMf,AFDA,IIJI,ERlBA;AMwBJ,AFDA,IIJI,ERlBA,ECPE,AOyBE6C,GD9DN,CC8DU,CPzBD,EOyBI9C,UAAX,OD9DUzJ,KAAZ,EAAmB,CNqCf;AK+BN,AFDA,MJtBI,AO5CA,INqCI,CMrCCF,GNsCC,GMtCN,ENsCWoC,CMtCG,KAAKpC,MAAL,CAAYG,ENsCpB,IAAwB,AMtChB,CAAmB,INsC3B,IACA,EMvC4BG,CAAD,ENuCtB6B,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAU/B,MAAV,GAAmB,CAHrB,EAIE;AK2BV,AFDA,IILI,ERjBA,EO7CiC,AC8D7BiL,IPpBE,GM1CkC/K,CN0C5BkD,AM1C6B,KAAKtD,EC8D3B,GPpBC,AM1Ca,EC8DT,CPpBD,KAAKP,AOoB5B,EAAgC,GPpBT,CAAWoE,oBAAX,CACf,KAAK5B,IAAL,CAAU,CAAV,EAAatC,CADE,EAEf,KAAKsC,IAAL,CAAU,CAAV,EAAarC,CAFE,CAAjB;AK2BV,AFDA,MJrBI,AO/CiC,AC+D/B2M,CD/DY,CAAd,EC+DM,GAAGhC,WAAW,CAACxB,WAAW,GAAGe,qBAAf,CAAlB;AFON,AFDA,IILK,ERhBD,AO/CA9J,KAAK,CN6CC,AM7CAwB,IAAN,CN6CWsC,AM7CAO,QN6CL,CAAcf,EM7CpB,CAAuBtD,KAAvB,EN6CM;AKyBV,AFDA,IGpEG,EP+CC,AO7CF,IN2CO,CAVD,MAUO;AKyBf,AFDA,IINI,ERfA,EQeIkE,IPjBE,AOiBE,CAACC,IPjBEhC,EOiBP,GPjBE,EOiBcoK,CPjBD,GOiBnB,EAA0B,MPjBpB;AKyBV,AFDA,MJrBI,AQeE,IPjBG;AKyBT,AFDA,MJrBI,AQeE,IAAI5F,kBAAkB,CAACzG,MAAnB,GAA4B,CAAhC,EAAmC;AFQzC,AFDA,MJrBI,EQeI,EPlBA,CM7CN,CC+DYuB,QAAQ,GACZkF,ODhEE3G,KAAV,EAAiBwB,IAAjB,ACgE0B,CAClB0C,CDjEe,GCiEX,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,KAAgBwC,kBAAkB,CAACzG,MAA9C,CADkB,CADpB;AFQR,AFDA,MJrBI,AOhDA,ECkEIT,EDlEA+B,GCkEK,CDlED,ACkEEgL,CDlEDjJ,SCkEL,CAAiB9B,GDlEjB,CAAmBzB,ICkEnB,CDlEA,CAAJ,EAA+B;ADuEnC,AFDA,MJrBI,AQkBG,EPtBD,AM5CAA,KN4CK,AM5CA,CAACwB,IAAN,CAAW6C,KN4CX,MM5CA,CAAuBrE,KAAvB;ADuEN,AFDA,IIHK,CAfU,CAiBX,EDpEEwB,EN4CE,EM5CE,CAAC6G,EN4CEjE,MAAL,AM5CF,CAAcpE,KAAd;ADuEN,AFDA,IJtBG,EAED,EOjDIA,EN4CE,GM5CG,CAACwB,CN4CCW,GM5CP,EN4CE,CM5CWX,EN4CE,EM5Cf,ON4CE;AK2BR,AFDA,MGrEK,IN4CG;AK2BR,AFDA,IGrEG,ACkEC/B,KAAK,CAACgN,IAAN;AFKJ,AFDA,IIHI1D,IPvBE,KAAK,EOuBI,OPvBT;AK4BN,AFDA,IIHI0B,MPvBI,CDIN,ICJW7G,EOuBI,CAACmF,SPvBV,CAAkB,COuBT,CAAb,GPvB2BrH,ADIhBjB,KCJW,ADIxB,CCJmCd,CAA7B,ADIc,ECJkB,KAAK+B,KAAL,CAAW9B,CAA3C,EAA8C,YAAM;AK4B5D,AFDA,MJtBI,KOhDF,CN4CQ,EDIE,ICJE,CAACuC,ADIEzC,IAAb,CCJM,GAAa,AM5Cd,gBN4CC;AK4BV,AFDA,IIJI,EDlEA,EPgDE,AQkBEmJ,EPtBC,CAFD,AM1CCjC,EPgDE,OAAL,AOhDF,ECkEA,EAAoB;AFMxB,AFDA,MGtEI,ACkEE+C,IPtBE,ADIAlJ,COhDCX,GCkEK,CRlBD,AQkBE8J,EDlEX,CPgDY,AOhDAtB,IAAZ,CAAiB,IPgDb,EQkBF,CAAwB,KDlEG,gBCkE3B,EAA+CoE,KAA/C,CAAqD7B,KAArD,GAA8D9B,WAAW,GAAGD,gBAAf,GAAmC,GAAnC,GAAyC,GAAtG;AFMN,AFDA,IIJK,IDlEC,EPgDE,KOhDK,MAAM5E,IAAI,CAACC,MAAL,EAAb;ADwEN,AFDA,MGtEK,CAFD,CN6CE,KAAK,gBAAL;AK6BN,AFDA,IILI,IRlBE,AQkBE0E,EPtBA,GDIG,CCHD,KAAK3G,GOqBO,ERlBhB,EQkBoB6G,QPrBhB,GOqB2B,CPrBH,EOqBMD,GPrB9B,IACA,KAAK7G,IAAL,AOoBN,EAAsD,GPpBlC,IADd,IAEA,KAAKA,IAAL,CAAU/B,MAAV,GAAmB,CAHrB,EAIE;AKyBV,AFDA,MG5ES,ACuEHyM,IRlBElM,ECAE,GDAG,CCAG6C,EDAA,IQkBM,IPlBE,CDAhB,ECAmB,KAAK7D,KAAL,CAAWoE,UMhDd,KAAK/D,KNgDF,CACf,AMtDH,KNsDQmC,IAAL,CAAU,CAAV,EAAatC,CADE,EAEf,KAAKsC,IAAL,CAAU,CAAV,EAAarC,CAFE,CAAjB;AKyBV,AFDA,MG7ES,ACwEH+J,IRlBE,IQkBM,CAACC,cAAT,CAAwB,qBAAxB,EAA+C8C,KAA/C,CAAqD7B,KAArD,GAA6D,IAA7D;AFON,AFDA,MILMhC,MPhBI,KAAK/E,GOgBK,GAAG,EPhBb,CAAcR,EOgBlB,QPhBI;AKuBV,AFDA,IILK,ED1EI,EPuDH,ECGG,CAVD,EDOG,ICGI,aDHT;AM0BN,AFDA,EILG,MDtEC,EPmDI7C,ECGE,GDHG,ECGE0B,CDHC,ICGN,GAAa,EDHf,MCGE,8BMtD2B;AD6ErC,AFDA,UHrBS,ADHD,AOpD6B,IAAtBnC,KAAsB;AD8ErC,AFDA,EINE4M,UAAU,CAACN,QAAD,EAAW9C,SAAX,CAAV;AFQF,AFDA,AINC,QRnBK,ECGE,AMvDF,GPoDK,COpDFxJ,KAAK,CAACN,GPoDT,COpDG,KAAe,MAAlB,EAA0B;AD+EhC,AFDA,UJzBQe,EOpDAT,GPoDK,EOpDA,CPoDG,AOpDFuI,GAAN,MPoDA;AM2BR,AFDA,AINA+D,QPjBM,AOiBE,ERnBA,AOpDD,CAFD,CC2EN,CPnBW,IMtDE,INsDP,AMtDUtM,KAAK,CAACN,IAAN,KAAe,YAAf,IAA+B,KAAKkH,SAAL,GAAiB,CAAjB,KAAuB,CAAzD,EAA4D;AD+EzE,AFDA,AIJA,UPnBQ,EMtDA5G,GNsDKP,EMtDA,CAAC8I,ENsDN,CAAWlE,AMtDX,WNsDA,CAAuB,IAAvB;AKyBR,AFDA,AIJA,QRtBM,ECGE,AMtDD,GPmDI,SAAL;AM4BN,AFDA,QG7EK,EPmDG5D,KAAK,GAAG,SAAR;AM4BR,AFDA,AIJA,IAAMoM,EDrFG,ENiEH,EDFE,GQsBO,GAAGpN,KAAK,CAACkG,KAAN,CAAY,CAAZ,EAAezF,MAAjC;AFMA,AFDA,AIJA,IAAM4M,IDtFG,ENkED3J,IOoBQ,GPpBD,AOoBI1D,CPpBH2D,GAAR,CAAY,AOoBI,CAACuC,KAAN,CAAYzF,MAA/B,IPpBQ,EAA+B,KAAKiC,KAApC;AK0BR,AFDA,AIHA,IAAM4K,EDxFG,EPgEH,ECGE,GDHG,EQwBM,GAAGF,ERxBd,OQwBuB,GAAGvM,UAAhC;AFKA,AFDA,AIHA,IAAM0M,EPjIF,EMwCK,EPiEDvM,KAAK,CQwBK,ERxBF,CQwBKqM,QRxBb,EQwBuB,GAAGxM,UAAlC;AFKA,AFDA,AIFA,IPtBG,AOsBCwH,CAAC,CPpBH,AMvEO,EC2FD6B,ERzBA,MQyBQ,CAACC,cAAT,CAAwB,QAAxB,CAAR;AFIA,AFDA,AIFA,IPpBE,AM5DC,ACgFCvJ,GAAG,GAAGyH,CAAC,CAAC8C,UAAF,CAAa,IAAb,CAAV;AFIA,AFDA,AIFAvK,GAAG,CPpBD,AOoBEsK,IR1BE,EQ0BN,CAAWE,ER1BA,GQ0BX,GAAmBkC,IR1Bb,OQ0BN;AFIA,AFDA,AIFA1M,GAAG,CAACsK,MR1BIlK,AQ0BR,CAAWqK,IR1BE,EQ0Bb,CR1BgB,EQ0BIkC,OR1BZ,KQ0BR;AFIA,AFDA,UJ5BQ;AM8BR,AFDA,AIFA,SAASC,UAAT,GAAsB;AFItB,AFDA,EIHsB,MR1BhB,GCIJ,EDJS,mBAAL,OCIe3I,GAAnB,EAAwBC,COuBD9E,EPvBvB,EAA6B,COuBD,CAACkG,KAAN,CAAYgC,OAAZ,EADH;AFKtB,AFDA,EIJsB,IPrBlB,IDJIlH,GCIGyD,EDJE,AOxDEuC,EN4DA,CAACjC,ADJA,KCIL,CAAWN,GDJd,CCIkB,CAACC,MAAL,MAAiBI,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AK2BJ,AFDA,IHzBG,EAED,IDNM;AM+BR,AFDA,EINsB;AFQtB,AFDA,IINE,IRxBI,KAAK,MAAL,qCQwB0C;AFQhD,AFDA,MIPgD,IRvBxC7D,KAAK,GAAG,SAAR;AMgCR,AFDA,MIRgD,IRtBxC,AQsBMb,CPlBZ,AOkB8C,iBPlBtC6E,QAAR,EAAkB;AK4BpB,AFDA,MH1BI,ADhCA,AQiD4C,IPjBxCC,AOiBSqC,GAA+B,QPjB7B,GAAG,IAAIpC,KAAJ,CAAU,CAAV,CAAlB;AK4BJ,AFDA;AEEA,AFDA,MH1BI,ADLA,AQoB4C,IPfxCF,GDLGhE,KCKK,ADLZ,ICKgB,OAAhB,EAAyB,mBOgBDsG,GAAG,CAACY,OAAJ,EADoB;AFahD,AFDA,IJ/BG,EQmB6C,EPd1CjD,WAAW,CAAC,CAAD,CAAX,GAAiB,EAAjB;AK4BN,AFDA,QH1BMA,WAAW,CAAC,CAAD,CAAX,GAAiB,KAAKE,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B,CAAjB;AK4BN,AFDA,MH1BK,AOY2C;AFgBhD,AFDA,QIdI,GRlBF,kBAASvE,GAAT,EAAcV,CAAd,EAAiBC,CAAjB,EAAoB,uBQkBqB;AFgB3C,AFDA,MH1BI,ADNAS,GAAG,CCMCoE,ADNA9D,AQiBmC,QPX3B,CDNZ,GCMgB,ADNA,MCMhB,EAAwB,CDNxB;AMkCJ,AFDA,MJhCIN,ECMEqE,CDNC,CAAC9D,AQgBmC,IAA3BjB,CAA2B,GRhBvC,CCMa,ADNAA,CCMC,ADNA,CCMD,CAAX,CDNe,CAAjB,CCMmB,CDNCC,CAAC,GCMGgF,ADNA,CAAxB,EAA2B,CAA3B,EAA8B,EAA9B,UCMmB,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AK4BN,AFDA,IJhCG,ICMGF,EOSqC,IAAxBlD,IAAwB,CPT1B,CAAC,CAAD,CAAX,GAAiB,KAAKoD,kBAAL,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AK4BN,AFDA,MH1BK;AK4BL,AFDA,UIlBMpD,IAAI,CAAC0L,IAAL,CAAU7M,GAAV,EAAeV,CAAf,EAAkBC,CAAlB,EAAqBU,UAArB;AFoBN,AFDA,MH3BI,EOSC,EPTGmE,CDNN,OCMc,IAAI,KAAhB,EAAuB,MDNVpE,GAAf,EAAoBV,CAApB,EAAuBC,CAAvB,EAA0B;AMmC5B,AFDA,MJjCIS,AQW4C,EPL1CqE,CDNC,CAAC/D,SCMS,ADNb,CCMc,CAAD,CAAX,ADNc,GCMG,EAAjB,IDNF;AMmCJ,AFDA,MJjCIN,ECMEqE,AOI0C,CRVzC,CAAC9D,QAAJ,CCMa,ADNAjB,CCMC,ADNA,CCMD,CAAX,CDNe,CAAjB,CCMmB,CDNCC,CCMlB,ADNmB,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AMmCJ,AFDA,IJjCG,ECME,AOG2C;AF0BhD,AFDA,QIzBgD;AF2BhD,AFDA,MH5BI,AOE4C,IPFxC6E,QAAQ,IAAI,MAAhB,EAAwB;AK8B5B,AFDA,IIvBG,IPLGC,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAjB;AK8BN,AFDA,EI7BsB,MPChBA,WAAW,CAAC,CAAD,CAAX,GAAiB,KAAKE,kBAAL,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AK8BN,AFDA,II9BsB,EPEjB;AK8BL,AFDA,EI/BsB,aRLPpF;AMsCf,AFDA,IIhCsB,E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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const map = `\n____________________________________\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\n_bbw______________aa____________bb__\n_bbw______________aappppppppppa_bb__\n_bbw______________aappppppppppaaaaaS\n_bbw______________aappppppppppaaaaaE\n_bbw______________aa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbwwwooooooooooooaa________________\n_bbappoooopppppppoaa________________\n_bbappoooopppppppoaa________________\n_bbappooooooooooaaaa___pppppp_______\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwoooooooooooXaaaaaaaaaaaaaaaaaS\n_bbwwwooooooooooooaaaaaaaaaaaaaaaaaE\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwooooooooooooaa________________\n_bbaaa____________aa________________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbw_____________aaaaa______________\n_bbw______________aaaaa_____________\n_bbw______________aaaaa_____________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_ESw________________________________\n`;\n\nexport const mapDirection = `\n____________________________________\nwawwwwwwwwwwwwwwwwaawwwwwwwwwwwwwa__\neaaeeeeeeeeeeeeeeeaaeeeeeeeeeeeean__\n_sna______________sn____________sn__\n_sna______________aahhhhhhhhhha_sn__\n_sna______________aahhhhhhhhhhawaawa\n_sna______________aahhhhhhhhhhaeaaea\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_aaaaa____________sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh__________aaaa___vvvvvv_______\n_snaaa____________sn___vvvvvv_______\n_snaaa___________aaawwwaaaaaawwwwwwa\n_snaaa____________aaeeeaaaaaaeeeeeea\n_snaaa____________sn___vvvvvv_______\n_snaaa____________sn________________\n_snaaa____________sn________________\n_aaawwwwwwwwwwwwwwana_______________\n_aaaeeeeeeeeeeeeeeeaa_______________\n_sna_____________aaaaa______________\n_sna______________aaaaa_____________\n_sna______________aaaaa_____________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_aaa________________________________\n`;\n\nexport default map;\n","const MAX_PARKED_BIKES = 4;\n\nclass Cell {\n  constructor(world, type, x, y, allowed_direction) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n    this.allowed_direction = allowed_direction;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"SPAWN\") {\n      return true;\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 30\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 30\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // !! Draws directions in which agents are allowed to move\n    ctx.font = \"16px monospace\";\n    ctx.fillStyle = \"#ffffff\";\n    // make text slightly transparent\n    ctx.globalAlpha = 0.8;\n    let arrow = \"\";\n    if (this.allowed_direction === \"n\") {\n      arrow = \"↑\";\n    } else if (this.allowed_direction === \"s\") {\n      arrow = \"↓\";\n    } else if (this.allowed_direction === \"e\") {\n      arrow = \"→\";\n    } else if (this.allowed_direction === \"w\") {\n      arrow = \"←\";\n    } else if (this.allowed_direction === \"h\") {\n      arrow = \"↔\";\n    } else if (this.allowed_direction === \"v\") {\n      arrow = \"↕\";\n    }\n\n    ctx.fillText(arrow, canvas_x + 11, canvas_y + 20);\n    // reset transparency\n    ctx.globalAlpha = 1;\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(canvas_x + 2, canvas_y + squareSize - 8, squareSize - 4, 4);\n\n      if (this.bikes == MAX_PARKED_BIKES) {\n        ctx.fillStyle = \"#ff0707\";\n      } else {\n        ctx.fillStyle = \"#316cf4\";\n      }\n      ctx.fillRect(\n        canvas_x + 2,\n        canvas_y + squareSize - 8,\n        (squareSize + 4) * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#000000\";\n      ctx.font = \"12px monospace\";\n      ctx.fillText(\n        \"\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          this.drawBike(ctx, x * squareSize + i * 10, y * squareSize);\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    //!! Debug to show number of agents in cell\n    // if (\n    //   [\n    //     \"SPAWN\",\n    //     \"BIKE_PATH\",\n    //     \"PEDESTRIAN_PATH\",\n    //     \"ALL_PATH\",\n    //     \"PARKING\",\n    //     \"BUILDING_ENTRANCE\",\n    //   ].includes(this.type)\n    // ) {\n    //   ctx.font = \"12px monospace\";\n    //   ctx.fillStyle = \"black\";\n    //   // make text slightly transparent\n    //   ctx.globalAlpha = 0.3;\n    //   ctx.fillText(\n    //     \"B:\" + this.agents.filter(({ type }) => type === \"BIKE\").length,\n    //     canvas_x + 2,\n    //     canvas_y + 12\n    //   );\n    //   ctx.fillText(\n    //     \"P:\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n    //     canvas_x + 2,\n    //     canvas_y + 24\n    //   );\n    //   // reset transparency\n    //   ctx.globalAlpha = 1;\n    // }\n\n    // !! Draw coordinates\n    // ctx.font = \"11px monospace\";\n    // ctx.fillStyle = \"black\";\n    // // make text slightly transparent\n    // ctx.globalAlpha = 0.5;\n    // ctx.fillText(this.x + \",\", canvas_x, canvas_y + 10);\n    // ctx.fillText(this.y, canvas_x, canvas_y + 22);\n    // // reset transparency\n    // ctx.globalAlpha = 1;\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#e7b1b6\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#f3d8da\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#eaecef\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#cfd4d9\";\n        break;\n      case \"PARKING\":\n        color = \"#aeb5bc\";\n        break;\n      case \"EMPTY\":\n        color = \"#d5e6de\";\n        break;\n      case \"BUILDING\":\n        color = \"#a6c4f9\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#7ba6f7\";\n        break;\n      case \"EXIT\":\n        color = \"#e7b1b6\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y) {\n    ctx.fillStyle = \"#222529\";\n    ctx.fillRect(x + 6, y + 2, 5, 20);\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#fd7e14\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","import { addTimeToPark, addTimeToGoal } from \"./index\";\n\nclass Agent {\n  constructor(world, type, cell, strategy) {\n    this.world = world;\n    this.type = type;\n    this.spawn = cell;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.strategy = strategy;\n    this.move_to = null;\n    this.exitRate = 0.01; // The rate at which agents leave the building across stragegies.\n\n    // Variables for lotPreference\n    this.failedToPark = 0; // Tracks how many times the agent failed to park.\n    this.searchTime = 6; // How many ticks an agent is willing to search in a lot for a spot.\n    this.lotPreference = null; // Which lot is currently the preference to park for the agent.\n\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.calculatingPath = false;\n    this.stage = \"ENTERING\";\n\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\"\n      ? this.world.bikePathfinder\n      : this.world.pedestrianPathfinder;\n  }\n\n  hasParked() {\n    this.ticks_to_parked = this.ticks;\n    addTimeToPark(this.strategy, this.ticks_to_parked);\n  }\n\n  hasReachedGoal() {\n    this.ticks_to_goal = this.ticks;\n    addTimeToGoal(this.strategy, this.ticks_to_goal);\n  }\n\n  park() {\n    if (this.cell.canPark()) {\n      if (\n        this.type === \"BIKE\" &&\n        this.cell.type === \"PARKING\" &&\n        this.parked_cell === null\n      ) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n        this.hasParked();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unpark() {\n    if (\n      this.type === \"PEDESTRIAN\" &&\n      this.cell.type === \"PARKING\" &&\n      this.parked_cell !== null\n    ) {\n      this.cell.removeBike();\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n    }\n  }\n\n  changeMoveTo(x, y, callback) {\n    this.calculatingPath = true;\n    this.move_to = [x, y];\n    this.path = null;\n\n    const pathfinder = this.getPathfinder();\n    pathfinder.findPath(\n      this.cell.x,\n      this.cell.y,\n      this.move_to[0],\n      this.move_to[1],\n      (path) => {\n        if (path !== null) {\n          this.path = path;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n        this.calculatingPath = false;\n        if (callback && path !== null) {\n          callback();\n        }\n      }\n    );\n\n    pathfinder.calculate();\n  }\n\n  makeMove(nextCell) {\n    if (nextCell.checkAddAgent(this)) {\n      this.world.moveAgent(this, nextCell);\n      this.path.shift();\n    }\n  }\n\n  ///////////////////////\n  //    STRATEGIES     //\n  ///////////////////////\n  // 1) DEFAULT - Random lot, random spot.\n  // 2) PARKING LOT PREFERENCE - Specific lot, random spot.\n  // 3) PARKING LOT/SPOT PREFERENCE - Specific lot, random spot.\n  // ADD MORE!\n\n  // 1) DEFAULT - Random lot, random spot.\n  default() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const parkingCell = this.world.getRandomCellOfType(\"PARKING\");\n        this.changeMoveTo(parkingCell.x, parkingCell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.stage = \"ENTERING\";\n        }\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"Unknown stage: \", this.stage);\n        break;\n    }\n  }\n\n  // 2) PARKING LOT PREFERENCE - Agents goes to a specific lot, tried to park, after failing a few times goes to another lot.\n  // FUNCTIONS:\n  // Generates a random value between min and max, not including max.\n  randomValueInRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Takes in a lot and returns x, y coordinates next to it.\n  lotMove(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = 19;\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      coordinates[1] = this.randomValueInRange(21, 23);\n    }\n    if (location == \"mid\") {\n      coordinates[0] = 16;\n      coordinates[1] = 19;\n    }\n    if (location == \"west\") {\n      coordinates[0] = 3;\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // Takes a lot to search for parking in, returns x, y coordinates of a parking spot.\n  lotSearch(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = this.randomValueInRange(20, 30);\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      if (Math.random() < 0.66) {\n        coordinates[1] = this.randomValueInRange(19, 21);\n      } else {\n        coordinates[1] = 23;\n      }\n    }\n    if (location == \"mid\") {\n      coordinates[0] = this.randomValueInRange(10, 17);\n      coordinates[1] = this.randomValueInRange(17, 19);\n    }\n    if (location == \"west\") {\n      coordinates[0] = this.randomValueInRange(4, 6);\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // PARKING LOT PREFERENCE\n  parkingLotPreference() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const lotOptions = [\"north\", \"east\", \"mid\", \"west\"];\n        this.lotPreference =\n          lotOptions[Math.floor(Math.random() * lotOptions.length)];\n        if (\n          this.lotPreference == \"north\" &&\n          this.spawn.x == 35 &&\n          this.spawn.y == 5\n        ) {\n          var coordinates = [30, this.randomValueInRange(4, 7)];\n        } else {\n          var coordinates = this.lotMove(this.lotPreference);\n        }\n\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"MOVING_TO_LOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"SEARCHING_IN_LOT\";\n        }\n        break;\n      case \"SEARCHING_IN_LOT\":\n        var coordinates = this.lotSearch(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_SPOT\";\n        });\n        break;\n      case \"MOVING_TO_SPOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.failedToPark += 1;\n          if (this.failedToPark > this.searchTime) {\n            this.stage = \"CHANGEPREF\";\n            this.failedToPark = 0;\n          } else {\n            this.stage = \"SEARCHING_IN_LOT\";\n          }\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  // 3) parkingLotSpotPreference: specific lot and spot. Full? Spread out search from spot.\n  parkingLotSpotPreference() {}\n\n  // 4) closest parking spot from spawn\n  closest_strat() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        // BFS for the closest valid parking spot\n        let coords = {x:0, y:0};\n        let Q = [];\n        let grid = [];\n        const label = function (x, y) {\n          grid[y] ??= [];\n          grid[y][x] = 1;\n        };\n        label(this.cell.x, this.cell.y);\n        Q = [[this.cell.x, this.cell.y], ...Q];\n        BFS: while (Q.length) {\n          const V = Q.pop();\n          const cell = this.world.getCellAtCoordinates(V[0], V[1]);\n          if (cell.canPark()) {\n            coords = { x: V[0], y: V[1] };\n            break BFS;\n          }\n          const dirs = [\n            [V[1], V[0] + 1],\n            [V[1], V[0] - 1],\n            [V[1] + 1, V[0]],\n            [V[1] - 1, V[0]],\n          ];\n          for (const [y, x] of dirs) {\n            let next = this.world.state[y]?.[x];\n            let valid_types = [\n              \"SPAWN\",\n              \"BIKE_PATH\",\n              \"ALL_PATH\",\n              \"PARKING\",\n              \"EXIT\",\n            ];\n            if (\n              next !== undefined &&\n              valid_types.includes(next.type) &&\n              grid[y]?.[x] !== 1\n            ) {\n              label(x, y);\n              Q = [[x, y], ...Q];\n            }\n          }\n        }\n        this.changeMoveTo(coords.x, coords.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          this.stage = \"ENTERING\";\n        }\n        break;\n      // cases below are copied from default\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n  act() {\n    this.ticks += 1;\n    if (this.strategy == \"DEFAULT\") {\n      this.default();\n    } else if (this.strategy == \"lotPref\") {\n      this.parkingLotPreference();\n    } else if (this.strategy == \"closest\") {\n      this.closest_strat();\n    } else {\n      console.log(\"Unknown strategy: \", this.strategy);\n    }\n  }\n}\n\nexport default Agent;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import Cell from \"./Cell\";\nimport Agent from \"./Agent\";\nimport EasyStar from \"easystarjs\";\n\nfunction getDirectionArray(direction) {\n  switch (direction) {\n    case \"n\":\n      return [EasyStar.BOTTOM];\n    case \"s\":\n      return [EasyStar.TOP];\n    case \"e\":\n      return [EasyStar.LEFT];\n    case \"w\":\n      return [EasyStar.RIGHT];\n    case \"v\":\n      return [EasyStar.TOP, EasyStar.BOTTOM];\n    case \"h\":\n      return [EasyStar.LEFT, EasyStar.RIGHT];\n    default:\n      return [EasyStar.TOP, EasyStar.BOTTOM, EasyStar.LEFT, EasyStar.RIGHT];\n  }\n}\n\nclass World {\n  constructor(worldmap, mapDirection, selectedStrategies) {\n    this.state = [];\n    this.agents = [];\n\n    this.tickCount = 0;\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter((row) => row.length > 0);\n    const directionRows = mapDirection.split(\"\\n\").filter((row) => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      E: \"EXIT\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      _: \"EMPTY\",\n      o: \"BUILDING\",\n    };\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const directionRow = [...directionRows[y]];\n      const rowData = [...row].map((c, x) => {\n        const allowed_direction = directionRow[x];\n        const type = types[c];\n        const cell = new Cell(this, type, x, y, allowed_direction);\n\n        this.bikePathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n        this.pedestrianPathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.bikePathfinder.setAcceptableTiles([\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"EXIT\",\n    ]);\n    this.bikePathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.bikePathfinder.setTileCost(\"PARKING\", 4);\n\n    this.pedestrianPathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.pedestrianPathfinder.setAcceptableTiles([\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\",\n    ]);\n    this.pedestrianPathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.pedestrianPathfinder.setTileCost(\"PARKING\", 3);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  getRandomCellOfType(type) {\n    const cells = this.state.flat().filter((cell) => cell.type === type);\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n\n  getParkingLots() {\n    return this.state.flat().filter((cell) => cell.type === \"PARKING\");\n  }\n\n\n  // // Returns all neighbors of a cell\n  // getNeighbors(cell) {\n  //   const { x, y } = cell;\n  //   let neighbors = [];\n\n  //   // Get neighbors in all 4 directions\n  //   if (y > 0) {\n  //     neighbors.push(this.state[y - 1][x]);\n  //   }\n  //   if (y < this.state.length - 1) {\n  //     neighbors.push(this.state[y + 1][x]);\n  //   }\n  //   if (x > 0) {\n  //     neighbors.push(this.state[y][x - 1]);\n  //   }\n  //   if (x < this.state[y].length - 1) {\n  //     neighbors.push(this.state[y][x + 1]);\n  //   }\n  //   return neighbors;\n  // }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent(strategy) {\n    // Randomly pick a spawn cell\n    const spawn = this.getRandomCellOfType(\"SPAWN\");\n    const agent = new Agent(this, \"BIKE\", spawn, strategy);\n\n    if (spawn.checkAddAgent(agent)) {\n      // Add agent of type \"BIKE\" to this cell\n      spawn.addAgent(agent);\n      this.agents.push(agent);\n    }\n  }\n\n  // Remove agent\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n    agent.cell.removeAgent(agent);\n  }\n\n  // // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.tickCount++;\n    this.agents.sort(function () {\n      return 0.5 - Math.random();\n    });\n    for (const agent of this.agents) {\n      if(agent.type === \"BIKE\") {\n        agent.act();\n      } else if(agent.type === \"PEDESTRIAN\" && this.tickCount % 2 === 0) {\n        agent.act();\n      }\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap, { mapDirection } from \"./map\";\n\nimport World from \"./World\";\n\nconst STRATEGIES = [\n  \"DEFAULT\",\n  \"lotPref\",\n  \"closest\",\n];\n\n// Set default selected strategies\nlet selectedStrategies = [\n  \"DEFAULT\",\n  \"lotPref\",\n  \"closest\",\n];\n\nvar csvRowsPark = \"strategy,time\\n\";\nvar csvRowsGoal = \"strategy,time\\n\";\n\nvar timeToParkData = [selectedStrategies];\nvar timeToGoalData = [selectedStrategies];\n\nvar experimentMode = false;\nconst experiment_ticks = 10000;\n\nvar currentTick = 0;\n\nfunction reset() {\n  world = new World(worldmap, mapDirection);\n  timeToParkData = [selectedStrategies];\n  timeToGoalData = [selectedStrategies];\n  csvRowsPark = \"strategy,time\\n\";\n  csvRowsGoal = \"strategy,time\\n\";\n  DrawChart(\"time-to-park\", timeToParkData);\n  DrawChart(\"time-to-goal\", timeToGoalData);\n  currentTick = 0;\n  experimentMode = false;\n}\n\nfunction strategyName(strategy) {\n  return strategy\n    .toLowerCase()\n    .replace(/^_*(.)|_+(.)/g, (s, c, d) =>\n      c ? c.toUpperCase() : \" \" + d.toUpperCase()\n    );\n}\n\nconst squareSize = 32;\n\nlet tickdelay = 20;\nlet spawnspeed = 0.2;\nlet paused = false;\n\n// Onclick of #experiment-mode, start experiment\ndocument.getElementById(\"experiment-mode\").onclick = function () {\n  reset();\n  experimentMode = true;\n  paused = false;\n}\n\n\n// **********************************\n// Controls\n// **********************************\n\n// Spawn rate waves\nexport const automated_loop_length = 500;\nconst min_spawn_rate = 0.2;\nvar max_spawn_rate = 1;\nconst max_limit = 1;\n\n// return value for current bin using sine wave between min and max, over length of automated_loop_length\nfunction getSpawnRate(current_bin) {\n  return min_spawn_rate + (max_spawn_rate - min_spawn_rate) * Math.pow((Math.sin((current_bin / automated_loop_length) * 2 * Math.PI) + 1) / 2, 2);\n}\n\n// Create array of spawn rates of length automated_loop_length\nlet spawn_rates = []\nfunction updateSpawnRates() {\n  spawn_rates = [];\n  for (var i = 0; i < automated_loop_length; i++) {\n    spawn_rates.push(getSpawnRate(i));\n  }\n}\nupdateSpawnRates();\n\n// Draw bars for spawn_rate on canvas\nfunction drawSpawnRate(currentTick) {\n  document.getElementById(\"automated-spawn-rate-display\").innerHTML = Math.floor(spawn_rates[currentTick % automated_loop_length] * 100) + \"%\";\n  const canvas = document.getElementById(\"spawn-rate\");\n  const ctx = canvas.getContext(\"2d\");\n  const width = canvas.width;\n  const height = canvas.height;\n  const barWidth = width / automated_loop_length;\n  const barHeight = height / max_limit;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillStyle = \"#fbe7a5\";\n  ctx.fillRect(0, 0, width, height);\n  for (var i = 0; i < automated_loop_length; i++) {\n    ctx.fillStyle = \"#f6c344\";\n    ctx.fillRect(i * barWidth, height - spawn_rates[i] * barHeight, barWidth, spawn_rates[i] * barHeight);\n  }\n  const currentI = (currentTick % automated_loop_length)\n  ctx.fillStyle = \"#312708\";\n  ctx.fillRect(currentI * barWidth, height - spawn_rates[currentI] * barHeight - 2, barWidth * 4, spawn_rates[currentI] * barHeight + 2);\n}\ndrawSpawnRate(currentTick);\n\nlet spawn_rate_type = \"auto\";\n\n// Switch between spawn rate types\ndocument.getElementById(\"spawnrate-radio-auto\").addEventListener(\"change\", function (event) {\n  spawn_rate_type = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = true;\n});\ndocument.getElementById(\"spawnrate-radio-manual\").addEventListener(\"change\", function (event) {\n  spawn_rate_type = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = false;\n});\n\n// Switch between max_spawn_rate value\ndocument.getElementById(\"automatedPeak1\").addEventListener(\"change\", function (event) {\n  max_spawn_rate = 1;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak2\").addEventListener(\"change\", function (event) {\n  max_spawn_rate = 0.66;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak3\").addEventListener(\"change\", function (event) {\n  max_spawn_rate = 0.33;\n  updateSpawnRates();\n});\n\n\n\n// Reset button\ndocument.getElementById(\"reset\").addEventListener(\"click\", () => {\n  reset();\n});\n\n// Create HTML checkboxes for each strategy, and add them and remove them to selectedStrategies when enabled/disabled\nconst strategyCheckboxes = document.getElementById(\"strategy-checkboxes\");\nSTRATEGIES.forEach((strategy) => {\n  const container = document.createElement(\"div\");\n  container.classList.add(\"form-check\");\n  const checkbox = document.createElement(\"input\");\n  checkbox.classList.add(\"form-check-input\");\n  checkbox.type = \"checkbox\";\n  checkbox.id = strategy;\n  // Check the box if it's in selectedStrategies\n  checkbox.checked = selectedStrategies.includes(strategy);\n  checkbox.addEventListener(\"change\", () => {\n    if (checkbox.checked) {\n      selectedStrategies.push(strategy);\n    } else {\n      selectedStrategies = selectedStrategies.filter((s) => s !== strategy);\n    }\n    reset();\n  });\n  const label = document.createElement(\"label\");\n  label.htmlFor = strategy;\n  label.classList.add(\"form-check-label\");\n  label.appendChild(document.createTextNode(strategyName(strategy)));\n  strategyCheckboxes.appendChild(container);\n  container.appendChild(checkbox);\n  container.appendChild(label);\n});\n\n// Control play/pause button\ndocument.getElementById(\"play-pause\").addEventListener(\"click\", () => {\n  if (document.getElementById(\"play-pause\").innerHTML === \"Play\") {\n    document.getElementById(\"play-pause\").innerHTML = \"Pause\";\n    paused = false;\n  } else {\n    document.getElementById(\"play-pause\").innerHTML = \"Play\";\n    paused = true;\n  }\n});\n\n// Control tickdelay\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickdelay = e.target.value;\n});\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n  document.getElementById(\"manual-spawn-rate-display\").innerHTML = Math.round(spawnspeed * 100) + \"%\";\n});\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nlet world = new World(worldmap, mapDirection);\n\n// **********************************\n// This is where the simulation loop\n// goes later or something\n// **********************************\n\nfunction gameTick() {\n  if (!paused) {\n    // Spawn new agent sometimes\n    let rate = spawnspeed;\n    if (spawn_rate_type === \"auto\") {\n      rate = spawn_rates[currentTick % automated_loop_length];\n    }\n    if (Math.random() < rate) {\n      // Pick random strategy from selectedStrategies\n      if (selectedStrategies.length > 0) {\n        const strategy =\n          selectedStrategies[\n          Math.floor(Math.random() * selectedStrategies.length)\n          ];\n        world.spawnAgent(strategy);\n      }\n    }\n\n    // Move current agents\n    world.tick();\n    currentTick++;\n    drawSpawnRate(currentTick);\n    if (experimentMode) {\n      document.getElementById(\"experiment-progress\").style.width = (currentTick / experiment_ticks) * 100 + \"%\";\n    }\n    if (experimentMode && currentTick > experiment_ticks) {\n      openResultsModal();\n      document.getElementById(\"experiment-progress\").style.width = \"0%\";\n      experimentMode = false;\n    }\n  }\n  setTimeout(gameTick, tickdelay);\n}\n\ngameTick();\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\nfunction drawCanvas() {\n  for (const [y, row] of world.state.entries()) {\n    for (const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);\n\n// **********************************\n// Draw graphs for time-to-park and time-to-goal\n// **********************************\n\nconst charts = {};\n\ngoogle.charts.load(\"current\", { packages: [\"corechart\"] });\ngoogle.charts.setOnLoadCallback(() => {\n  DrawChart(\"time-to-park\", timeToParkData);\n  DrawChart(\"time-to-goal\", timeToGoalData);\n});\n\n\n// Render charts onclick of #render-charts\ndocument.getElementById(\"render-charts\").addEventListener(\"click\", () => {\n  openResultsModal();\n});\n\ndocument.getElementById(\"closeResultsModal\").addEventListener(\"click\", () => {\n  closeResultsModal();\n});\n\nfunction openResultsModal() {\n  DrawChart(\"time-to-park\", timeToParkData);\n  DrawChart(\"time-to-goal\", timeToGoalData);\n  document.getElementById(\"resultsModal\").style.display = \"block\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"block\";\n  paused = true;\n}\n\nfunction closeResultsModal() {\n  document.getElementById(\"resultsModal\").style.display = \"none\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"none\";\n  paused = false;\n}\n\nfunction DrawChart(id, data) {\n  // Create the data table.\n  var data = google.visualization.arrayToDataTable(data);\n\n  // Set chart options\n  var options = {\n    width: \"1100\",\n    height: 300,\n    bar: { gap: 0 },\n    chartArea: { width: \"100%\", height: \"80%\" },\n    legend: { position: \"bottom\" },\n    interpolateNulls: false,\n    histogram: {\n      maxNumBuckets: 50,\n      minValue: 0,\n      maxValue: 150,\n    },\n  };\n\n  // Instantiate and draw our chart, passing in some options.\n  if (!charts[id]) {\n    var chart = new google.visualization.Histogram(document.getElementById(id));\n    charts[id] = chart;\n  } else {\n    var chart = charts[id];\n  }\n  chart.draw(data, options);\n}\n\nexport function addTimeToPark(strategy, data) {\n  // Create array of 0's, with length of number of strategies,\n  // and set the index of the strategy to the data\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToParkData.push(row);\n  csvRowsPark += (`${strategy},${data}\\n`)\n}\n\nexport function addTimeToGoal(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToGoalData.push(row);\n  csvRowsGoal += (`${strategy},${data}\\n`)\n}\n\n// When button with id \"export-park\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-park\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsPark, `time-to-park`);\n}\n);\n\n// When button with id \"export-goal\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-goal\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsGoal, `time-to-goal`);\n}\n);\n\n// Function to download the csv file\nfunction downloadCSV(csv, filename) {\n  var csvFile;\n  var downloadLink;\n\n  // CSV file\n  csvFile = new Blob([csv], { type: \"text/csv\" });\n  downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename + `===${selectedStrategies.join(\"-\")}===peak-${max_spawn_rate}.csv`;\n\n  // Add hidden download link\n  downloadLink.href = window.URL.createObjectURL(csvFile);\n  downloadLink.style.display = \"none\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}