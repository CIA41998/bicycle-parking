{"version":3,"sources":["src/map.js","src/Cell.js","src/Agent.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["map","mapDirection","MAX_PARKED_BIKES","Cell","world","type","x","y","allowed_direction","agents","bikes","agent","filter","length","push","a","ctx","squareSize","drawDirection","drawCoords","drawCount","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","font","globalAlpha","arrow","fillText","String","padStart","bikeAgents","pedestrianAgents","forEach","i","drawBike","drawPedestrian","includes","Agent","cell","strategy","spawn","parked_cell","move_to","exitRate","failedToPark","searchTime","lotPreference","path","calculatingPath","stage","ticks","ticks_to_parked","ticks_to_goal","bikePathfinder","pedestrianPathfinder","addTimeToPark","addTimeToGoal","canPark","addBike","hasParked","removeBike","callback","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","checkAddAgent","moveAgent","shift","parkingCell","getRandomCellOfType","changeMoveTo","getCellAtCoordinates","makeMove","park","buildingCell","hasReachedGoal","Math","random","unpark","removeAgent","min","max","floor","location","coordinates","Array","randomValueInRange","lotOptions","lotMove","lotSearch","options","lot","coords","Q","grid","label","BFS","V","pop","dirs","next","state","valid_types","undefined","default","parkingLotPreference","closest_strat","getDirectionArray","direction","EasyStar","BOTTOM","TOP","LEFT","RIGHT","World","worldmap","selectedStrategies","tickCount","rows","split","row","directionRows","types","S","E","X","b","w","p","_","o","js","entries","directionRow","rowData","c","setDirectionalCondition","setGrid","setAcceptableTiles","setTileCost","cells","flat","addAgent","sort","act","STRATEGIES","csvRowsPark","csvRowsGoal","timeToParkData","timeToGoalData","experimentMode","experimentTicks","currentTick","reset","strategyName","toLowerCase","replace","s","d","toUpperCase","tickDelay","spawnspeed","paused","document","getElementById","onclick","automatedLoopLength","minSpawnRate","maxSpawnRate","maxLimit","getSpawnRate","currentBin","pow","sin","PI","spawnRates","updateSpawnRates","drawSpawnRate","innerHTML","canvas","getContext","width","height","barWidth","barHeight","clearRect","currentIndex","spawnRateType","addEventListener","event","target","value","disabled","strategyCheckboxes","container","createElement","classList","add","checkbox","id","checked","htmlFor","appendChild","createTextNode","e","round","gameTick","rate","spawnAgent","tick","style","openResultsModal","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","drawCanvas","draw","requestAnimationFrame","google","charts","load","packages","setOnLoadCallback","DrawChart","closeResultsModal","display","data","visualization","arrayToDataTable","bar","gap","interpolateNulls","chartArea","left","top","histogram","bucketSize","maxNumBuckets","minValue","maxValue","chart","Histogram","index","indexOf","fill","downloadCSV","csv","filename","csvFile","downloadLink","Blob","download","join","href","window","URL","createObjectURL","body","click","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","k","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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KAAKsE,oBAAL;MACD,CAFM,MAEA,IAAI,KAAKtE,QAAL,IAAiB,cAArB,EAAqC;QAC1C,KAAKuE,aAAL;MACD,CAFM,MAEA;QACL7C,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK3B,QAAvC;MACD;IACF;;;;;;gBAGYF;;;ACvoBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACviBA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS0E,iBAAT,CAA2BC,SAA3B,EAAsC;EACpC,QAAQA,SAAR;IACE,KAAK,GAAL;MACE,OAAO,CAACC,mBAAA,CAASC,MAAV,CAAP;;IA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const map = `\n____________________________________\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\n_bbw______________aa____________bb__\n_bbw______________aappppppppppa_bb__\n_bbw______________aappppppppppaaaaaS\n_bbw______________aappppppppppaaaaaE\n_bbw______________aa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbwwwooooooooooooaa________________\n_bbappoooopppppppoaa________________\n_bbappoooopppppppoaa________________\n_bbappooooooooooaaaa___pppppp_______\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwoooooooooooXaaaaaaaaaaaaaaaaaS\n_bbwwwooooooooooooaaaaaaaaaaaaaaaaaE\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwooooooooooooaa________________\n_bbaaa____________aa________________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbw_____________aaaaa______________\n_bbw______________aaaaa_____________\n_bbw______________aaaaa_____________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_ESw________________________________\n`;\n\nexport const mapDirection = `\n____________________________________\nwawwwwwwwwwwwwwwwwaawwwwwwwwwwwwwa__\neaaeeeeeeeeeeeeeeeaaeeeeeeeeeeeean__\n_sna______________sn____________sn__\n_sna______________aahhhhhhhhhha_sn__\n_sna______________aahhhhhhhhhhawaawa\n_sna______________aahhhhhhhhhhaeaaea\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_aaaaa____________sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh__________aaaa___vvvvvv_______\n_snaaa____________sn___vvvvvv_______\n_snaaa___________aaawwwaaaaaawwwwwwa\n_snaaa____________aaeeeaaaaaaeeeeeea\n_snaaa____________sn___vvvvvv_______\n_snaaa____________sn________________\n_snaaa____________sn________________\n_aaawwwwwwwwwwwwwwana_______________\n_aaaeeeeeeeeeeeeeeeaa_______________\n_sna_____________aaaaa______________\n_sna______________aaaaa_____________\n_sna______________aaaaa_____________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_aaa________________________________\n`;\n\nexport default map;\n","const MAX_PARKED_BIKES = 4;\n\nclass Cell {\n  constructor(world, type, x, y, allowed_direction) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n    this.allowed_direction = allowed_direction;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"SPAWN\") {\n      return true;\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 30\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 30\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // !! Draws directions in which agents are allowed to move\n    if (drawDirection) {\n      ctx.font = \"16px monospace\";\n      ctx.fillStyle = \"#ffffff\";\n      // make text slightly transparent\n      ctx.globalAlpha = 0.8;\n      let arrow = \"\";\n      if (this.allowed_direction === \"n\") {\n        arrow = \"↑\";\n      } else if (this.allowed_direction === \"s\") {\n        arrow = \"↓\";\n      } else if (this.allowed_direction === \"e\") {\n        arrow = \"→\";\n      } else if (this.allowed_direction === \"w\") {\n        arrow = \"←\";\n      } else if (this.allowed_direction === \"h\") {\n        arrow = \"↔\";\n      } else if (this.allowed_direction === \"v\") {\n        arrow = \"↕\";\n      }\n      ctx.fillText(arrow, canvas_x + 11, canvas_y + 20);\n      // reset transparency\n      ctx.globalAlpha = 1;\n    }\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(canvas_x + 2, canvas_y + squareSize - 8, squareSize - 4, 4);\n\n      if (this.bikes == MAX_PARKED_BIKES) {\n        ctx.fillStyle = \"#dc3545\";\n      } else {\n        ctx.fillStyle = \"#316cf4\";\n      }\n      ctx.fillRect(\n        canvas_x + 2,\n        canvas_y + squareSize - 8,\n        (squareSize + 4) * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.font = \"16px monospace\";\n      ctx.fillText(\n        \"\" + String(this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length).padStart(3, '0'),\n        canvas_x + 1.5,\n        canvas_y + 21\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          this.drawBike(ctx, x * squareSize + i * 10, y * squareSize);\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    //!! Debug to show number of agents in cell\n    if (\n      drawCount &&\n      [\n        \"SPAWN\",\n        \"BIKE_PATH\",\n        \"PEDESTRIAN_PATH\",\n        \"ALL_PATH\",\n        \"PARKING\",\n        \"BUILDING_ENTRANCE\",\n      ].includes(this.type)\n    ) {\n      ctx.font = \"12px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.3;\n      ctx.fillText(\n        \"B:\" + this.agents.filter(({ type }) => type === \"BIKE\").length,\n        canvas_x + 2,\n        canvas_y + 12\n      );\n      ctx.fillText(\n        \"P:\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n      ctx.globalAlpha = 1;\n    }\n\n    // !! Draw coordinates\n    if (drawCoords) {\n      ctx.font = \"11px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.5;\n      ctx.fillText(this.x + \",\", canvas_x, canvas_y + 10);\n      ctx.fillText(this.y, canvas_x, canvas_y + 22);\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#e7b1b6\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#f3d8da\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#eaecef\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#cfd4d9\";\n        break;\n      case \"PARKING\":\n        color = \"#aeb5bc\";\n        break;\n      case \"EMPTY\":\n        color = \"#d5e6de\";\n        break;\n      case \"BUILDING\":\n        color = \"#a6c4f9\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#7ba6f7\";\n        break;\n      case \"EXIT\":\n        color = \"#e7b1b6\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y) {\n    ctx.fillStyle = \"#222529\";\n    ctx.fillRect(x + 6, y + 2, 5, 20);\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#fd7e14\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","import { addTimeToPark, addTimeToGoal } from \"./index\";\n\nclass Agent {\n  constructor(world, type, cell, strategy) {\n    this.world = world;\n    this.type = type;\n    this.spawn = cell;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.strategy = strategy;\n    this.move_to = null;\n    this.exitRate = 0.01; // The rate at which agents leave the building across stragegies.\n\n    // Variables for lotPreference\n    this.failedToPark = 0; // Tracks how many times the agent failed to park.\n    this.searchTime = 6; // How many ticks an agent is willing to search in a lot for a spot.\n    this.lotPreference = null; // Which lot is currently the preference to park for the agent.\n\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.calculatingPath = false;\n    this.stage = \"ENTERING\";\n\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\"\n      ? this.world.bikePathfinder\n      : this.world.pedestrianPathfinder;\n  }\n\n  hasParked() {\n    this.ticks_to_parked = this.ticks;\n    addTimeToPark(this.strategy, this.ticks_to_parked);\n  }\n\n  hasReachedGoal() {\n    this.ticks_to_goal = this.ticks;\n    addTimeToGoal(this.strategy, this.ticks_to_goal);\n  }\n\n  park() {\n    if (this.cell.canPark()) {\n      if (\n        this.type === \"BIKE\" &&\n        this.cell.type === \"PARKING\" &&\n        this.parked_cell === null\n      ) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n        this.hasParked();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unpark() {\n    if (\n      this.type === \"PEDESTRIAN\" &&\n      this.cell.type === \"PARKING\" &&\n      this.parked_cell !== null\n    ) {\n      this.cell.removeBike();\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n    }\n  }\n\n  changeMoveTo(x, y, callback) {\n    this.calculatingPath = true;\n    this.move_to = [x, y];\n    this.path = null;\n\n    const pathfinder = this.getPathfinder();\n    pathfinder.findPath(\n      this.cell.x,\n      this.cell.y,\n      this.move_to[0],\n      this.move_to[1],\n      (path) => {\n        if (path !== null) {\n          this.path = path;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n        this.calculatingPath = false;\n        if (callback && path !== null) {\n          callback();\n        }\n      }\n    );\n\n    pathfinder.calculate();\n  }\n\n  makeMove(nextCell) {\n    if (nextCell.checkAddAgent(this)) {\n      this.world.moveAgent(this, nextCell);\n      this.path.shift();\n    }\n  }\n\n  ///////////////////////\n  //    STRATEGIES     //\n  ///////////////////////\n  // 1) DEFAULT - Random lot, random spot.\n  // 2) PARKING LOT PREFERENCE - Specific lot, random spot.\n  // 3) PARKING LOT/SPOT PREFERENCE - Specific lot, random spot.\n  // ADD MORE!\n\n  // 1) DEFAULT - Random lot, random spot.\n  default() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const parkingCell = this.world.getRandomCellOfType(\"PARKING\");\n        this.changeMoveTo(parkingCell.x, parkingCell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.stage = \"ENTERING\";\n        }\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"Unknown stage: \", this.stage);\n        break;\n    }\n  }\n\n  // 2) PARKING LOT PREFERENCE - Agents goes to a specific lot, tried to park, after failing a few times goes to another lot.\n  // FUNCTIONS:\n  // Generates a random value between min and max, not including max.\n  randomValueInRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Takes in a lot and returns x, y coordinates next to it.\n  lotMove(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = 19;\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      coordinates[1] = this.randomValueInRange(21, 23);\n    }\n    if (location == \"mid\") {\n      coordinates[0] = 16;\n      coordinates[1] = 19;\n    }\n    if (location == \"west\") {\n      coordinates[0] = 3;\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // Takes a lot to search for parking in, returns x, y coordinates of a parking spot.\n  lotSearch(location) {\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = this.randomValueInRange(20, 30);\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      if (Math.random() < 0.66) {\n        coordinates[1] = this.randomValueInRange(19, 21);\n      } else {\n        coordinates[1] = 23;\n      }\n    }\n    if (location == \"mid\") {\n      coordinates[0] = this.randomValueInRange(10, 17);\n      coordinates[1] = this.randomValueInRange(17, 19);\n    }\n    if (location == \"west\") {\n      coordinates[0] = this.randomValueInRange(4, 6);\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  // PARKING LOT PREFERENCE\n  parkingLotPreference() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        const lotOptions = [\"north\", \"east\", \"mid\", \"west\"];\n        this.lotPreference =\n          lotOptions[Math.floor(Math.random() * lotOptions.length)];\n        if (\n          this.lotPreference == \"north\" &&\n          this.spawn.x == 35 &&\n          this.spawn.y == 5\n        ) {\n          var coordinates = [30, this.randomValueInRange(4, 7)];\n        } else {\n          var coordinates = this.lotMove(this.lotPreference);\n        }\n\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"MOVING_TO_LOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"SEARCHING_IN_LOT\";\n        }\n        break;\n      case \"SEARCHING_IN_LOT\":\n        var coordinates = this.lotSearch(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_SPOT\";\n        });\n        break;\n      case \"MOVING_TO_SPOT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          // console.warn(\"Could not park\");\n          this.failedToPark += 1;\n          if (this.failedToPark > this.searchTime) {\n            this.stage = \"CHANGEPREF\";\n            this.failedToPark = 0;\n          } else {\n            this.stage = \"SEARCHING_IN_LOT\";\n          }\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  // 3) parkingLotSpotPreference: specific lot and spot. Full? Spread out search from spot.\n  parkingLotSpotPreference() {}\n\n  // 4) closest parking spot from spawn\n  closest_strat() {\n    switch (this.stage) {\n      case \"ENTERING\":\n        // BFS for the closest valid parking spot\n        let coords = {x:0, y:0};\n        let Q = [];\n        let grid = [];\n        const label = function (x, y) {\n          grid[y] ??= [];\n          grid[y][x] = 1;\n        };\n        label(this.cell.x, this.cell.y);\n        Q = [[this.cell.x, this.cell.y], ...Q];\n        BFS: while (Q.length) {\n          const V = Q.pop();\n          const cell = this.world.getCellAtCoordinates(V[0], V[1]);\n          if (cell.canPark()) {\n            coords = { x: V[0], y: V[1] };\n            break BFS;\n          }\n          const dirs = [\n            [V[1], V[0] + 1],\n            [V[1], V[0] - 1],\n            [V[1] + 1, V[0]],\n            [V[1] - 1, V[0]],\n          ];\n          for (const [y, x] of dirs) {\n            let next = this.world.state[y]?.[x];\n            let valid_types = [\n              \"SPAWN\",\n              \"BIKE_PATH\",\n              \"ALL_PATH\",\n              \"PARKING\",\n              \"EXIT\",\n            ];\n            if (\n              next !== undefined &&\n              valid_types.includes(next.type) &&\n              grid[y]?.[x] !== 1\n            ) {\n              label(x, y);\n              Q = [[x, y], ...Q];\n            }\n          }\n        }\n        this.changeMoveTo(coords.x, coords.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          this.stage = \"ENTERING\";\n        }\n        break;\n      // cases below are copied from default\n      case \"MOVING_TO_PARKING_ENTERING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"CHANGEPREF\":\n        var options = [\"north\", \"east\", \"mid\", \"west\"];\n\n        while (true) {\n          var lot = options[Math.floor(Math.random() * options.length)];\n\n          if (lot != this.lotPreference) {\n            this.lotPreference = lot;\n            break;\n          }\n        }\n\n        var coordinates = this.lotMove(this.lotPreference);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVING_TO_LOT\";\n        });\n        break;\n      case \"LEAVING_PARKING\":\n        const buildingCell =\n          this.world.getRandomCellOfType(\"BUILDING_ENTRANCE\");\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        }\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"UNPARKING\";\n        }\n        break;\n      case \"UNPARKING\":\n        this.unpark();\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n        } else {\n          this.stage = \"EXITED\";\n        }\n        break;\n      case \"EXITED\":\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"NO STAGE\");\n    }\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n  act() {\n    this.ticks += 1;\n    if (this.strategy == \"RANDOM_CHOICE\") {\n      this.default();\n    } else if (this.strategy == \"LOT_PREFERENCE\") {\n      this.parkingLotPreference();\n    } else if (this.strategy == \"CLOSEST_SPOT\") {\n      this.closest_strat();\n    } else {\n      console.log(\"Unknown strategy: \", this.strategy);\n    }\n  }\n}\n\nexport default Agent;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import Cell from \"./Cell\";\nimport Agent from \"./Agent\";\nimport EasyStar from \"easystarjs\";\n\nfunction getDirectionArray(direction) {\n  switch (direction) {\n    case \"n\":\n      return [EasyStar.BOTTOM];\n    case \"s\":\n      return [EasyStar.TOP];\n    case \"e\":\n      return [EasyStar.LEFT];\n    case \"w\":\n      return [EasyStar.RIGHT];\n    case \"v\":\n      return [EasyStar.TOP, EasyStar.BOTTOM];\n    case \"h\":\n      return [EasyStar.LEFT, EasyStar.RIGHT];\n    default:\n      return [EasyStar.TOP, EasyStar.BOTTOM, EasyStar.LEFT, EasyStar.RIGHT];\n  }\n}\n\nclass World {\n  constructor(worldmap, mapDirection, selectedStrategies) {\n    this.state = [];\n    this.agents = [];\n\n    this.tickCount = 0;\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter((row) => row.length > 0);\n    const directionRows = mapDirection.split(\"\\n\").filter((row) => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      E: \"EXIT\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      _: \"EMPTY\",\n      o: \"BUILDING\",\n    };\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const directionRow = [...directionRows[y]];\n      const rowData = [...row].map((c, x) => {\n        const allowed_direction = directionRow[x];\n        const type = types[c];\n        const cell = new Cell(this, type, x, y, allowed_direction);\n\n        this.bikePathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n        this.pedestrianPathfinder.setDirectionalCondition(x, y, getDirectionArray(allowed_direction));\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.bikePathfinder.setAcceptableTiles([\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"EXIT\",\n    ]);\n    this.bikePathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.bikePathfinder.setTileCost(\"PARKING\", 4);\n\n    this.pedestrianPathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.pedestrianPathfinder.setAcceptableTiles([\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\",\n    ]);\n    this.pedestrianPathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.pedestrianPathfinder.setTileCost(\"PARKING\", 3);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  getRandomCellOfType(type) {\n    const cells = this.state.flat().filter((cell) => cell.type === type);\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n\n  getParkingLots() {\n    return this.state.flat().filter((cell) => cell.type === \"PARKING\");\n  }\n\n\n  // // Returns all neighbors of a cell\n  // getNeighbors(cell) {\n  //   const { x, y } = cell;\n  //   let neighbors = [];\n\n  //   // Get neighbors in all 4 directions\n  //   if (y > 0) {\n  //     neighbors.push(this.state[y - 1][x]);\n  //   }\n  //   if (y < this.state.length - 1) {\n  //     neighbors.push(this.state[y + 1][x]);\n  //   }\n  //   if (x > 0) {\n  //     neighbors.push(this.state[y][x - 1]);\n  //   }\n  //   if (x < this.state[y].length - 1) {\n  //     neighbors.push(this.state[y][x + 1]);\n  //   }\n  //   return neighbors;\n  // }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent(strategy) {\n    // Randomly pick a spawn cell\n    const spawn = this.getRandomCellOfType(\"SPAWN\");\n    const agent = new Agent(this, \"BIKE\", spawn, strategy);\n\n    if (spawn.checkAddAgent(agent)) {\n      // Add agent of type \"BIKE\" to this cell\n      spawn.addAgent(agent);\n      this.agents.push(agent);\n    }\n  }\n\n  // Remove agent\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n    agent.cell.removeAgent(agent);\n  }\n\n  // // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.tickCount++;\n    this.agents.sort(function () {\n      return 0.5 - Math.random();\n    });\n    for (const agent of this.agents) {\n      if(agent.type === \"BIKE\") {\n        agent.act();\n      } else if(agent.type === \"PEDESTRIAN\" && this.tickCount % 2 === 0) {\n        agent.act();\n      }\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap, { mapDirection } from \"./map\";\n\nimport World from \"./World\";\n\nconst STRATEGIES = [\n  \"RANDOM_CHOICE\",\n  \"LOT_PREFERENCE\",\n  \"CLOSEST_SPOT\",\n];\n\n// Set default selected strategies\nlet selectedStrategies = [\n  \"RANDOM_CHOICE\",\n  \"LOT_PREFERENCE\",\n  \"CLOSEST_SPOT\",\n];\n\nvar csvRowsPark = \"strategy,time\\n\";\nvar csvRowsGoal = \"strategy,time\\n\";\n\nvar timeToParkData = [selectedStrategies];\nvar timeToGoalData = [selectedStrategies];\n\nvar experimentMode = false;\nconst experimentTicks = 10000;\n\nvar currentTick = 0;\n\nfunction reset() {\n  world = new World(worldmap, mapDirection);\n  timeToParkData = [selectedStrategies];\n  timeToGoalData = [selectedStrategies];\n  csvRowsPark = \"strategy,time\\n\";\n  csvRowsGoal = \"strategy,time\\n\";\n  currentTick = 0;\n  experimentMode = false;\n}\n\nfunction strategyName(strategy) {\n  return strategy\n    .toLowerCase()\n    .replace(/^_*(.)|_+(.)/g, (s, c, d) =>\n      c ? c.toUpperCase() : \" \" + d.toUpperCase()\n    );\n}\n\nconst squareSize = 32;\n\nlet tickDelay = 20;\nlet spawnspeed = 0.2;\nlet paused = false;\n\n// Onclick of #experiment-mode, start experiment\ndocument.getElementById(\"experiment-mode\").onclick = function () {\n  reset();\n  experimentMode = true;\n  paused = false;\n}\n\n\n// **********************************\n// Controls\n// **********************************\n\n// Spawn rate waves\nconst automatedLoopLength = 500;\nconst minSpawnRate = 0.2;\nvar maxSpawnRate = 1;\nconst maxLimit = 1;\n\n// return value for current bin using sine wave between min and max, over length of automatedLoopLength\nfunction getSpawnRate(currentBin) {\n  return minSpawnRate + (maxSpawnRate - minSpawnRate) * Math.pow((Math.sin((currentBin / automatedLoopLength) * 2 * Math.PI) + 1) / 2, 2);\n}\n\n// Create array of spawn rates of length automated_loop_length\nlet spawnRates = []\nfunction updateSpawnRates() {\n  spawnRates = [];\n  for (var i = 0; i < automatedLoopLength; i++) {\n    spawnRates.push(getSpawnRate(i));\n  }\n}\nupdateSpawnRates();\n\n// Draw bars for spawn_rate on canvas\nfunction drawSpawnRate(currentTick) {\n  document.getElementById(\"automated-spawn-rate-display\").innerHTML = Math.floor(spawnRates[currentTick % automatedLoopLength] * 100) + \"%\";\n  const canvas = document.getElementById(\"spawn-rate\");\n  const ctx = canvas.getContext(\"2d\");\n  const width = canvas.width;\n  const height = canvas.height;\n  const barWidth = width / automatedLoopLength;\n  const barHeight = height / maxLimit;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillStyle = \"#fbe7a5\";\n  ctx.fillRect(0, 0, width, height);\n  for (var i = 0; i < automatedLoopLength; i++) {\n    ctx.fillStyle = \"#f6c344\";\n    ctx.fillRect(i * barWidth, height - spawnRates[i] * barHeight, barWidth, spawnRates[i] * barHeight);\n  }\n  const currentIndex = (currentTick % automatedLoopLength)\n  ctx.fillStyle = \"#312708\";\n  ctx.fillRect(currentIndex * barWidth, height - spawnRates[currentIndex] * barHeight - 2, barWidth * 4, spawnRates[currentIndex] * barHeight + 2);\n}\ndrawSpawnRate(currentTick);\n\nlet spawnRateType = \"auto\";\n\n// Switch between spawn rate types\ndocument.getElementById(\"spawnrate-radio-auto\").addEventListener(\"change\", function (event) {\n  spawnRateType = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = true;\n});\ndocument.getElementById(\"spawnrate-radio-manual\").addEventListener(\"change\", function (event) {\n  spawnRateType = event.target.value;\n  document.getElementById(\"spawnspeed\").disabled = false;\n});\n\n// Switch between max_spawn_rate value\ndocument.getElementById(\"automatedPeak1\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 1;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak2\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 0.66;\n  updateSpawnRates();\n});\ndocument.getElementById(\"automatedPeak3\").addEventListener(\"change\", function (event) {\n  maxSpawnRate = 0.33;\n  updateSpawnRates();\n});\n\n\n\n// Reset button\ndocument.getElementById(\"reset\").addEventListener(\"click\", () => {\n  reset();\n});\n\n// Create HTML checkboxes for each strategy, and add them and remove them to selectedStrategies when enabled/disabled\nconst strategyCheckboxes = document.getElementById(\"strategy-checkboxes\");\nSTRATEGIES.forEach((strategy) => {\n  const container = document.createElement(\"div\");\n  container.classList.add(\"form-check\");\n  const checkbox = document.createElement(\"input\");\n  checkbox.classList.add(\"form-check-input\");\n  checkbox.type = \"checkbox\";\n  checkbox.id = strategy;\n  // Check the box if it's in selectedStrategies\n  checkbox.checked = selectedStrategies.includes(strategy);\n  checkbox.addEventListener(\"change\", () => {\n    if (checkbox.checked) {\n      selectedStrategies.push(strategy);\n    } else {\n      selectedStrategies = selectedStrategies.filter((s) => s !== strategy);\n    }\n    reset();\n  });\n  const label = document.createElement(\"label\");\n  label.htmlFor = strategy;\n  label.classList.add(\"form-check-label\");\n  label.appendChild(document.createTextNode(strategyName(strategy)));\n  strategyCheckboxes.appendChild(container);\n  container.appendChild(checkbox);\n  container.appendChild(label);\n});\n\n// Control play/pause button\ndocument.getElementById(\"play-pause\").addEventListener(\"click\", () => {\n  if (document.getElementById(\"play-pause\").innerHTML === \"Play\") {\n    document.getElementById(\"play-pause\").innerHTML = \"Pause\";\n    paused = false;\n  } else {\n    document.getElementById(\"play-pause\").innerHTML = \"Play\";\n    paused = true;\n  }\n});\n\n// Control tickdelay\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickDelay = e.target.value;\n});\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n  document.getElementById(\"manual-spawn-rate-display\").innerHTML = Math.round(spawnspeed * 100) + \"%\";\n});\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nlet world = new World(worldmap, mapDirection);\n\n// **********************************\n// This is where the simulation loop\n// goes later or something\n// **********************************\n\nfunction gameTick() {\n  if (!paused) {\n    // Spawn new agent sometimes\n    let rate = spawnspeed;\n    if (spawnRateType === \"auto\") {\n      rate = spawnRates[currentTick % automatedLoopLength];\n    }\n    if (Math.random() < rate) {\n      // Pick random strategy from selectedStrategies\n      if (selectedStrategies.length > 0) {\n        const strategy =\n          selectedStrategies[\n          Math.floor(Math.random() * selectedStrategies.length)\n          ];\n        world.spawnAgent(strategy);\n      }\n    }\n\n    // Move current agents\n    world.tick();\n    currentTick++;\n    drawSpawnRate(currentTick);\n    if (experimentMode) {\n      document.getElementById(\"experiment-progress\").style.width = (currentTick / experimentTicks) * 100 + \"%\";\n    }\n    if (experimentMode && currentTick > experimentTicks) {\n      openResultsModal();\n      document.getElementById(\"experiment-progress\").style.width = \"0%\";\n      experimentMode = false;\n    }\n  }\n  setTimeout(gameTick, tickDelay);\n}\n\ngameTick();\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\n// Control variables using checkboxes\nvar drawDirection = false;\nvar drawCoords = false;\nvar drawCount = false;\n\ndocument.getElementById(\"draw-direction\").addEventListener(\"change\", (e) => {\n  drawDirection = e.target.checked;\n});\ndocument.getElementById(\"draw-coords\").addEventListener(\"change\", (e) => {\n  drawCoords = e.target.checked;\n});\ndocument.getElementById(\"draw-count\").addEventListener(\"change\", (e) => {\n  drawCount = e.target.checked;\n});\n\nfunction drawCanvas() {\n  for (const [y, row] of world.state.entries()) {\n    for (const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);\n\n// **********************************\n// Draw graphs for time-to-park and time-to-goal\n// **********************************\n\ngoogle.charts.load(\"current\", { packages: [\"corechart\"] });\ngoogle.charts.setOnLoadCallback(() => {\n  DrawChart(\"time-to-park\", timeToParkData, 0);\n  DrawChart(\"time-to-goal\", timeToGoalData, 0);\n});\n\n\n// Render charts onclick of #render-charts\ndocument.getElementById(\"render-charts\").addEventListener(\"click\", () => {\n  openResultsModal();\n});\n\ndocument.getElementById(\"closeResultsModal\").addEventListener(\"click\", () => {\n  closeResultsModal();\n});\n\nfunction openResultsModal() {\n  // Get maximum value of combined timeToParkData and timeToGoalData\n  let max = 0;\n  timeToParkData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n  timeToGoalData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n\n  DrawChart(\"time-to-park\", timeToParkData, max);\n  DrawChart(\"time-to-goal\", timeToGoalData, max);\n  document.getElementById(\"resultsModal\").style.display = \"block\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"block\";\n  paused = true;\n}\n\nfunction closeResultsModal() {\n  document.getElementById(\"resultsModal\").style.display = \"none\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"none\";\n  paused = false;\n}\n\nfunction DrawChart(id, data, max) {\n  // Create the data table.\n  var data = google.visualization.arrayToDataTable(data);\n\n  // Set chart options\n  var options = {\n    width: \"1100\",\n    height: 300,\n    bar: { gap: 0 },\n    interpolateNulls: false,\n    chartArea: { left: 10, top: 0 },\n    histogram: {\n      bucketSize: 20,\n      maxNumBuckets: 50,\n      minValue: 0,\n      maxValue: max,\n    },\n  };\n\n  // Instantiate and draw our chart, passing in some options.\n  var chart = new google.visualization.Histogram(document.getElementById(id));\n  chart.draw(data, options);\n}\n\nexport function addTimeToPark(strategy, data) {\n  // Create array of 0's, with length of number of strategies,\n  // and set the index of the strategy to the data\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToParkData.push(row);\n  csvRowsPark += (`${strategy},${data}\\n`)\n}\n\nexport function addTimeToGoal(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToGoalData.push(row);\n  csvRowsGoal += (`${strategy},${data}\\n`)\n}\n\n// When button with id \"export-park\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-park\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsPark, `time-to-park`);\n}\n);\n\n// When button with id \"export-goal\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-goal\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsGoal, `time-to-goal`);\n}\n);\n\n// Function to download the csv file\nfunction downloadCSV(csv, filename) {\n  var csvFile;\n  var downloadLink;\n\n  // CSV file\n  csvFile = new Blob([csv], { type: \"text/csv\" });\n  downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename + `===${selectedStrategies.join(\"-\")}===peak-${maxSpawnRate}.csv`;\n\n  // Add hidden download link\n  downloadLink.href = window.URL.createObjectURL(csvFile);\n  downloadLink.style.display = \"none\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}